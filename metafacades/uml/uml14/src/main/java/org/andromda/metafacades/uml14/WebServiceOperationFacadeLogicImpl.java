// license-header java merge-point
//
// Generated by: MetafacadeLogicImpl.vsl in andromda-meta-cartridge.
package org.andromda.metafacades.uml14;

/**
 * Represents an operation on a web service.
 * MetafacadeLogic implementation for org.andromda.metafacades.uml.WebServiceOperationFacade.
 *
 * @see org.andromda.metafacades.uml.WebServiceOperationFacade
 */
public class WebServiceOperationFacadeLogicImpl
    extends WebServiceOperationFacadeLogic
{
    private static final long serialVersionUID = 34L;
    /**
     * Public constructor for WebServiceOperationFacadeLogicImpl
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade
     */
    public WebServiceOperationFacadeLogicImpl (Object metaObject, String context)
    {
        super(metaObject, context);
    }

    /**
     * Returns true/false depending on whether or not this web service operation is exposed.
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#isExposed()
     */
    protected boolean handleIsExposed()
    {
        // TODO put your implementation here.
        return false;
    }

    /**
     * The name of the the operation used within the test implementation.
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getTestImplementationName()
     */
    protected String handleGetTestImplementationName()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * The method call for the test implementation operation.
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getTestImplementationCall()
     */
    protected String handleGetTestImplementationCall()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * The signature for the test implementation operation.
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getTestImplementationSignature()
     */
    protected String handleGetTestImplementationSignature()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * The name for the test that tests this operation.
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getTestName()
     */
    protected String handleGetTestName()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * The call for the test that tests this operation.
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getTestCall()
     */
    protected String handleGetTestCall()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * The signature for the test that tests this operation.
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getTestSignature()
     */
    protected String handleGetTestSignature()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * WebService parameter style: bare or wrapped
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getParameterStyle()
     */
    protected String handleGetParameterStyle()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * The URL path for the REST webservice. If unspecified, the lowercase
     * /operation/parametername/{parametername}/ is used.
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getRestPath()
     */
    protected String handleGetRestPath()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * HTML request type for this REST service (GET, PUT, POST, QUERY, DELETE), used for method
     * annotations.
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getRestRequestType()
     */
    protected String handleGetRestRequestType()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * TODO: Model Documentation for
     * org.andromda.metafacades.uml.WebServiceOperationFacade.restCacheType
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getRestCacheType()
     */
    protected String handleGetRestCacheType()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * @Encoded T/F. default=false.
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#isRestEncoded()
     */
    protected boolean handleIsRestEncoded()
    {
        // TODO put your implementation here.
        return false;
    }

    /**
     * @Consumes(media type) annotation. i.e. json, atom, plain/text, xml.
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getRestConsumes()
     */
    protected String handleGetRestConsumes()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * @Produces(media type) annotation. i.e. json, atom, plain/text, xml.
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getRestProduces()
     */
    protected String handleGetRestProduces()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * Customized REST @Provider annotation, must be implemented in the  generated class.
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getRestProvider()
     */
    protected String handleGetRestProvider()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * Multipart/xml type for this returned part.
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getRestPartType()
     */
    protected String handleGetRestPartType()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * Asynchronous service implementation, suspend execution for X ms. Adds @Suspend annotation to
     * the operation. default=synchronous (suspend=0=wait forever).
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getRestSuspend()
     */
    protected int handleGetRestSuspend()
    {
        // TODO put your implementation here.
        return 0;
    }

    /**
     * REST security roles allowed. default=All.
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getRolesAllowed()
     */
    protected String handleGetRolesAllowed()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * If this REST service provides application/atom, or any service operations provide
     * application/atom
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#isRestAtom()
     */
    protected boolean handleIsRestAtom()
    {
        // TODO put your implementation here.
        return false;
    }

    /**
     * Is this operation a JAX-RS REST operation? JAX-WS and JAX-RS can be mixed in the same service
     * class. If false, all rest attributes and methods are ignored.
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#isRest()
     */
    protected boolean handleIsRest()
    {
        // TODO put your implementation here.
        return false;
    }

    /**
     * The URL path to test the REST webservice. Substitutes test values for {parametername} parts
     * of the service URL.
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getRestTestPath()
     */
    protected String handleGetRestTestPath()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * Returns the customized operation name. Defaults to operation.name, can be overridden with
     * WebServiceOperation stereotype operationName attribute. Prevents duplicate operation names in
     * wsdl for overloaded operations.
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getOperationName()
     */
    protected String handleGetOperationName()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * Checks is each service exception reference is some Exception type and has stereotype
     * WebFault, if CXF.
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#isWebFaultOnAllExceptions()
     */
    protected boolean handleIsWebFaultOnAllExceptions()
    {
        // TODO put your implementation here.
        return false;
    }

    /**
     * TODO: Model Documentation for
     * org.andromda.metafacades.uml.WebServiceOperationFacade.restResponseStatus
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getRestResponseStatus()
     */
    protected String handleGetRestResponseStatus()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * TODO: Model Documentation for
     * org.andromda.metafacades.uml.WebServiceOperationFacade.preAuthorize
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getPreAuthorize()
     */
    protected String handleGetPreAuthorize()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * TODO: Model Documentation for
     * org.andromda.metafacades.uml.WebServiceOperationFacade.postAuthorize
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getPostAuthorize()
     */
    protected String handleGetPostAuthorize()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * Represents an operation on a web service.
     * @see org.andromda.metafacades.uml.WebServiceOperationFacade#getWebServicePackageFacade()
     */
    protected Object handleGetWebServicePackageFacade()
    {
        // TODO add your implementation here!
        return null;
    }
}