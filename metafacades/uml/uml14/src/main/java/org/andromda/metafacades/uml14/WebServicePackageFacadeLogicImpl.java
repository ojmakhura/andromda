// license-header java merge-point
//
// Generated by: MetafacadeLogicImpl.vsl in andromda-meta-cartridge.
package org.andromda.metafacades.uml14;

import java.util.Collection;
import org.andromda.metafacades.uml.WebServiceOperationFacade;
import org.andromda.metafacades.uml.WebServicePackageFacade;

/**
 * TODO: Model Documentation for WebServicePackageFacade
 * MetafacadeLogic implementation for WebServicePackageFacade.
 *
 * @see WebServicePackageFacade
 */
public class WebServicePackageFacadeLogicImpl
    extends WebServicePackageFacadeLogic
{
    private static final long serialVersionUID = 34L;
    /**
     * Public constructor for WebServicePackageFacadeLogicImpl
     * @see WebServicePackageFacade
     */
    public WebServicePackageFacadeLogicImpl (Object metaObject, String context)
    {
        super(metaObject, context);
    }

    /**
     * TODO: Model Documentation for
     * WebServicePackageFacade.attributeFormDefault
     * @see WebServicePackageFacade#getAttributeFormDefault()
     */
    protected String handleGetAttributeFormDefault()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * TODO: Model Documentation for
     * WebServicePackageFacade.elementFormDefault
     * @see WebServicePackageFacade#getElementFormDefault()
     */
    protected String handleGetElementFormDefault()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * TODO: Model Documentation for WebServicePackageFacade.namespace
     * @see WebServicePackageFacade#getNamespace()
     */
    protected String handleGetNamespace()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * Package Abbreviation
     * @see WebServicePackageFacade#getPackageAbbr()
     */
    protected String handleGetPackageAbbr()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * Get the schema location for the generated schema file. By default this is the service package
     * name, without the leading http://, with all namespace customizations replaced by '.', in the
     * xsd/ directory beneath the wsdl directory:
     * xsd/${service.package.namespace.substring(7).replaceAll('/','.')}xsd
     * @see WebServicePackageFacade#getSchemaLocation()
     */
    protected String handleGetSchemaLocation()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * If this package contains XML elements referenced by other packages that are used by any
     * webservices, if using CXF/JAX-WS and schemas are imported.
     * @see WebServicePackageFacade#isMissingXmlSchema()
     */
    protected boolean handleIsMissingXmlSchema()
    {
        // TODO put your implementation here.
        return false;
    }

    /**
     * TODO: Model Documentation for
     * WebServicePackageFacade.getPackageReferences
     * @see WebServicePackageFacade#getPackageReferences(boolean)
     */
    protected Collection handleGetPackageReferences(boolean follow)
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * TODO: Model Documentation for WebServicePackageFacade
     * @see WebServicePackageFacade#getPackageReferences()
     */
    protected Collection<WebServicePackageFacade> handleGetPackageReferences()
    {
        // TODO add your implementation here!
        return null;
    }

    /**
     * TODO: Model Documentation for WebServicePackageFacade
     * @see WebServicePackageFacade#getAllowedOperations()
     */
    protected Collection<WebServiceOperationFacade> handleGetAllowedOperations()
    {
        // TODO add your implementation here!
        return null;
    }

    /**
     * TODO: Model Documentation for WebServicePackageFacade
     * @see WebServicePackageFacade#getPackages()
     */
    protected Collection<WebServicePackageFacade> handleGetPackages()
    {
        // TODO add your implementation here!
        return null;
    }
}