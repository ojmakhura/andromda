// license-header java merge-point
//
// Generated by: MetafacadeLogicImpl.vsl in andromda-meta-cartridge.
package org.andromda.metafacades.emf.uml22;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashSet;
import java.util.Objects;
import java.util.stream.Collectors;

import org.andromda.metafacades.uml.AttributeFacade;
import org.andromda.metafacades.uml.FrontEndAttribute;
import org.andromda.metafacades.uml.UMLMetafacadeUtils;
import org.andromda.metafacades.uml.UMLProfile;
import org.andromda.metafacades.uml.web.MetafacadeWebProfile;
import org.andromda.utils.StringUtilsHelper;

/**
 * TODO: Model Documentation for org.andromda.metafacades.uml.FrontEndComponent
 * MetafacadeLogic implementation for org.andromda.metafacades.uml.FrontEndComponent.
 *
 * @see org.andromda.metafacades.uml.FrontEndComponent
 */
public class FrontEndComponentLogicImpl
    extends FrontEndComponentLogic
{
    private static final long serialVersionUID = 34L;
    /**
     * Public constructor for FrontEndComponentLogicImpl
     * @see org.andromda.metafacades.uml.FrontEndComponent
     */
    public FrontEndComponentLogicImpl (Object metaObject, String context)
    {
        super(metaObject, context);
    }

    /**
     * TODO: Model Documentation for org.andromda.metafacades.uml.FrontEndComponent.generateTable
     * @see org.andromda.metafacades.uml.FrontEndComponent#getGenerateTable()
     */
    protected Boolean handleGetGenerateTable()
    {
        
        // TODO put your implementation here.
        return null;
    }

    /**
     * TODO: Model Documentation for org.andromda.metafacades.uml.FrontEndComponent.tableColumns
     * @see org.andromda.metafacades.uml.FrontEndComponent#getTableColumns()
     */
    protected Collection handleGetTableColumns()
    {
        String cols = Objects.toString(this.findTaggedValue(MetafacadeWebProfile.TAGGEDVALUE_TABLE_COLUMNS), "").trim();

        if(StringUtilsHelper.isNotBlank(cols)) {
            Collection columns = new ArrayList<>();

            String[] colList = cols.split("\\,");

            for(String col : colList) {
                for(AttributeFacade attribute : this.getAttributes()) {

                    if(attribute.getName().equals(col)) {
                        columns.add(attribute);
                    }
                }
            }

            return columns;
        }

        // TODO put your implementation here.
        return this.getAttributes().stream().filter(att -> !att.isMany()).collect(Collectors.toList());
    }

    /**
     * TODO: Model Documentation for org.andromda.metafacades.uml.FrontEndComponent.path
     * @see org.andromda.metafacades.uml.FrontEndComponent#getPath()
     */
    protected String handleGetPath()
    {
        return UMLMetafacadeUtils.getPath(this);
    }

    /**
     * TODO: Model Documentation for org.andromda.metafacades.uml.FrontEndComponent
     * @see org.andromda.metafacades.uml.FrontEndComponent#getFrontEndAttributes()
     */
    protected Collection<FrontEndAttribute> handleGetFrontEndAttributes()
    {
        // TODO add your implementation here!
        return null;
    }

    /**
     * TODO: Model Documentation for org.andromda.metafacades.uml.FrontEndComponent
     * @see org.andromda.metafacades.uml.FrontEndComponent#getMessageKey()
     */
    protected String handleGetMessageKey()
    {
        return StringUtilsHelper.toResourceMessageKey(getName());
    }

    @Override
    protected Collection<String> handleGetTableColumnNames() {
        String cols = Objects.toString(this.findTaggedValue(MetafacadeWebProfile.TAGGEDVALUE_TABLE_COLUMNS), "").trim();
        System.out.println(cols);

        if(StringUtilsHelper.isNotBlank(cols)) {
            return Arrays.asList(cols.split("\\,"));
        }

        // TODO put your implementation here.
        return this.getAttributes().stream().map(att -> att.getName()).collect(Collectors.toList());
    }

    @Override
    protected String handleGetBeanName() {
        String beanName = Objects.toString(this.findTaggedValue(UMLProfile.TAGGEDVALUE_PRESENTATION_COMPONENT_BEAN_NAME), "").trim();

        if(StringUtilsHelper.isNotBlank(beanName)) {
            return beanName;
        }

        return StringUtilsHelper.lowerCamelCaseName(getName());
    }

}