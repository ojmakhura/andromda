// license-header java merge-point
#if ($stringUtils.isNotBlank($entity.packageName))
package $entity.packageName;
#end

import jakarta.ejb.EntityContext;
import jakarta.ejb.RemoveException;

/**
 * @see ${entity.fullyQualifiedName}Bean
 */
public abstract class ${entity.name}BeanImpl
    extends ${entity.name}Bean
{
#foreach ($operation in $entity.businessOperations)
#set ($returnType = $operation.getterSetterReturnTypeName)
#set ($signature = $operation.signature)
#set ($visibility = $operation.visibility)
## Public static methods are exposed on the home
## interface instead of the component interface and must
## be prepended with "ejbHome"
#if ($visibility == "public" && $operation.static)
#set ($signature = "ejbHome${stringUtils.capitalize($signature)}")
#end
    /**
     * @see ${entity.fullyQualifiedName}${esc.hash}${operation.getSignature(false)}
     */
    $visibility $returnType $signature
#if ($operation.exceptionsPresent)
        throws $operation.exceptionList
#end
    {
        // TODO put your implementation here.
#if ($operation.returnTypePresent)

        // Dummy return value, just so that the file compiles
        return $operation.returnType.javaNullString;
#end
    }

#end
## Handle explicitly defined create methods.
#foreach ( $op in $class.getCreateMethods(true))
    /**
$op.getDocumentation("     * ")
     */
    public void createImpl(${op.typedArgumentList}) throws jakarta.ejb.CreateException
    {

    }

    /**
$op.getDocumentation("     * ")
     */
     public void ejbPostCreate(${op.typedArgumentList})
     {

     }

#end
}
