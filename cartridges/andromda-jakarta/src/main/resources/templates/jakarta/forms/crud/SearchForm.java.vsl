#set ($generatedFile = "${manageable.searchFormBeanFullPath}.java")
##
##  START TEMPLATE
##
// license-header java merge-point
// Generated by andromda-jsf cartridge (forms\crud\SearchForm.java.vsl) DO NOT EDIT!
package $manageable.manageablePackageName;

/**
 * This form holds the fields that are used in the search operation of ${manageable.name}
 *
 */
public final class $manageable.searchFormBeanClassName
    implements java.io.Serializable
{
#foreach ($field in $manageable.manageableSearchAttributes)
#setFieldWrapperTypeName($field $fieldTypeName)
#if ($field.defaultValuePresent)
    private $fieldTypeName $field.name = $field.defaultValue;
#else
    private $fieldTypeName $field.name;
#end

    /**
$field.getDocumentation("     * ")
     *
     * @return ${field.name}
     */
    public $fieldTypeName ${field.getterName}()
    {
#if ($field.complex)
        if (this.$field.name == null)
        {
            this.$field.name = new ${field.type.fullyQualifiedName}();
        }
#end
        return this.${field.name};
    }
#renderAlternateGetterForPrimitiveBoolean($field.name $fieldTypeName ${field.getterName})

    /**
$field.getDocumentation("     * ")
     *
     * @param ${field.name}In
     */
    public void ${field.setterName}($fieldTypeName ${field.name}In)
    {
#if($trimInputStrings && $field.type.stringType && !$field.many)
        this.$field.name = org.apache.commons.lang3.StringUtils.trimToNull(${field.name}In);
#else
        this.$field.name = ${field.name}In;
#end
    }

#end
#foreach ($member in $manageable.manageableSearchAssociationEnds)
#setAssociationEndFieldTypeName($member)
    private $fieldTypeName#if($member.many)[]#end $member.name;

    /**
$member.getDocumentation("     * ")
     *
     * @return $member.name
     */
    $member.visibility $fieldTypeName#if($member.many)[]#end ${member.getterName}()
    {
        return this.$member.name;
    }

    /**
$member.getDocumentation("     * ")
     *
     * @param ${member.name}In
     */
    $member.visibility void ${member.setterName}($fieldTypeName#if($member.many)[]#end ${member.name}In)
    {
## the code below avoids the "0 when null" issue of EL
#if($member.type.compositeIdentifier || $fieldType.primitive || (!$fieldType.integerType && !$fieldType.longType))
        this.$member.name = ${member.name}In;
#else
        //the code below avoids the "0 when null" issue of EL
#if ($member.many)
        this.$member.name = ${managedBeansPackage}.JsfUtils.removeZeros(${member.name}In);
#else
        this.$member.name = (${member.name}In == null || ${member.name}In == 0#if($fieldType.longType)L#end)? null: ${member.name}In;
#end
#end
    }

    private java.util.Collection $member.backingListName;

#set ($backingListMethod = $stringUtils.capitalize($member.backingListName))
    /**
     * The current collection of possible values of ${member.name}.
     *
     * @return ${member.backingListName}
     */
    public java.util.Collection get${backingListMethod}(){
        return ${member.backingListName};
    }

    /**
     * The current collection of possible values of ${member.name}.
     *
     * @return ${member.backingListName}In
     */
    public void set${backingListMethod}(java.util.Collection ${member.backingListName}In){
        this.${member.backingListName} = ${member.backingListName}In;
    }
#end

#renderCopyFrom($manageable.searchFormBeanClassName $manageable.manageableSearchAttributes $manageable.manageableSearchAssociationEnds)

    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = ${manageable.formSerialVersionUID}L;
}