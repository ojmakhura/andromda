##
## This macro adds the default role to the roles string
##
#macro (addDefaultRole $roles)
#if($stringUtils.isNotBlank($defaultRole))
#if($stringUtils.isBlank($roles))
#set($roles = $defaultRole)
#else
#set($roles = "${roles},${defaultRole}")
#end
#end
#end
##
<?xml version="1.0"?>
<!-- Generated by andromda-jsf cartridge (configuration\faces-config.xml.vsl) DO NOT EDIT! -->

<!-- =========== FULL CONFIGURATION FILE ================================== -->

<faces-config version="2.0"
    xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facesconfig_2_0.xsd">

#if($trinidad)
    <application>
        <default-render-kit-id>
            org.apache.myfaces.trinidad.core
        </default-render-kit-id>
    </application>
#end
    <factory>
        <exception-handler-factory>
            ${managedBeansPackage}.JsfExceptionHandlerFactory
        </exception-handler-factory>
    </factory>
    <lifecycle>
        <phase-listener>
            ${managedBeansPackage}.UseCasePhaseListener
        </phase-listener>
    </lifecycle>
    <!-- forms -->
## *** should go to the configuration
#set($formsScopeValue="#{useCaseScope}")
    <managed-bean>
        <managed-bean-name>viewVariables</managed-bean-name>
        <managed-bean-class>java.util.HashMap</managed-bean-class>
        <managed-bean-scope>${formsScopeValue}</managed-bean-scope>
    </managed-bean>
#foreach ($useCase in $useCases)
#foreach ($action in $useCase.actions)
#if (!$action.formFields.empty)
    <managed-bean>
        <managed-bean-name>$action.formBeanName</managed-bean-name>
        <managed-bean-class>$action.fullyQualifiedFormImplementationName</managed-bean-class>
        <managed-bean-scope>${formsScopeValue}</managed-bean-scope>
    </managed-bean>
#end
#end
#end
<!-- crud forms -->
#foreach ($manageable in $manageables)
    <managed-bean>
        <managed-bean-name>${manageable.formBeanName}</managed-bean-name>
        <managed-bean-class>${manageable.formBeanType}</managed-bean-class>
        <managed-bean-scope>${formsScopeValue}</managed-bean-scope>
    </managed-bean>
#end
    <!-- controllers -->
#foreach ($controller in $controllers)
    <managed-bean>
        <managed-bean-name>$controller.beanName</managed-bean-name>
        <managed-bean-class>$controller.fullyQualifiedImplementationName</managed-bean-class>
        <managed-bean-scope>${controllerScope}</managed-bean-scope>
    </managed-bean>
#end

    <!-- crud controllers -->

#foreach ($manageable in $manageables)
    <managed-bean>
        <managed-bean-name>${manageable.controllerBeanName}</managed-bean-name>
        <managed-bean-class>${manageable.controllerType}Impl</managed-bean-class>
        <managed-bean-scope>${controllerScope}</managed-bean-scope>
    </managed-bean>
#end
##Helpers
    <managed-bean>
        <managed-bean-name>autocompleteHelper</managed-bean-name>
        <managed-bean-class>${managedBeansPackage}.AutocompleteHelper</managed-bean-class>
        <managed-bean-scope>${controllerScope}</managed-bean-scope>
    </managed-bean>

#if($trinidad)    
    <!-- menuModel nodes -->

#foreach ($useCase in $useCases)
    <managed-bean>
       <managed-bean-name>navItem_$stringUtils.replace($useCase.forwardName, '-', '_')</managed-bean-name>
       <managed-bean-class>${managedBeansPackage}.NavigationItem</managed-bean-class>
       <managed-bean-scope>${navigationBeanScope}</managed-bean-scope>
       <managed-property>
          <property-name>label</property-name>
          <value>$useCase.titleKey</value>
       </managed-property>
       <managed-property>
          <property-name>viewId</property-name>
          <value>${useCase.path}.${jsfUtils.viewExtension}</value>
       </managed-property>
       <managed-property>
          <property-name>controllerBean</property-name>
          <value>#{${useCase.controller.beanName}}</value>
       </managed-property>
       <managed-property>
         <property-name>controllerAction</property-name>
         <value>startUseCase</value>
       </managed-property>
#set ($roles = $useCase.actionRoles)
#addDefaultRole($roles)
#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm) && $stringUtils.isNotBlank($roles) )
#if ($securityEnabled)
       <managed-property>
          <property-name>roles</property-name>
          <value>$roles</value>
       </managed-property>
#end
       <managed-property>
          <property-name>outcome</property-name>
          <value>$useCase.forwardName</value>
       </managed-property>
#set ($children = $useCase.navigationChildren)
#if (!$children.empty)
       <managed-property>
          <property-name>children</property-name>
          <list-entries>
            <value-class>${managedBeansPackage}.NavigationItem</value-class>
#foreach ($childUseCase in $children)
            <value>#{navItem_$stringUtils.replace($childUseCase.forwardName, '-', '_')}</value>
#end
          </list-entries>
       </managed-property>
#end
    </managed-bean>
#end

#foreach ($manageable in $manageables)
    <managed-bean>
       <managed-bean-name>navItem_$manageable.actionClassName</managed-bean-name>
       <managed-bean-class>${managedBeansPackage}.NavigationItem</managed-bean-class>
       <managed-bean-scope>${navigationBeanScope}</managed-bean-scope>
       <managed-property>
          <property-name>label</property-name>
          <value>$manageable.viewTitleKey</value>
       </managed-property>
       <managed-property>
          <property-name>viewId</property-name>
          <value>${manageable.viewFullPath}.${jsfUtils.viewExtension}</value>
       </managed-property>
       <managed-property>
          <property-name>controllerBean</property-name>
          <value>#{${manageable.controllerBeanName}}</value>
       </managed-property>
       <managed-property>
         <property-name>controllerAction</property-name>
         <value>startUseCase</value>
       </managed-property>
#set ($roles = $manageable.actionRoles)
#addDefaultRole($roles)
#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm) && $stringUtils.isNotBlank($roles))
#if ($securityEnabled)
       <managed-property>
          <property-name>roles</property-name>
          <value>${roles}</value>
       </managed-property>
#end
       <managed-property>
          <property-name>outcome</property-name>
          <value>${manageable.viewFullPath}</value>
       </managed-property>
    </managed-bean>

#end
    <!-- setup the (root of the) treemodel -->

    <managed-bean>
       <managed-bean-name>navTreeList</managed-bean-name>
       <managed-bean-class>
          java.util.ArrayList
       </managed-bean-class>
       <managed-bean-scope>${navigationBeanScope}</managed-bean-scope>
       <list-entries>
          <value-class>${managedBeansPackage}.NavigationItem</value-class>
#foreach ($useCase in $applicationUseCases)
          <value>#{navItem_$stringUtils.replace($useCase.forwardName, '-', '_')}</value>
#end
#foreach ($useCase in $useCases)
#if(!$useCase.registrationUseCase && !$useCase.entryUseCase)
#set ($parents = $useCase.navigationParents)
#if ($parents.empty)
          <value>#{navItem_$stringUtils.replace($useCase.forwardName, '-', '_')}</value>
#end
#end
#end
#foreach ($manageable in $manageables)
        <value>#{navItem_$manageable.actionClassName}</value>
#end
       </list-entries>
    </managed-bean>

    <managed-bean>
       <managed-bean-name>navTreeModel</managed-bean-name>
       <managed-bean-class>org.apache.myfaces.trinidad.model.ChildPropertyTreeModel</managed-bean-class>
       <managed-bean-scope>${navigationBeanScope}</managed-bean-scope>
       <managed-property>
         <property-name>childProperty</property-name>
         <value>children</value>
       </managed-property>
       <managed-property>
         <property-name>wrappedData</property-name>
         <value>#{navTreeList}</value>
       </managed-property>
    </managed-bean>

    <!-- setup the menuModel -->

    <managed-bean>
       <managed-bean-name>viewIdMenuModel</managed-bean-name>
       <managed-bean-class>org.apache.myfaces.trinidad.model.ViewIdPropertyMenuModel</managed-bean-class>
       <managed-bean-scope>${navigationBeanScope}</managed-bean-scope>
       <managed-property>
         <property-name>viewIdProperty</property-name>
         <value>viewId</value>
       </managed-property>
       <managed-property>
          <property-name>wrappedData</property-name>
          <value>#{navTreeModel}</value>
       </managed-property>
    </managed-bean>

    <managed-bean>
      <managed-bean-name>menuModel</managed-bean-name>
      <managed-bean-class>${managedBeansPackage}.MenuModelAdapter</managed-bean-class>
      <managed-bean-scope>${navigationBeanScope}</managed-bean-scope>
      <managed-property>
        <property-name>model</property-name>
        <value>#{viewIdMenuModel}</value>
      </managed-property>
      <managed-property>
        <property-name>aliasList</property-name>
        <list-entries>
          <value-class>java.lang.String</value-class>
#foreach ($useCase in $useCases)
          <!-- $useCase.titleValue views -->
#foreach ($view in $useCase.views)
          <value>${view.path}.${jsfUtils.viewExtension}</value>
          <value>${useCase.path}.${jsfUtils.viewExtension}</value>
#end
#end
#foreach($manageable in $manageables)
          <value>${manageable.viewFullPath}.${jsfUtils.viewExtension}</value>
          <value>${manageable.actionFullPath}.${jsfUtils.viewExtension}</value>
#end
        </list-entries>
      </managed-property>
    </managed-bean>
#end

    <!-- global navigational-rules -->
#if ($stringUtils.isNotBlank($securityRealm))

    <navigation-rule>
        <navigation-case>
            <from-outcome>logout</from-outcome>
            <to-view-id>/logout.${jsfUtils.viewExtension}</to-view-id>
            <redirect/>
        </navigation-case>
    </navigation-rule>
#end

#foreach ($enumeration in $enumerations)
    <converter>
        <converter-id>$enumeration.fullyQualifiedName</converter-id>
        <converter-class>$enumeration.fullyQualifiedConverterName</converter-class>
    </converter>
    <converter>
        <converter-for-class>$enumeration.fullyQualifiedName</converter-for-class>
        <converter-class>$enumeration.fullyQualifiedConverterName</converter-class>
    </converter>
#end

#foreach ($manageable in $allManageables)
    <converter>
        <converter-id>$manageable.converterType</converter-id>
        <converter-class>$manageable.converterType</converter-class>
    </converter>
    <converter>
        <converter-for-class>$manageable.converterType</converter-for-class>
        <converter-class>$manageable.converterType</converter-class>
    </converter>
#end

    <!-- faces-config merge-point -->
</faces-config>