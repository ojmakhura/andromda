#set ($generatedFile = "${manageable.converterFullPath}.java")
// license-header java merge-point
// Generated by andromda-jakarta cartridge (crud\EntityConverter.java.vsl) DO NOT EDIT!
package $manageable.manageablePackageName;

#if ($manageable.compositeIdentifier)
#set($identifierIsPrimitive = false)
#set($identifierIsIntegerType = false)
#set($identifierIsLongType = false)
#set($identifierIsStringType = false)
#set($identifierType = $manageable.fullyQualifiedIdentifierTypeName)
#else
#set($theIdentifierType = $manageable.identifiers.iterator().next().type)
#set($identifierIsPrimitive = $theIdentifierType.primitive)
#set($identifierIsIntegerType = $theIdentifierType.integerType)
#set($identifierIsLongType = $theIdentifierType.longType)
#set($identifierIsStringType = $theIdentifierType.stringType)
#if($identifierIsPrimitive)
#set($identifierType = $theIdentifierType.wrapperName)
#else
#set($identifierType = $manageable.fullyQualifiedIdentifierTypeName)
#end
#end

/**
 * Handles conversion of the entity id to a String.
 */
public class $manageable.converterClassName
    implements ${hibernateNamespace}.faces.convert.Converter
{
    /**
     * @see ${hibernateNamespace}.faces.convert.Converter#hash()getAsString(${hibernateNamespace}.faces.context.FacesContext, ${hibernateNamespace}.faces.component.UIComponent, Object)
     */
    public String getAsString(
        ${hibernateNamespace}.faces.context.FacesContext context,
        ${hibernateNamespace}.faces.component.UIComponent component,
        Object value)
        throws ${hibernateNamespace}.faces.convert.ConverterException
    {
        if(value == null)
            return "";

        final ${manageable.valueObjectClassName} vo;
        try {
            final ${manageable.fullyQualifiedIdentifierTypeName} id;
            if(value instanceof String)
                id = ${manageable.fullyQualifiedIdentifierTypeName}.valueOf((String)value);
            else
                id = (${manageable.fullyQualifiedIdentifierTypeName})value;
#if(!$manageable.compositeIdentifier && ($identifierIsIntegerType || $identifierIsLongType))                
            // To avoid errors caused by coerce to zero will return null if id is zero
            if(id == 0) {
                return null;
            }
#end
            vo = ${manageable.manageableServiceAccessorCall}.readById(id);
        } catch (Exception e) {
            e.printStackTrace();
            return ("Failed to locate object.");
        }
#if($manageable.displayAttribute.type.stringType)
        return vo.get$stringUtils.upperCamelCaseName($manageable.displayAttribute.name)();
#else
        return String.valueOf(vo.get$stringUtils.upperCamelCaseName($manageable.displayAttribute.name)());
#end
    }

    /**
     * @see ${hibernateNamespace}.faces.convert.Converter#hash()getAsObject(${hibernateNamespace}.faces.context.FacesContext, ${hibernateNamespace}.faces.component.UIComponent, String)
     */
    public Object getAsObject(
        ${hibernateNamespace}.faces.context.FacesContext context,
        ${hibernateNamespace}.faces.component.UIComponent component,
        String value)
        throws ${hibernateNamespace}.faces.convert.ConverterException
    {
#if($identifierIsStringType)
        return value;
#else        
        return value == null? null: ${identifierType}.valueOf(value);
#end
    }
}
