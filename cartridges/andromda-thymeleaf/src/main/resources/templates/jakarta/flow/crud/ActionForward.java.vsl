#set ($generatedFile = "${manageable.actionFullPath}.java")
// license-header java merge-point
// Generated by andromda-jsf cartridge (flow\ActionForward.java.vsl) DO NOT EDIT!
#if ($stringUtils.isNotBlank($manageable.manageablePackageName))
package $manageable.manageablePackageName;
#end

/**
 * This servlet is used to allow controller operation execution through
 * a URL call.
 */
@javax.servlet.annotation.WebServlet("${manageable.actionPath}.${facesServletExtension}")
public class $manageable.actionClassName
    extends javax.servlet.http.HttpServlet
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 1L;

    /**
     * @see javax.servlet.http.HttpServlet#hash()doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
     */
    @Override
    public void doGet(
        final javax.servlet.http.HttpServletRequest request,
        final javax.servlet.http.HttpServletResponse response)
        throws javax.servlet.ServletException, java.io.IOException
    {
        // - we need to resolve the controller differently since we're outside of the faces servlet
#set ($facesContextUtilsFullyQualifiedName = "FacesContextUtils")
#if ($stringUtils.isNotBlank($managedBeansPackage))
#set($facesContextUtilsFullyQualifiedName = "${managedBeansPackage}.${facesContextUtilsFullyQualifiedName}")
#end
        $manageable.controllerType controller =
            ($manageable.controllerType)${facesContextUtilsFullyQualifiedName}.resolveVariable(
                request, response,
                "$manageable.controllerBeanName");
        final String forwardPath;
        try 
        {
            forwardPath = controller.startUseCase();
        }
        catch(Throwable t)
        {
            throw new javax.servlet.ServletException(t);
        }
        request.getRequestDispatcher(forwardPath).forward(request, response);
    }

    /**
     * @see javax.servlet.http.HttpServlet#hash()doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
     */
    @Override
    public void doPost(
        final javax.servlet.http.HttpServletRequest request,
        final javax.servlet.http.HttpServletResponse response)
        throws javax.servlet.ServletException, java.io.IOException
    {
        this.doGet(request, response);
    }
}
