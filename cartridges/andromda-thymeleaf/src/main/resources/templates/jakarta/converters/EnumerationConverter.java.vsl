// license-header java merge-point
// Generated by andromda-jakarta cartridge (converters\EnumerationConverter.java.vsl) DO NOT EDIT!
#if ($stringUtils.isNotBlank($enumeration.packageName))
package $enumeration.packageName;
#end

/**
 * Handles conversion of the enumeration {@link ${enumeration.fullyQualifiedName}}
 * to a String and back.
 */
public class $enumeration.converterName
    implements ${jakartaNamespace}.faces.convert.Converter
{
    /**
     * @see ${jakartaNamespace}.faces.convert.Converter#hash()getAsString(${jakartaNamespace}.faces.context.FacesContext, ${jakartaNamespace}.faces.component.UIComponent, Object)
     */
    @Override
    public String getAsString(
        ${jakartaNamespace}.faces.context.FacesContext context,
        ${jakartaNamespace}.faces.component.UIComponent component,
        Object value)
        throws ${jakartaNamespace}.faces.convert.ConverterException
    {
        return (value == null || value.toString().trim().length() == 0) ? "":  ((${enumeration.fullyQualifiedName})value).toString();
    }

    /**
     * @see ${jakartaNamespace}.faces.convert.Converter#hash()getAsObject(${jakartaNamespace}.faces.context.FacesContext, ${jakartaNamespace}.faces.component.UIComponent, String)
     */
    @Override
    public Object getAsObject(
        ${jakartaNamespace}.faces.context.FacesContext context,
        ${jakartaNamespace}.faces.component.UIComponent component,
        String value)
        throws ${jakartaNamespace}.faces.convert.ConverterException
    {
        return value != null && value.trim().length() > 0 ? ${enumeration.fullyQualifiedName}.fromString(value) : null;
    }
}
