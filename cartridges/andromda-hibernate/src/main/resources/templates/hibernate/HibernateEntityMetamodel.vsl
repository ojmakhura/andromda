#set ($generatedFile = "${entity.packagePath}/${entity.entityName}_.java")
// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by hibernate/HibernateEntity.vsl in andromda-hibernate-cartridge#if($dateTimeGeneratedText) on $hibernateUtils.date#end.
//
#if ($stringUtils.isNotBlank($entity.packageName))
package $entity.packageName;
#end

#if(!$entity.generalization)
import java.io.Serializable;

#end
/**
$entity.getDocumentation(" * ")
 */

// HibernateEntityMetamodel.vsl annotations merge-point
@${hibernateNamespace}.annotation.Generated(value = "org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor")
@${hibernateNamespace}.persistence.metamodel.StaticMetamodel(${entity.entityName}.class)
public class ${entity.entityName}_
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = ${entity.serialVersionUID}L;

#foreach($attribute in $entity.attributes)
    public static volatile ${hibernateNamespace}.persistence.metamodel.#if($attribute.many)ListAttribute#{else}SingularAttribute#{end}<${entity.entityName}, $attribute.type.fullyQualifiedName> $attribute.name;
#end
#foreach($associationEnd in $entity.associationEnds)
#set ($target = $associationEnd.otherEnd)
#if($target.list)
#set ($metaType = "ListAttribute")
#elseif($target.set)
#set ($metaType = "SetAttribute")
#else
#set ($metaType = "ListAttribute")
#end
    public static volatile ${hibernateNamespace}.persistence.metamodel.$metaType<${entity.entityName}, $target.type.fullyQualifiedName> $target.name;
#end

#foreach($attribute in $entity.attributes)
    public static final String $attribute.name.toUpperCase() = "$attribute.name";
#end
#foreach($associationEnd in $entity.associationEnds)
#set ($target = $associationEnd.otherEnd)
    public static final String $target.name.toUpperCase() = "$target.name";
#end
}