// license-header java merge-point
//
// Generated by: MetafacadeLogicImpl.vsl in andromda-meta-cartridge.
package org.andromda.cartridges.hibernate.metafacades;

import java.text.MessageFormat;

import org.andromda.cartridges.hibernate.HibernateProfile;
import org.andromda.metafacades.uml.UMLProfile;
import org.apache.commons.lang3.StringUtils;

/**
 * Represents an operation in an entity EJB bean POJO.
 * MetafacadeLogic implementation for org.andromda.cartridges.hibernate.metafacades.HibernateOperation.
 *
 * @see org.andromda.cartridges.hibernate.metafacades.HibernateOperation
 */
public class HibernateOperationLogicImpl
    extends HibernateOperationLogic
{
    private static final long serialVersionUID = 34L;
    /**
     * Public constructor for HibernateOperationLogicImpl
     * @see org.andromda.cartridges.hibernate.metafacades.HibernateOperation
     */
    public HibernateOperationLogicImpl (Object metaObject, String context)
    {
        super(metaObject, context);
    }

    /**
     * True/false on whether or not this operation is an EJB business operation.  This returns true
     * if the operation is not one of the following:
     * Create Method
     * Finder or Query Method
     * Select Method
     * @see org.andromda.cartridges.hibernate.metafacades.HibernateOperation#isBusinessOperation()
     */
    protected boolean handleIsBusinessOperation()
    {
        return !this.isCreateMethod() && !this.isFinderMethod() && !this.isSelectMethod();
    }

    /**
     * True/false on whether or not this operation represents a select method.
     * @see org.andromda.cartridges.hibernate.metafacades.HibernateOperation#isSelectMethod()
     */
    protected boolean handleIsSelectMethod()
    {
        return this.hasStereotype(HibernateProfile.STEREOTYPE_SELECT_METHOD);
    }

    /**
     * Returns true if the associated operation has the <<PrePersist>> stereotype.
     * NOTE: The method signature must return void and have no args.
     * @see org.andromda.cartridges.hibernate.metafacades.HibernateOperation#isPrePersist()
     */
    protected boolean handleIsPrePersist()
    {
        return this.hasStereotype(HibernateProfile.STEREOTYPE_PRE_PERSIST);
    }

    /**
     * Returns true if the associated operation has the <<PostPersist>> stereotype.
     * NOTE: The method signature must return void and have no args.
     * @see org.andromda.cartridges.hibernate.metafacades.HibernateOperation#isPostPersist()
     */
    protected boolean handleIsPostPersist()
    {
        return this.hasStereotype(HibernateProfile.STEREOTYPE_POST_PERSIST);
    }

    /**
     * Returns true if the associated operation has the <<PreRemove>> stereotype.
     * NOTE: The method signature must return void and have no args.
     * @see org.andromda.cartridges.hibernate.metafacades.HibernateOperation#isPreRemove()
     */
    protected boolean handleIsPreRemove()
    {
        return this.hasStereotype(HibernateProfile.STEREOTYPE_PRE_REMOVE);
    }

    /**
     * Returns true if the associated operation has the <<PostRemove>> stereotype.
     * NOTE: The method signature must return void and have no args.
     * @see org.andromda.cartridges.hibernate.metafacades.HibernateOperation#isPostRemove()
     */
    protected boolean handleIsPostRemove()
    {
        return this.hasStereotype(HibernateProfile.STEREOTYPE_POST_REMOVE);
    }

    /**
     * Returns true if the associated operation has the <<PreUpdate>> stereotype.
     * NOTE: The method signature must return void and have no args.
     * @see org.andromda.cartridges.hibernate.metafacades.HibernateOperation#isPreUpdate()
     */
    protected boolean handleIsPreUpdate()
    {
        return this.hasStereotype(HibernateProfile.STEREOTYPE_PRE_UPDATE);
    }

    /**
     * Returns true if the associated operation has the <<PostUpdate>> stereotype.
     * NOTE: The method signature must return void and have no args.
     * @see org.andromda.cartridges.hibernate.metafacades.HibernateOperation#isPostUpdate()
     */
    protected boolean handleIsPostUpdate()
    {
        return this.hasStereotype(HibernateProfile.STEREOTYPE_POST_UPDATE);
    }

    /**
     * Returns true if the associated operation has the <<PostLoad>> stereotype.
     * NOTE: The method signature must return void and have no args.
     * @see org.andromda.cartridges.hibernate.metafacades.HibernateOperation#isPostLoad()
     */
    protected boolean handleIsPostLoad()
    {
        return this.hasStereotype(HibernateProfile.STEREOTYPE_POST_LOAD);
    }

    /**
     * Returns true if this operation is marked with any of the lifecycle callback stereotypes like
     * PrePersist, PostPersist, PreRemove, PostRemove, PreUpdate, PostUpdate or PostLoad.
     * @see org.andromda.cartridges.hibernate.metafacades.HibernateOperation#isLifecycleCallback()
     */
    protected boolean handleIsLifecycleCallback()
    {
        return this.isPostLoad() || this.isPostPersist() || this.isPostRemove() || this.isPostUpdate()
                || this.isPrePersist() || this.isPreRemove() || this.isPreUpdate();
    }

    /**
     * The name of the operation used within the entity implementation.
     * @see org.andromda.cartridges.hibernate.metafacades.HibernateOperation#getImplementationName()
     */
    protected String handleGetImplementationName()
    {
        return this.getImplementationOperationName(StringUtils.capitalize(this.getName()));
    }

    /**
     * The method call for the implementation operation.
     * @see org.andromda.cartridges.hibernate.metafacades.HibernateOperation#getImplementationCall()
     */
    protected String handleGetImplementationCall()
    {
        return this.getImplementationOperationName(StringUtils.capitalize(this.getCall()));
    }

    /**
     * The signature for the implementation operation.
     * @see org.andromda.cartridges.hibernate.metafacades.HibernateOperation#getImplementationSignature()
     */
    protected String handleGetImplementationSignature()
    {
        return this.getImplementationOperationName(StringUtils.capitalize(this.getSignature()));
    }

    /**
     * Returns true if the operation has the <<CreateMethod>> stereotype.
     * @see org.andromda.cartridges.hibernate.metafacades.HibernateOperation#isCreateMethod()
     */
    protected boolean handleIsCreateMethod()
    {
        return this.hasStereotype(HibernateProfile.STEREOTYPE_CREATE_METHOD);
    }

    /**
     * Returns true if the operation is a finder or query operation.
     * @see org.andromda.cartridges.hibernate.metafacades.HibernateOperation#isFinderMethod()
     */
    protected boolean handleIsFinderMethod()
    {
        return this.hasStereotype(UMLProfile.STEREOTYPE_FINDER_METHOD) || this.isQuery();
    }

    /**
     * Retrieves the implementationOperatName by replacing the
     * <code>replacement</code> in the
     * {@link EJB3Globals#IMPLEMENTATION_OPERATION_NAME_PATTERN}
     *
     * @param replacement the replacement string for the pattern.
     * @return the operation name
     */
    private String getImplementationOperationName(final String replacement) {
        String implementationNamePattern = (String) this
                .getConfiguredProperty(HibernateGlobals.IMPLEMENTATION_OPERATION_NAME_PATTERN);

        return MessageFormat.format(implementationNamePattern, StringUtils.trimToEmpty(replacement));
    }
}