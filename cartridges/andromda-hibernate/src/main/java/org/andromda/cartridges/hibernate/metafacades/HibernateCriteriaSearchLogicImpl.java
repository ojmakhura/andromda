// license-header java merge-point
//
// Generated by: MetafacadeLogicImpl.vsl in andromda-meta-cartridge.
package org.andromda.cartridges.hibernate.metafacades;

import java.util.ArrayList;
import java.util.Collection;

/**
 * TODO: Model Documentation for
 * org.andromda.cartridges.hibernate.metafacades.HibernateCriteriaSearch
 * MetafacadeLogic implementation for org.andromda.cartridges.hibernate.metafacades.HibernateCriteriaSearch.
 *
 * @see org.andromda.cartridges.hibernate.metafacades.HibernateCriteriaSearch
 */
public class HibernateCriteriaSearchLogicImpl
    extends HibernateCriteriaSearchLogic
{
    private static final long serialVersionUID = 34L;
    /**
     * Public constructor for HibernateCriteriaSearchLogicImpl
     * @see org.andromda.cartridges.hibernate.metafacades.HibernateCriteriaSearch
     */
    public HibernateCriteriaSearchLogicImpl (Object metaObject, String context)
    {
        super(metaObject, context);
    }

    /**
     * @param follow
     * @return super.getAttributes(follow).getType()
     * @see org.andromda.cartridges.hibernate.metafacades.HibernateEntityOperation#getImplementationCall()
     */
    protected Collection<HibernateCriteriaAttributeLogic> handleGetAttributes(boolean follow)
    {
        Collection<HibernateCriteriaAttributeLogic> arguments = new ArrayList<HibernateCriteriaAttributeLogic>();
        for (Object parameter : super.getAttributes(follow))
        {
            arguments.add((HibernateCriteriaAttributeLogic)((HibernateCriteriaAttributeLogic)parameter).getType());
        }
        return arguments;
    }
}