<cartridge>

    <templateEngine className="org.andromda.templateengines.velocity.VelocityTemplateEngine">
        <macrolibrary name="templates/spring/RenderPreconditions.vm"/>
        <macrolibrary name="templates/spring/ejb/SpringSessionBean.vm"/>
        <macrolibrary name="templates/spring/ejb/ejb-jar.xml.vm"/>
        <!-- cartridge-macrolibrary merge-point-->
    </templateEngine>

    <templateObject name="stringUtils" className="org.andromda.utils.StringUtilsHelper"/>
    <templateObject name="springUtils" className="org.andromda.cartridges.spring.SpringUtils">
        <property reference="richClient"/>
    </templateObject>
    <templateObject name="entityUtils" className="org.andromda.metafacades.uml.EntityMetafacadeUtils"/>
    <templateObject name="escapeUtils" className="org.apache.commons.text.StringEscapeUtils"/>
    <templateObject name="hibernateUtils" className="org.andromda.cartridges.spring.SpringHibernateUtils">
        <property reference="hibernateVersion"/>
        <property reference="hibernateXMLPersistence"/>
        <property reference="hibernateMappingStrategy"/>
    </templateObject>
    <templateObject name="converter" className="org.andromda.utils.JavaTypeConverter">
        <property reference="javaTypeConversionIgnoreList"/>
    </templateObject>
    <!-- cartridge-templateObject merge-point-->

    <templatePostProcessor className="org.andromda.core.common.ImportBeautifierPostProcessorImpl"/>

    <property reference="projectId"/>
    <property reference="projectName"/>
    <property reference="projectGroupId"/>
    <property reference="projectVersion"/>
    <property reference="driver"/>
    <property reference="username"/>
    <property reference="password"/>
    <property reference="connectionUrl"/>
    <property reference="testDriver"/>
    <property reference="testUsername"/>
    <property reference="testPassword"/>
    <property reference="testConnectionUrl"/>
    <property reference="testDialect"/>
    <property reference="dataSource"/>
    <property reference="hibernatePoolSize"/>
    <property reference="hibernateTransactionManagerStrategy"/>
    <property reference="hibernateUserTransactionName"/>
    <property reference="hibernateTransactionManagerLookup"/>
    <property reference="hibernateUseOuterJoin"/>
    <property reference="hibernateShowSql"/>
    <property reference="hibernateJndiName"/>
    <property reference="hibernateDialect"/>
    <property reference="hibernateDefaultSchema"/>
    <property reference="hibernateMaxFetchDepth"/>
    <property reference="hibernateJdbcFetchSize"/>
    <property reference="hibernateDefaultBatchFetchSize"/>
    <property reference="hibernateJdbcBatchSize"/>
    <property reference="hibernateConnectionReleaseMode"/>
    <property reference="hibernateEnableCache"/>
    <property reference="hibernateJdbcUseScrollableResultSet"/>
    <property reference="hibernateJdbcUseStreamsForBinary"/>
    <property reference="hibernateHbm2DDLAuto"/>
    <property reference="hibernateQuerySubstitutions"/>
    <property reference="hibernateCacheProvider"/>
    <property reference="hibernateQueryCacheFactory"/>
    <property reference="hibernateTransactionFactoryClass"/>
    <property reference="hibernateInterceptorFlushMode"/>
    <property reference="applicationContext"/>
    <property reference="applicationContextManageable"/>
    <property reference="applicationContextDataSource"/>
    <property reference="applicationContextLocalDataSource"/>
    <property reference="applicationContextRemoteEjb"/>
    <property reference="applicationContextLocalEjb"/>
    <property reference="applicationContextServer"/>
    <property reference="applicationContextClient"/>
    <property reference="applicationContextOsgiExport"/>
    <property reference="applicationContextOsgiImport"/>
    <property reference="osgi"/>
    <property reference="beanRefFactory"/>
    <property reference="beanRefFactoryId"/>
    <property reference="beanRefFactoryEjbId"/>
    <property reference="beanNamePrefix"/>
    <property reference="transactionManager"/>
    <property reference="localTransactionManager"/>
    <property reference="userTransactionName"/>
    <property reference="transactionManagerName"/>
    <property reference="sessionFactory"/>
    <property reference="serviceLocatorName"/>
    <property reference="serviceLocatorDefaultFactoryId"/>
    <property reference="springTypesPackage"/>
    <property reference="springCommonTypesPackage"/>
    <property reference="springPresentationTypesPackage"/>
    <property reference="manageableServiceLocatorName"/>
    <property reference="clientServiceLocatorName"/>
    <property reference="clientServiceLocatorClassloaderSwitching"/>
    <property reference="clientExceptionHandlingAdviceName"/>
    <property reference="criteriaSearchBaseName"/>
    <property reference="principalStoreName"/>
    <property reference="externalPrincipalStoreClass"/>
    <property reference="externalPrincipalStoreGetter"/>
    <property reference="externalPrincipalStoreGetterType"/>
    <property reference="openSessionInViewFilterName"/>
    <property reference="ejbViewType"/>
    <property reference="ejbRemoteProxyFactoryBean"/>
    <property reference="ejbLocalProxyFactoryBean"/>
    <property reference="ejbSessionBeanBaseInterfaceLocal"/>
    <property reference="ejbSessionBeanBaseInterfaceRemote"/>
    <property reference="ejbSessionBeanBaseClass"/>
    <property reference="ejbRemoteUrlPackagePrefixes"/>
    <property reference="ejbRemoteProviderUrl"/>
    <property reference="ejbRemoteInitialContextFactory"/>
    <property reference="enableSpringTransactionsWhenEjbsEnabled"/>
    <property reference="ejbTransactionsEnabled"/>
    <property reference="serviceInterceptors"/>
    <property reference="serviceRemotePort"/>
    <property reference="serviceRemotePortJMS"/>
    <property reference="serviceRemoteContext"/>
    <property reference="serviceRemoteUrlPattern"/>
    <property reference="serviceRemoteServer"/>
    <property reference="remoteHttpServiceScheme"/>
    <property reference="remoteRmiServiceScheme"/>
    <property reference="remoteTcpServiceScheme"/>
    <property reference="jndiDataSourceClass"/>
    <property reference="jndiDataSourceCaching"/>
    <property reference="jdbcDataSourceClass"/>
    <property reference="jdbcDataSourceDestroyMethod"/>
    <property reference="parameterRequiredCheck"/>
    <property reference="xmlEncoding"/>
    <property reference="implementationLanguage"/>
    <property reference="session-ejbs"/>
    <property reference="session-ejb-interfaces"/>
    <property reference="advice-impls"/>
    <property reference="service-impls"/>
    <property reference="dao-impls"/>
    <property reference="daos"/>
    <property reference="daoInheritanceEnabled"/>
    <property reference="enableDaoPropertiesCreateMethod"/>
    <property reference="securityRealm"/>
    <property reference="serviceSecurity"/>
    <property reference="serviceSecurityInterceptor"/>
    <property reference="serviceAccessDecisionManager"/>
    <property reference="serviceDecisionVoter"/>
    <property reference="securityRolePrefix"/>
    <property reference="securityAuthenticationManager"/>
    <property reference="securityRemoteAuthenticationManagerServiceInterface"/>
    <property reference="securityRunAsManager"/>
    <property reference="authenticationDaoBeanName"/>
    <property reference="authenticationManagerImplClass"/>
    <property reference="authenticationDaoImplClass"/>
    <property reference="daoAuthenticationProviderBeanName"/>
    <property reference="daoAuthenticationProviderImplClass"/>
    <property reference="securityDaoUserCacheBeanName"/>
    <property reference="securityDaoUserCacheImplClass"/>
    <property reference="securityUserCacheConfigLocation"/>
    <property reference="securityUserCacheName"/>
    <property reference="passwordEncoderBeanName"/>
    <property reference="passwordEncoderImplClass"/>
    <property reference="passwordSaltSourceBeanName"/>
    <property reference="richClient"/>
    <property reference="configPropertyPrefix"/>
    <property reference="client"/>
    <property reference="client-config"/>
    <property reference="client-test"/>
    <property reference="server"/>
    <property reference="server-impl"/>
    <property reference="server-config"/>
    <property reference="server-test"/>
    <property reference="server-test-config"/>
    <property reference="criteria"/>
    <property reference="merge-mappings"/>
    <property reference="applicationContextServerAuthentication"/>
    <property reference="applicationContextClientAuthentication"/>
    <property reference="serverTestContextAuthentication"/>
    <property reference="clientHttpInvokerExecutor"/>
    <property reference="toDoTag"/>
    <property reference="serverTestBeanRefFactory"/>
    <property reference="serverTestContextDataSource"/>
    <property reference="typeSafeEnumsEnabled"/>
    <property reference="enableTemplating"/>
    <property reference="enableAnnotations"/>
    <property reference="hibernateEntityAnnotations"/>
    <property reference="hibernateQueryUseNamedParameters"/>
    <property reference="dataSourceEnabled"/>
    <property reference="messageBundlePath"/>
    <property reference="messageSourceBeanName"/>
    <property reference="jmsProviderUrl"/>
    <property reference="jmsInitialContextFactory"/>
    <property reference="jmsUrlPackagePrefixes"/>
    <property reference="jmsConnectionFactory"/>
    <property reference="jmsTopicNamePrefix"/>
    <property reference="jmsQueueNamePrefix"/>
    <property reference="jmsTemplateImplementation"/>
    <property reference="applicationContextJms"/>
    <property reference="jmsReceiveTimeout"/>
    <property reference="jmsProvider"/>
    <property reference="jmsMessageListenerContainerImplementation"/>
    <property reference="jmsMessageListenerAdapterImplementation"/>
    <property reference="jmsExplicitQosEnabled"/>
    <property reference="jmsClientId"/>
    <property reference="jmsDurableSubscriptions"/>
    <property reference="jmsDurableSubscriptionName"/>
    <property reference="jmsTransactionsEnabled"/>
    <property reference="jmsCacheLevelName"/>
    <property reference="jmsMaxIncomingMessagesPerReceive"/>
    <property reference="jmsRecoveryInterval"/>
    <property reference="jmsSessionTransacted"/>
    <property reference="jmsActiveMqDurableTopicPrefetch"/>
    <property reference="jmsActiveMqQueuePrefetch"/>
    <property reference="manageableSearchMatchMode"/>
    <property reference="remoting-war-support"/>
    <property reference="remoteDispatcherServletName"/>
    <property reference="remoteWebApplicationContextName"/>
    <property reference="remoteServiceUsername"/>
    <property reference="remoteServicePassword"/>
    <property reference="remoteAuthenticatingHttpInvokerRequestExecutorName"/>
    <property reference="javaVersion"/>
    <property reference="springVersion"/>
    <property reference="hibernateVersion"/>
    <property reference="recordType"/>
    <property reference="xmlConfiguration"/>
    <property reference="rooScripts"/>
    <property reference="dateTimeGeneratedText"/>

    <!-- cartridge-property merge-point -->

    <condition name="enableTemplating">$enableTemplating.equalsIgnoreCase("true")</condition>
    <condition name="daoInheritanceEnabled">
        #if ($daoInheritanceEnabled.equalsIgnoreCase("true") &amp;&amp; !$enableTemplating.equalsIgnoreCase("true"))true#end
    </condition>
    <condition name="serviceSecurity">$serviceSecurity.equalsIgnoreCase("true")</condition>
    <condition name="richClient">$richClient.equalsIgnoreCase("true")</condition>
    <condition name="ejbsEnabled">$stringUtils.isNotBlank($session-ejbs)</condition>
    <condition name="daosEnabled">$stringUtils.isNotBlank($daos)</condition>
    <condition name="adviceEnabled">$stringUtils.isNotBlank($advice-impls)</condition>
    <condition name="requiredCheckEnabled">$parameterRequiredCheck.equalsIgnoreCase("true")</condition>
    <condition name="ejbSecurityEnabled">$stringUtils.isNotBlank($securityRealm)</condition>
    <condition name="remoteEjbsPresent">$springUtils.remoteEjbsPresent($services)</condition>
    <condition name="localEjbsPresent">$springUtils.localEjbsPresent($services)</condition>
    <condition name="lingoRemotableServicesPresent">$springUtils.lingoRemotableServicesPresent($services)</condition>
    <condition name="useNamedParametersInQueries">$hibernateQueryUseNamedParameters.equalsIgnoreCase("true")</condition>
    <condition name="activeMq">$jmsProvider.equalsIgnoreCase("ActiveMQ")</condition>
    <condition name="jbossMq">$jmsProvider.equalsIgnoreCase("JBossMQ")</condition>
    <condition name="jmsTransactionsEnabled">$jmsTransactionsEnabled.equalsIgnoreCase("true")</condition>
    <condition name="dataSourceEnabled">$dataSourceEnabled.equalsIgnoreCase("true")</condition>
    <condition name="enableCaching">$hibernateEnableCache.equalsIgnoreCase("true")</condition>
    <condition name="hibernateEntityAnnotations">$hibernateEntityAnnotations.equalsIgnoreCase("true")</condition>
    <condition name="remoteUsernameAuthenticationEnabled">$stringUtils.isNotBlank($remoteServiceUsername)</condition>
    <condition name="xmlConfiguration">$xmlConfiguration.equalsIgnoreCase("true")</condition>
    <condition name="rooScripts">$rooScripts.equalsIgnoreCase("true")</condition>
    <condition name="dateTimeGeneratedText">$dateTimeGeneratedText.equalsIgnoreCase("true")</condition>
    <!-- condition merge-point-->

    <!-- cartridge-resource merge-point -->

    <template
        path="templates/spring/roo/RooSingleEachTimeScript.roo.vsl"
        outputPattern="$generatedFile"
        outlet="roo-directory"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="entities">
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
            <!--modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="abstract">false</property>
                </type>
            </modelElement-->
            <modelElement variable="classes">
                <type name="org.andromda.metafacades.uml.ClassifierFacade"/>
            </modelElement>
            <modelElement variable="enums">
                <type name="org.andromda.metafacades.uml.EnumerationFacade"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/roo/RooSingleOnceScript.roo.vsl"
        outputPattern="$generatedFile"
        outlet="roo-directory"
        overwrite="false"
        outputToSingleFile="true"
        outputOnEmptyElements="true">
        <modelElements>
            <modelElement variable="entities">
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/roo/RooMultiOnceScript.roo.vsl"
        outputPattern="$generatedFile"
        outlet="roo-directory"
        overwrite="false"
        outputToSingleFile="true"
        outputOnEmptyElements="true">
    </template>

    <template
        path="templates/spring/applicationContext.xml.vsl"
        outputPattern="$applicationContext"
        outlet="spring-configuration"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="entities">
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="abstract">false</property>
                </type>
            </modelElement>
            <modelElement variable="manageables">
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/applicationContext-dataSource.xml.vsl"
        outputPattern="$applicationContextDataSource"
        outlet="spring-configuration"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="entities">
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/applicationContext-localDataSource.xml.vsl"
        outputPattern="$applicationContextLocalDataSource"
        outlet="spring-configuration"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false"
        outputCondition="dataSourceEnabled">
        <modelElements>
            <modelElement variable="entities">
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/applicationContext-testDataSource.xml.vsl"
        outputPattern="applicationContext-testDataSource.xml"
        outlet="server-test-config"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="true">
        <modelElements>
            <modelElement variable="entities">
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService"/>
            </modelElement>
        </modelElements>
    </template>

    <!-- this configuration is supposed to be used by web components, typically Hessian or Burlap -->
    <template
        path="templates/spring/applicationContext-server.xml.vsl"
        outputPattern="${serviceRemoteContext}-servlet.xml"
        outlet="spring-configuration"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="remotable"/>
                    <property name="richClient">true</property>
                </type>
            </modelElement>
            <modelElement variable="manageables">
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity">
                    <property name="remotable"/>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <!-- this configuration is supposed to be used by non-web components -->
    <template
        path="templates/spring/applicationContext-server.xml.vsl"
        outputPattern="$applicationContextServer"
        outlet="spring-configuration"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="remotable"/>
                </type>
            </modelElement>
            <modelElement variable="manageables">
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity">
                    <property name="remotable"/>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/remoting/client/applicationContext-client.xml.vsl"
        outputPattern="$applicationContextClient"
        outlet="client-config"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="remotable"/>
                </type>
            </modelElement>
            <modelElement variable="manageables">
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/richclient/applicationContext-server-authentication.xml.vsl"
        outputPattern="WEB-INF/$applicationContextServerAuthentication"
        outlet="server-config"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false"
        outputCondition="serviceSecurity">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="richClient">true</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <!-- Daos and Persistence -->

    <template
        path="templates/spring/SpringDao.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true">
        <modelElements variable="entity">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/hibernate/SpringHibernateDaoBase.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true">
        <modelElements variable="entity">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/hibernate/SpringHibernateDaoImpl.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true">
        <modelElements variable="entity">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity">
                    <property name="daoImplementationRequired">false</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/hibernate/SpringHibernateDaoImpl.vsl"
        outputPattern="$generatedFile"
        outlet="dao-impls"
        overwrite="false">
        <modelElements variable="entity">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity">
                    <property name="daoImplementationRequired"/>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/hibernate/H2.java.vsl"
        outputPattern="org/andromda/dbtest/H2.java"
        outlet="server-test"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="true">
        <modelElements>
            <modelElement variable="entities">
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/richclient/ehcache-server-authentication.xml.vsl"
        outputPattern="WEB-INF/ehcache-server-authentication.xml"
        outlet="server-config"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="richClient">true</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/richclient/AuthenticationDaoImpl.vsl"
        outputPattern="$generatedFile"
        outlet="server-impl"
        overwrite="false"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="richClient">true</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/richclient/SpringMergeMappings.vsl"
        outputPattern="SpringMergeMappings.xml"
        outlet="merge-mappings"
        overwrite="false"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="richClient">true</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/remoting/client/applicationContext-client-authentication.xml.vsl"
        outputPattern="$applicationContextClientAuthentication"
        outlet="client-config"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false"
        outputCondition="serviceSecurity">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="remotable"/>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/remoting/client/applicationContext-client.properties.vsl"
        outputPattern="$generatedFile"
        outlet="client-config"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="remotable"/>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/osgi/applicationContext-osgi-export.xml.vsl"
        outputPattern="$applicationContextOsgiExport"
        outlet="osgi"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="abstract">false</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/osgi/applicationContext-osgi-import.xml.vsl"
        outputPattern="$applicationContextOsgiImport"
        outlet="osgi"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="abstract">false</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/richclient/web.xml.vsl"
        outputPattern="WEB-INF/web.xml"
        outlet="server-config"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="remotable"/>
                    <property name="richClient">true</property>
                </type>
            </modelElement>
            <modelElement variable="manageables">
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity">
                    <property name="remotable"/>
                </type>
            </modelElement>
            <modelElement variable="topics">
                <type name="org.andromda.metafacades.uml.Topic"/>
            </modelElement>
            <modelElement variable="queues">
                <type name="org.andromda.metafacades.uml.Queue"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/ejb/applicationContext-remoteEjb.xml.vsl"
        outputPattern="$applicationContextRemoteEjb"
        outlet="spring-configuration"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="abstract">false</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/ejb/applicationContext-localEjb.xml.vsl"
        outputPattern="$applicationContextLocalEjb"
        outlet="spring-configuration"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="abstract">false</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/ejb/ejb-jar.xml.vsl"
        outputPattern="META-INF/ejb-jar.xml"
        outlet="session-ejbs"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false"
        outputCondition="ejbsEnabled">
        <modelElements variable="services">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="richClient">false</property>
                    <property name="abstract">false</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/ejb/ejb-jar.xml.vsl"
        outputPattern="META-INF/ejb-jar.xml"
        outlet="server-config"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false"
        outputCondition="ejbsEnabled">
        <modelElements variable="services">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="richClient">true</property>
                    <property name="abstract">false</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/ejb/jboss.xml.vsl"
        outputPattern="META-INF/jboss.xml"
        outlet="session-ejbs"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false"
        outputCondition="ejbsEnabled">
        <modelElements variable="services">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="richClient">false</property>
                    <property name="abstract">false</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/ejb/jboss.xml.vsl"
        outputPattern="META-INF/jboss.xml"
        outlet="server-config"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false"
        outputCondition="ejbsEnabled">
        <modelElements variable="services">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="richClient">true</property>
                    <property name="abstract">false</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/beanRefFactory.xml.vsl"
        outputPattern="$beanRefFactory"
        outlet="spring-configuration"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService"/>
            </modelElement>
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
            <modelElement variable="manageables">
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
            <modelElement variable="destinations">
                <type name="org.andromda.metafacades.uml.Destination"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/richclient/serverTestBeanRefFactory.xml.vsl"
        outputPattern="$serverTestBeanRefFactory"
        outlet="server-test-config"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="richClient">true</property>
                </type>
            </modelElement>
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity">
                    <property name="richClient">true</property>
                </type>
            </modelElement>
            <modelElement variable="manageables">
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity">
                    <property name="richClient">true</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/richclient/serverTestBeanRefFactory.properties.vsl"
        outputPattern="$generatedFile"
        outlet="server-test-config"
        overwrite="false"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="richClient">true</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/hibernate/search/SearchParameter.java.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true"
        outputToSingleFile="true">
        <modelElements variable="entities">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/hibernate/search/Search.java.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true"
        outputToSingleFile="true">
        <modelElements variable="entities">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/hibernate/search/PropertySearch.java.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true"
        outputToSingleFile="true">
        <modelElements variable="entities">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/paging/PaginationResult.java.vsl"
        outputPattern="$generatedFile"
        outlet="service-interfaces"
        overwrite="true"
        outputToSingleFile="true"/>

    <template
        path="templates/spring/hibernate/HibernateSearch.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true"
        outputToSingleFile="true">
        <modelElements variable="entities">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/hibernate/HibernateSearchProperties.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true"
        outputToSingleFile="true">
        <modelElements variable="entities">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/hibernate/HibernateSearchConfiguration.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true"
        outputToSingleFile="true">
        <modelElements variable="entities">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/hibernate/HibernateSearchParameter.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true"
        outputToSingleFile="true">
        <modelElements variable="entities">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/hibernate/SearchCriteria.vsl"
        outputPattern="{0}/{1}.java"
        outlet="$outlet"
        overwrite="true">
        <modelElements variable="class">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringCriteriaSearch"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/presentation/hibernate/OpenSessionInViewFilter.java.vsl"
        outputPattern="$generatedFile"
        outlet="open-session-in-view"
        overwrite="true"
        outputToSingleFile="true">
        <modelElements variable="entities">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
        </modelElements>
    </template>

     <!-- <template
        path="templates/spring/ApplicationContextProvider.java.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="true"/> -->
        
     <template
        path="templates/spring/BeanFactory.java.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="true">        
        <modelElements>
            <modelElement variable="entities">
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="abstract">false</property>
                </type>
            </modelElement>
            <modelElement variable="manageables">
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
     </template>
        
     <!-- <template
        path="templates/spring/SpringBeanLocator.java.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="true"/> -->

     <template
        path="templates/spring/remoting/RemoteDispatcherServlet.java.vsl"
        outputPattern="$generatedFile"
        outlet="remoting-war-support"
        overwrite="true"
        outputToSingleFile="true"/>

     <template
        path="templates/spring/remoting/RemoteWebApplicationContext.java.vsl"
        outputPattern="$generatedFile"
        outlet="remoting-war-support"
        overwrite="true"
        outputToSingleFile="true"/>

     <template
        path="templates/spring/remoting/SpringRemotingWarMergeMappings.xml.vsl"
        outputPattern="mappings/SpringRemotingWarMergeMappings.xml"
        outlet="remoting-war-support"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="remotable"/>
                </type>
            </modelElement>
        </modelElements>
     </template>

     <template
        path="templates/spring/remoting/client/AuthenticatingHttpInvokerRequestExecutor.java.vsl"
        outputPattern="$generatedFile"
        outlet="client"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false"
        outputCondition="remoteUsernameAuthenticationEnabled">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="allRoles"/>
                    <property name="remotable"/>
                </type>
            </modelElement>
        </modelElements>
     </template>

    <!-- Services -->

    <template
        path="templates/spring/ejb/SpringSessionBean.vsl"
        outputPattern="$generatedFile"
        outlet="session-ejbs"
        overwrite="true"
        outputCondition="ejbsEnabled">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="configonly">false</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/ejb/SpringSessionRemote.vsl"
        outputPattern="$generatedFile"
        outlet="$outlet"
        overwrite="true"
        outputCondition="ejbsEnabled">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="configonly">false</property>
                    <property name="ejbRemoteView">true</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/ejb/SpringSessionRemoteHome.vsl"
        outputPattern="$generatedFile"
        outlet="$outlet"
        overwrite="true"
        outputCondition="ejbsEnabled">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="configonly">false</property>
                    <property name="ejbRemoteView">true</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/ejb/SpringSessionLocal.vsl"
        outputPattern="$generatedFile"
        outlet="$outlet"
        overwrite="true"
        outputCondition="ejbsEnabled">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="configonly">false</property>
                    <property name="ejbLocalView">true</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/ejb/SpringSessionLocalHome.vsl"
        outputPattern="$generatedFile"
        outlet="$outlet"
        overwrite="true"
        outputCondition="ejbsEnabled">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="configonly">false</property>
                    <property name="ejbLocalView">true</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <!-- <template
        path="templates/spring/SpringServiceLocator.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="richClient">false</property>
                    <property name="abstract">false</property>
                    <property name="private">false</property>
                </type>
            </modelElement>
            <modelElement variable="manageables">
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template> -->

    <template
        path="templates/spring/SpringServiceLocator.vsl"
        outputPattern="$generatedFile"
        outlet="server"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="richClient">true</property>
                    <property name="private">false</property>
                </type>
            </modelElement>
            <modelElement variable="manageables">
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/richclient/SpringServerTest.vsl"
        outputPattern="$generatedFile"
        outlet="server-test"
        overwrite="false"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="service">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="richClient">true</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/richclient/ThisBeanFactory.java.vsl"
        outputPattern="org/andromda/utils/ThisBeanFactory.java"
        outlet="server-test"
        overwrite="false"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="service">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="richClient">true</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/remoting/client/SpringClientServiceLocator.vsl"
        outputPattern="$generatedFile"
        outlet="client"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="remotable"/>
                </type>
            </modelElement>
            <modelElement variable="manageables">
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/richclient/SpringClientTest.vsl"
        outputPattern="$generatedFile"
        outlet="client-test"
        overwrite="false"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="service">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="remotable"/>
                    <property name="richClient">true</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/SpringClientExceptionHandlingAdvice.vsl"
        outputPattern="$generatedFile"
        outlet="advice-impls"
        overwrite="false"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements variable="services">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="remotable"/>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/SpringService.vsl"
        outputPattern="{0}/{1}.java"
        outlet="service-interfaces"
        overwrite="true">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="configonly">false</property>
                    <property name="private">false</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/SpringService.vsl"
        outputPattern="{0}/{1}.java"
        outlet="services"
        overwrite="true">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="configonly">false</property>
                    <property name="private">true</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/SpringWebServiceDelegator.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="webService"/>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/SpringServiceBase.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="configonly">false</property>
                    <property name="richClient">false</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/SpringServiceBase.vsl"
        outputPattern="$generatedFile"
        outlet="server"
        overwrite="true">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="configonly">false</property>
                    <property name="richClient">true</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <!-- Should not generate both services and server PrincipalStore because of different $richClient value, but it does when there are no services -->
    <template
        path="templates/spring/SpringPrincipalStore.java.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true"
        outputToSingleFile="true">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="richClient">false</property>
                </type>
            </modelElement>
            <modelElement variable="roles">
                <type name="org.andromda.metafacades.uml.Role"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/SpringPrincipalStore.java.vsl"
        outputPattern="$generatedFile"
        outlet="server"
        overwrite="true"
        outputToSingleFile="true">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="richClient">true</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/SpringServiceImpl.vsl"
        outputPattern="$generatedFile"
        outlet="service-impls"
        overwrite="false">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="configonly">false</property>
                    <property name="richClient">false</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/SpringServiceImpl.vsl"
        outputPattern="$generatedFile"
        outlet="server-impl"
        overwrite="false">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="configonly">false</property>
                    <property name="richClient">true</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/DefaultServiceException.vsl"
        outputPattern="$generatedFile"
        outlet="service-interfaces"
        overwrite="true">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="configonly">false</property>
                    <property name="allowDefaultServiceException"/>
                    <property name="private">false</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/DefaultServiceException.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="configonly">false</property>
                    <property name="allowDefaultServiceException"/>
                    <property name="private">true</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <!-- JMS -->

    <template
        path="templates/spring/jms/applicationContext-jms.xml.vsl"
        outputPattern="$applicationContextJms"
        outlet="spring-configuration"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="topics">
                <type name="org.andromda.metafacades.uml.Topic"/>
            </modelElement>
            <modelElement variable="queues">
                <type name="org.andromda.metafacades.uml.Queue"/>
            </modelElement>
            <modelElement variable="destinations">
                <type name="org.andromda.metafacades.uml.Destination"/>
            </modelElement>
            <modelElement variable="incomingMessageOperations">
                <type name="org.andromda.cartridges.spring.metafacades.SpringServiceOperation">
                    <property name="incomingMessageOperation"/>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/jms/MessageListener.java.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true">
        <modelElements>
            <modelElement variable="operation">
                <type name="org.andromda.cartridges.spring.metafacades.SpringServiceOperation">
                    <property name="incomingMessageOperation"/>
                    <property name="arguments.empty"/>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <!--
            C R U D
    -->

    <template
        path="templates/spring/crud/applicationContext-manageable.xml.vsl"
        outputPattern="$applicationContextManageable"
        outlet="spring-configuration"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="manageables">
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/crud/SpringCrudServiceLocator.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="manageables">
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/crud/SpringCrudService.vsl"
        outputPattern="$generatedFile"
        outlet="service-interfaces"
        overwrite="true">
        <modelElements variable="manageable">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/crud/SpringCrudServiceBase.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true">
        <modelElements variable="manageable">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/crud/SpringCrudServiceImpl.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true">
        <modelElements variable="manageable">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/crud/SpringCrudSearchExample.vsl"
        outputPattern="$generatedFile"
        outlet="value-objects"
        overwrite="true">
        <modelElements variable="manageable">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/crud/SpringCrudDao.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true">
        <modelElements variable="manageable">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/crud/SpringCrudDaoBase.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true">
        <modelElements variable="manageable">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/crud/SpringCrudValueObject.vsl"
        outputPattern="$generatedFile"
        outlet="value-objects"
        overwrite="true">
        <modelElements variable="manageable">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <!-- cartridge-template merge-point -->

</cartridge>