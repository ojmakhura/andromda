// license-header java merge-point
/* Autogenerated by AndroMDA WebServiceInterface.vsl in andromda-ejb3-cartridge on $umlUtils.date - do not edit */
#if ($stringUtils.isNotBlank($service.packageName))
package $service.packageName;
#end
#set ($generatedFile = "${stringUtils.replace($service.fullyQualifiedWebServiceInterfaceName,'.','/')}.java")

/**
 * Web service interface for the ${service.serviceName} session bean.
 *
 */
@javax.jws.WebService(targetNamespace = "${service.namespace}")
@javax.jws.soap.SOAPBinding(style = javax.jws.soap.SOAPBinding.Style.${stringUtils.upperCase($service.style)}, use = javax.jws.soap.SOAPBinding.Use.${stringUtils.upperCase($service.use)}, parameterStyle = javax.jws.soap.SOAPBinding.ParameterStyle.${stringUtils.upperCase($service.parameterStyle)})
##if ($stringUtils.startsWith(${deploymentPlatform}, "jboss"))
##@org.jboss.ws.annotation.PortComponent(contextRoot = "${webServiceContextRoot}", urlPattern="${webServiceUrlPattern}/${service.qName}/*")
##end
@jakarta.ejb.Stateless
public interface ${service.webServiceInterfaceName}
    extends java.rmi.Remote
{
#set ($operations = $service.businessOperations)
#if (!$operations.empty)
#**##foreach ($operation in $operations)
##
## Only expose methods that are not lifecycle callbacks
## Only expose public methods with remote view type accessability
## Operation must be exposed as a web-service operation (<<WebService>> on class or <<WebServiceOperation>> on operation)
## All operations throw java.rmi.RemoteException
##
#*  *##if ($operation.viewTypeAbsoluteRemote && $operation.exposed)
    @javax.jws.WebMethod(operationName = "$operation.methodName")
#*    *##if ($stringUtils.isNotBlank($operation.resultName))
    @javax.jws.WebResult(name = "${operation.resultName}")
#*    *##end
#*    *##if ($operation.oneway)
    @javax.jws.Oneway
#*    *##end
    public $operation.getterSetterReturnTypeName $operation.annotatedSignature#if ($operation.exceptionsPresent) $operation.throwsClause, java.rmi.RemoteException#else throws java.rmi.RemoteException#end;

#*  *##end
#**##end
#end
}
