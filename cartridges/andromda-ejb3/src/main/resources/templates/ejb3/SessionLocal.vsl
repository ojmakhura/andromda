// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by SessionLocal.vsl in andromda-ejb3-cartridge on $umlUtils.date.
//
#if ($stringUtils.isNotBlank($service.packageName))
package $service.packageName;
#end
#set ($generatedFile = "${stringUtils.replace($service.fullyQualifiedServiceLocalInterfaceName,'.','/')}.java")

/**
 * Local component interface for the ${service.serviceName} session bean.
#if ($service.seamComponent)
 * The service that implement this business interface is a Seam component.  The cartridge
 * only exposes this interface as a Local business interface for the Seam bean
 * component.
#end
$service.getDocumentation(" * ")
 */
@jakarta.ejb.Local
public interface ${service.serviceLocalInterfaceName}
    extends ${service.serviceInterfaceName}#if($service.generalization), ${service.generalization.fullyQualifiedName}Local#end

{
#set ($operations = $service.businessOperations)
#if (!$operations.empty)

    // ------------ Business Methods  -----------------

#**##foreach ($operation in $operations)
##
## Only expose methods that are not lifecycle callbacks
## Only expose public methods with local view type accessability
## or if the session bean is a Seam component, then expose all methods
##
#*  *##if ($operation.viewTypeAbsoluteLocal || $service.seamComponent)
    /**
$operation.getDocumentation("     * ")
     */
#*    *##if ($operation.visibility == "public")
#*      *##set ($returnType = $operation.getterSetterReturnTypeName)
#*      *##if ($operation.exceptionsPresent)
    public $returnType $operation.signature
        throws $operation.exceptionList;
#*      *##else
    public $returnType $operation.signature;
#*      *##end
#*    *##end

#*  *##end
#**##end
#end
}
