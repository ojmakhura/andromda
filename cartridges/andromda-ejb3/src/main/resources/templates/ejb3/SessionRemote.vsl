// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by SessionRemote.vsl in andromda-ejb3-cartridge on $umlUtils.date.
//
#if ($stringUtils.isNotBlank($service.packageName))
package $service.packageName;
#end
#set ($generatedFile = "${stringUtils.replace($service.fullyQualifiedServiceRemoteInterfaceName,'.','/')}.java")

/**
 * Remote component interface for the ${service.serviceName} session bean.
#if ($service.seamComponent)
 * The service that implement this business interface is a Seam component.  The cartridge
 * will not expose this interface as a Remote business interface for the bean
 * component.  Seam components will only have a Local business interface.
#end
$service.getDocumentation(" * ")
 */
##
## Do not render this annotation if the session bean is a Seam component.
## We only expose the Local business interface for Seam components.
##
#if (!$service.seamComponent)
@jakarta.ejb.Remote
#end
public interface ${service.serviceRemoteInterfaceName}
    extends ${service.serviceInterfaceName}#if ($service.generalization), ${service.generalization.fullyQualifiedName}Remote#end

{
#set ($operations = $service.businessOperations)
#if (!$operations.empty)

    // ------------ Business Methods  -----------------

#**##foreach ($operation in $operations)
##
## Only expose methods that are not lifecycle callbacks
## Only expose public methods with remote view type accessability
##
#*  *##if ($operation.viewTypeAbsoluteRemote)
#*    *##set ($returnType = $operation.getterSetterReturnTypeName)
    /**
$operation.getDocumentation("     * ")
#foreach ($argument in $operation.arguments)
     * @param $argument.name
#end
#if ($operation.returnTypePresent)
     * @return $returnType
#end
#if ($operation.exceptionsPresent)
     * @${operation.throwsClause}
#end
     */
#*    *##if ($operation.exceptionsPresent)
    public $returnType $operation.signature
        $operation.throwsClause;
#*    *##else
    public $returnType $operation.signature;
#*    *##end

#*  *##end
#**##end
#end
}
