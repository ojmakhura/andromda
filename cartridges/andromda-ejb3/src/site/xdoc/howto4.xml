<?xml version="1.0" encoding="iso-8859-1"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>AndroMDA - EJB3 - HowTo Composite Primary Key</title>
        <author email="vancek@users.sourceforge.net">Vance Karimi</author>
    </properties>
    <body>
        <section name="Composite Primary Key">
            <p>
                In some cases, you may want to define a composite primary key, rather than a simple primary key.
                A composite primary key must correspond to two or more persistent fields or properties.  The
                EJB3 cartridge allows the creation of a composite primary key class to satisfy this requirement.
            </p>
            <p>
                To map two or more attributes of an entity POJO as a property of a composite primary key, simply
                model the <![CDATA[<<Identifier>>]]> stereotype on the corresponding attributes in the entity.
                The order of the primary keys is defined by the order of the attribute identifiers in the entity.
            </p>
            <p>
                The following example introduces a composite primary key for the Car entity.
            </p>
            <p>
                <img src="images/org/andromda/test/4/a/uml.gif" alt="images/org/andromda/test/4/a/uml.gif"/>
            </p>
            <ul>
                <li class="gen">Auto-generated source that does not need manual editing</li>
                <li class="impl">Auto-generated source that should be edited manually</li>
                <li class="changed">File that is affected by the modifications applied in this section</li>
            </ul>
            <ul>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/howto4/a/CarEmbeddable.java"><code>CarEmbeddable.java</code></a></li>
                <li class="impl"><a href="howto/org/andromda/test/howto4/a/Car.java"><code>Car.java</code></a></li>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/howto4/a/CarPK.java"><code>CarPK.java</code></a></li>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/howto4/a/CarDao.java"><code>CarDao.java</code></a></li>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/howto4/a/CarDaoBase.java"><code>CarDaoBase.java</code></a></li>
                <li class="impl"><a href="howto/org/andromda/test/howto4/a/CarDaoImpl.java"><code>CarDaoImpl.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto4/a/CarDaoException.java"><code>CarDaoException.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto4/a/Person.java"><code>Person.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto4/a/PersonDao.java"><code>PersonDao.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto4/a/PersonDaoBase.java"><code>PersonDaoBase.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto4/a/PersonDaoImpl.java"><code>PersonDaoImpl.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto4/a/PersonDaoException.java"><code>PersonDaoException.java</code></a></li>
                <li class="impl"><a href="howto/org/andromda/test/howto4/a/RentalServiceBean.java"><code>RentalServiceBean.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto4/a/RentalServiceRemote.java"><code>RentalServiceRemote.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/ServiceDelegateBase.java"><code>ServiceDelegateBase.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto4/a/RentalServiceDelegate.java"><code>RentalServiceDelegate.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto4/a/RentalServiceBase.java"><code>RentalServiceBase.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto4/a/RentalServiceException.java"><code>RentalServiceException.java</code></a></li>
            </ul>
            <p>
                The EJB3 cartridge represents a composite primary key as an embeddable class, implements 
                <code>Serializable</code> and defines the <code>equals</code> and <code>hashCode</code> methods.
                The <code>CarPK</code> embeddable composite primary key class has the
                <code>@jakarta.persistence.Embeddable</code> annotation.  The <code>CarEmbeddable</code> class
                contains the corresponding <code>@jakarta.persistence.EmbeddedId</code> annotation on the
                composite primary key getter.  Notice how the <code>@jakarta.persistence.AttributeOverrides</code>
                annotation is used to map the primary key attributes to the relational database columns in
                <code>CarEmbeddable.java</code>.
            </p>
            <p>
                The <code>CarDaoBase</code> class accounts for the composite PK in the load and
                remove operations.  TODO: To improve on this, add further operations to the DAO
                components to have the PK class as an argument rather than the individual attributes that
                form the PK.
            </p>
            <p>
                The following example illustrates the effect of having a composite primary key on the inverse
                side of a relationship.  What's important here is the <code>@jakarta.persistence.JoinColumns</code>
                annotation on <code>getOwner()</code> in <code>CarEmbeddable.java</code>.  Because
                <code>Person</code> has a composite primary key, the foreign key on Many-To-One owning side
                has to know about this.
            </p>
            <p>
                <img src="images/org/andromda/test/4/b/uml.gif" alt="images/org/andromda/test/4/b/uml.gif"/>
            </p>
            <ul>
                <li class="gen">Auto-generated source that does not need manual editing</li>
                <li class="impl">Auto-generated source that should be edited manually</li>
                <li class="changed">File that is affected by the modifications applied in this section</li>
            </ul>
            <ul>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/howto4/b/CarEmbeddable.java"><code>CarEmbeddable.java</code></a></li>
                <li class="impl"><a href="howto/org/andromda/test/howto4/b/Car.java"><code>Car.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto4/b/CarDao.java"><code>CarDao.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto4/b/CarDaoBase.java"><code>CarDaoBase.java</code></a></li>
                <li class="impl"><a href="howto/org/andromda/test/howto4/b/CarDaoImpl.java"><code>CarDaoImpl.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto4/b/CarDaoException.java"><code>CarDaoException.java</code></a></li>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/howto4/b/Person.java"><code>Person.java</code></a></li>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/howto4/b/PersonPK.java"><code>PersonPK.java</code></a></li>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/howto4/b/PersonDao.java"><code>PersonDao.java</code></a></li>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/howto4/b/PersonDaoBase.java"><code>PersonDaoBase.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto4/b/PersonDaoImpl.java"><code>PersonDaoImpl.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto4/b/PersonDaoException.java"><code>PersonDaoException.java</code></a></li>
                <li class="impl"><a href="howto/org/andromda/test/howto4/b/RentalServiceBean.java"><code>RentalServiceBean.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto4/b/RentalServiceRemote.java"><code>RentalServiceRemote.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/ServiceDelegateBase.java"><code>ServiceDelegateBase.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto4/b/RentalServiceDelegate.java"><code>RentalServiceDelegate.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto4/b/RentalServiceBase.java"><code>RentalServiceBase.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/howto4/b/RentalServiceException.java"><code>RentalServiceException.java</code></a></li>
            </ul>
            <p>
                Currently, the EJB3 cartridge will disable the findByPrimaryKey generic finder for an entity
                with a composite primary key.
            </p>
        </section>
        <section name="Next">
            <p>
                In the next section, we will learn how to model enumerations, click <a href="howto5.html">here</a>.
            </p>
        </section>
    </body>
</document>
