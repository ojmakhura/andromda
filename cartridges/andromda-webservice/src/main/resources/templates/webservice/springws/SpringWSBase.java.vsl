// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by SpringWS.java.vsl in andromda-webservices#if($dateTimeGeneratedText) on $springUtils.date#end. Do not modify by hand!.
//
package ${service.packageName};
#set ($componentPath = $stringUtils.replaceChars(${service.packageName}, "\\.", "\\/"))
#set ( $isService = $webServiceUtils.isService($service))
#if($isService)
#set ( $serviceName = "${service.name}WS")
#else
#set ( $serviceName = "${service.name}")
#end

#foreach($annotation in $service.additionalAnnotations)
@$annotation
#end
public abstract class ${serviceName}Base implements ${serviceName} {

    protected static org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(${serviceName}Base.class);
#if($isService)

    @org.springframework.beans.factory.annotation.Autowired
    protected ${service.fullyQualifiedName} $stringUtils.uncapitalize(${service.name});
#end
#foreach($attribute in $service.attributes)
#foreach($annotation in $attribute.additionalAnnotations)
    @$annotation
#end
#if($attribute.many)
    $attribute.visibility java.util.Collection<$attribute.type.fullyQualifiedName> $attribute.name; 
#else
    $attribute.visibility $attribute.type.fullyQualifiedName $attribute.name; 
#end
#end
#foreach ($operation in $service.allowedOperations)

#set ($handle = "handle")
#set ($responseStatus = $operation.restResponseStatus)
    $webServiceUtils.getRequestType(${operation.restRequestType})(${operation.restPath})
#if (!$stringUtils.isBlank($responseStatus))
    $operation.restResponseStatus
#end
#if ($operation.returnTypePresent)
    @org.springframework.web.bind.annotation.ResponseBody
#end
#foreach($annotation in $operation.additionalAnnotations)
    @$annotation
#end
#if(!$stringUtils.isBlank($operation.rolesAllowed))
    @org.springframework.security.access.annotation.Secured("$operation.rolesAllowed")
#end
#if($operation.returnTypePresent)
#set ($returnType = "#if($operation.returnType.primitive)$operation.returnType.wrapperName#else$operation.getterSetterReturnTypeName#end")
#set ($return = "org.springframework.http.ResponseEntity<$returnType>")
#else
#set ($return = "void")
#end
    $operation.visibility $return ${operation.name}(#getOperationArgs($operation)) {
        #if ($operation.returnTypePresent)return #end${handle}$stringUtils.capitalize(${operation.name})($operation.argumentNames);
    }

    $operation.visibility abstract $return ${handle}$stringUtils.capitalize(${operation.signature});
#end
}