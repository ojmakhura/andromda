<cartridge>

    <templateEngine className="org.andromda.templateengines.velocity.VelocityTemplateEngine">
        <macrolibrary name="templates/angular/app/appMacros.vm"/>
		<macrolibrary name="templates/angular/app/view/renderAngularActionFormInput.vm"/>
		<macrolibrary name="templates/angular/app/view/renderAngularActionCommandLinkParameter.vm"/>
		<macrolibrary name="templates/angular/app/view/renderAngularTableCommandLinkParameters.vm"/>
        <macrolibrary name="templates/angular/app/controller/controller.ts.vm"/>
        <macrolibrary name="templates/angular/app/forms/angularFormMacros.vm"/>
        <macrolibrary name="templates/angular/app/forms/angularFormImplMacros.vm"/>
        <macrolibrary name="templates/webservice/jaxws/RenderRestrictions.vm"/>
    </templateEngine>

    <templateObject name="stringUtils" className="org.apache.commons.lang3.StringUtils"/>
    <templateObject name="stringUtilsHelper" className="org.andromda.utils.StringUtilsHelper"/>
    <templateObject name="wordUtils" className="org.apache.commons.lang3.text.WordUtils"/>
    <templateObject name="javaUtils" className="org.andromda.cartridges.java.JavaUtils"/>
    <templateObject name="umlUtils" className="org.andromda.metafacades.uml.UMLMetafacadeUtils"/>
    <templateObject name="angularHelper" className="org.andromda.cartridges.angular.AngularHelper"/>
    <templateObject name="webServiceUtils" className="org.andromda.cartridges.webservice.WebServiceUtils"/>
    <templateObject name="escTool" className="org.apache.velocity.tools.generic.EscapeTool"/>
    
    <!-- cartridge-templateObject merge-point-->

    <templatePostProcessor className="org.andromda.core.common.ImportBeautifierPostProcessorImpl"/>
    <property reference="generateCrudImpls"/>
    <property reference="generateRefFiles"/>
    <property reference="componentSet"/>
    <property reference="overwriteAll"/>
    <property reference="toDoTag"/>
    <property reference="enableTemplating"/>
    <property reference="applicationName"/>    
    <property reference="applicationId"/>
    <property reference="applicationPackage"/>
    <!--property reference="wsdlSoapAddress"/-->
    <property reference="converterPattern"/>
    <property reference="securityRealm"/>
    <property reference="testServiceLocatorName"/>
    <property reference="testServiceLocatorPackage"/>
    <property reference="servicesPath"/>
    <property reference="webContext"/>
    <property reference="ejbJndiUrl"/>
    <property reference="ejbNamingContextFactory"/>
    <property reference="sessionTimeout"/>
    <property reference="webserviceTypesPackage"/>
    <property reference="wsdlSoapNamespace"/>
    <property reference="xmlSchemaNamespace"/>
    <property reference="wsdlNamespace"/>
    <property reference="wsSecurityNamespace"/>
    <property reference="wsSecurityImportLocation"/>
    <property reference="documentStyleTransportNamespace"/>
    <property reference="xmlEncoding"/>
    <property reference="signedRequest"/>
    <property reference="encryptedRequest"/>
    <property reference="encryptedResponse"/>
    <property reference="signedResponse"/>
    <property reference="cryptoKeyStore"/>
    <property reference="cryptoKeyStoreType"/>
    <property reference="cryptoKeyStoreAlias"/>
    <property reference="cryptoAliasPassword"/>
    <property reference="cryptoKeyStorePassword"/>
    <property reference="attachmentsDirectory"/>
    <property reference="javaVersion"/>
    <property reference="axisVersion"/>
    <property reference="cxfVersion"/>
    <property reference="webserviceStack"/>
    <property reference="soapVersion"/>
    <property reference="axis2WrappedMessageReceiver"/>
    <property reference="axis2DefaultMessageReceiver"/>
    <property reference="axis2GeneratedWrappedMessageReceiverRendersFaultsAsBeans"/>
    <property reference="springVersion"/>
    <property reference="extensionInheritanceDisabled"/>
    <property reference="useArrayWrapper"/>
    <property reference="useAttributes"/>
    <property reference="addNamespaceBackslash"/>
    <property reference="outputGeneratedAnnotationJavadoc"/>
    <property reference="useEnumValueInXSD"/>
    <property reference="makeNillable"/>
    <property reference="webserviceHost"/>
    <property reference="webservicePort"/>
    <property reference="namespacePrefix"/>
    <property reference="qualifiedNameLocalPartPattern"/>
    <property reference="namespacePattern"/>
    <property reference="reverseNamespace"/>
    <property reference="seiSuffix"/>
    <property reference="defaultStyle"/>
    <property reference="defaultUse"/>
    <property reference="defaultParameterStyle"/>
    <property reference="importedXSD"/>
    <property reference="validateSchema"/>
    <property reference="customValidator"/>
    <property reference="generateMethodImpl"/>
    <property reference="enableAnnotations"/>
    <property reference="generateIsBooleanGetters"/>
    <property reference="generateChainedSetters"/>
    <property reference="simpleBindingMode"/>
    <property reference="xjcArguments"/>
    <property reference="XMLDateAdapter"/>
    <property reference="XMLDateTimeAdapter"/>
    <property reference="XMLTimeAdapter"/>
    <property reference="XMLBooleanAdapter"/>
    <property reference="XMLIntegerAdapter"/>
    <property reference="XMLDecimalAdapter"/>
    <!--property reference="jaxb-gen"/-->
    <property reference="pluralizeAssociationEndNames"/>
    <property reference="pluralizeAttributeNames"/>
    <property reference="pluralizeParameterNames"/>
    <property reference="defaultDateFormat"/>
    
    <condition name="generateRefFiles">$generateRefFiles.equalsIgnoreCase("true")</condition>
    <condition name="overwriteAll">$overwriteAll.equalsIgnoreCase("true")</condition>
    <condition name="enableTemplating">$enableTemplating.equalsIgnoreCase("true")</condition>
    
    <condition name="generateRefFiles">$generateRefFiles.equalsIgnoreCase("true")</condition>
    <condition name="overwriteAll">$overwriteAll.equalsIgnoreCase("true")</condition>
    <condition name="xfire">$webserviceStack.equalsIgnoreCase("xfire")</condition>
    <condition name="axis">$webserviceStack.equalsIgnoreCase("axis")</condition>
    <condition name="axis1">#if ($webserviceStack.equalsIgnoreCase("axis") &amp;&amp; $axisVersion.equals("1"))true#end</condition>
    <condition name="axis2">#if ($webserviceStack.equalsIgnoreCase("axis") &amp;&amp; $axisVersion.equals("2"))true#end</condition>
    <condition name="jaxws">$webserviceStack.equalsIgnoreCase("jaxws")</condition>
    <condition name="cxf">$webserviceStack.equalsIgnoreCase("cxf")</condition>
    <condition name="xfireRef">#if ($webserviceStack.equalsIgnoreCase("xfire") &amp;&amp; $generateRefFiles.equals("true"))true#end</condition>
    <condition name="axisRef">#if ($webserviceStack.equalsIgnoreCase("axis") &amp;&amp; $generateRefFiles.equals("true"))true#end</condition>
    <condition name="axis1Ref">#if ($webserviceStack.equalsIgnoreCase("axis") &amp;&amp; $axisVersion.equals("1") &amp;&amp; $generateRefFiles.equals("true"))true#end</condition>
    <condition name="axis2Ref">#if ($webserviceStack.equalsIgnoreCase("axis") &amp;&amp; $axisVersion.equals("2") &amp;&amp; $generateRefFiles.equals("true"))true#end</condition>
    <condition name="jaxwsRef">#if ($webserviceStack.equalsIgnoreCase("jaxws") &amp;&amp; $generateRefFiles.equals("true"))true#end</condition>
    <condition name="cxfRef">#if ($webserviceStack.equalsIgnoreCase("cxf") &amp;&amp; $generateRefFiles.equals("true"))true#end</condition>
    <condition name="jbossWeb">$stringUtils.isNotBlank($securityRealm)</condition>
    <condition name="securityEnabled">$stringUtils.isNotBlank($securityRealm)</condition>
    <condition name="spring2">$springVersion.startsWith("2")</condition>
    <condition name="extensionInheritanceDisabled">$extensionInheritanceDisabled.equalsIgnoreCase("true")</condition>
    <condition name="axis2GeneratedWrappedMessageReceiverRendersFaultsAsBeans">$axis2GeneratedWrappedMessageReceiverRendersFaultsAsBeans.equalsIgnoreCase("true")</condition>
    <condition name="useArrayWrapper">$useArrayWrapper.equalsIgnoreCase("true")</condition>
    <condition name="useAttributes">$useAttributes.equalsIgnoreCase("true")</condition>
    <condition name="addNamespaceBackslash">$addNamespaceBackslash.equalsIgnoreCase("true")</condition>
    <condition name="useEnumValueInXSD">$useEnumValueInXSD.equalsIgnoreCase("true")</condition>
    <condition name="outputGeneratedAnnotationJavadoc">$outputGeneratedAnnotationJavadoc.equalsIgnoreCase("true")</condition>
    <condition name="makeNillable">$makeNillable.equalsIgnoreCase("true")</condition>
    <condition name="reverseNamespace">$reverseNamespace.equalsIgnoreCase("true")</condition>
    <condition name="importedXSD">$importedXSD.equalsIgnoreCase("true")</condition>
    <condition name="validateSchema">$validateSchema.equalsIgnoreCase("true")</condition>
    <condition name="generateMethodImpl">$generateMethodImpl.equalsIgnoreCase("true")</condition>
    <condition name="enableAnnotations">$enableAnnotations.equalsIgnoreCase("true")</condition>
    <condition name="generateIsBooleanGetters">$generateIsBooleanGetters.equalsIgnoreCase("true")</condition>
    <condition name="generateChainedSetters">$generateChainedSetters.equalsIgnoreCase("true")</condition>
    <condition name="simpleBindingMode">$simpleBindingMode.equalsIgnoreCase("true")</condition>
    <condition name="pluralizeAssociationEndNames">$pluralizeAssociationEndNames.equalsIgnoreCase("true")</condition>
    <condition name="pluralizeAttributeNames">$pluralizeAttributeNames.equalsIgnoreCase("true")</condition>
    <condition name="pluralizeParameterNames">$pluralizeParameterNames.equalsIgnoreCase("true")</condition>
    <condition name="angular">$componentSet.equalsIgnoreCase("angular")</condition>

    <template
        path="templates/angular/app/app.module.ts.vsl"
        outputPattern="${moduleFileName}.module.ts"
        outlet="angularAppDir"
        overwrite="true"
        outputToSingleFile="true">
        <modelElements>
            <modelElement variable="useCases">
                <type name="org.andromda.metafacades.uml.FrontEndUseCase"/>
            </modelElement>
        </modelElements>
    </template>
    <template
        path="templates/angular/app/model/model.ts.vsl"
        outputPattern="$destination/${fileName}.ts"
        outlet="models"
        overwrite="true">
        <modelElements variable="class">
            <modelElement>
                <type name="org.andromda.metafacades.uml.ValueObject"/>
            </modelElement>
        </modelElements>
    </template>
    
    <template
        path="templates/angular/app/model/spec.ts.vsl"
        outputPattern="$destination/${fileName}.spec.ts"
        outlet="models"
        overwrite="false">
        <modelElements variable="class">
            <modelElement>
                <type name="org.andromda.metafacades.uml.ValueObject"/>
            </modelElement>
        </modelElements>
    </template>
        
    <template
        path="templates/angular/app/model/enumeration.vsl"
        outputPattern="$destination/${fileName}.ts"
        outlet="models"
        overwrite="true">
        <modelElements variable="enumeration">
            <modelElement>
                <type name="org.andromda.metafacades.uml.EnumerationFacade">
                    <property name="typeSafe"/>
                </type>
            </modelElement>
        </modelElements>
    </template>
    
    <template
        path="templates/angular/app/navigation/navigation.component.html.vsl"
        outputPattern="navigation/$stringUtils.lowerCase(${applicationId})-navigation.component.html"
        outlet="angularAppDir"
        overwrite="true"
        outputToSingleFile="true"
        generateEmptyFiles="true">
        <modelElements>
            <modelElement variable="useCases">
                <type name="org.andromda.metafacades.uml.FrontEndUseCase"/>
            </modelElement>
            <modelElement variable="manageables">
                <type name="org.andromda.cartridges.angular.metafacades.AngularManageableEntity">
                    <property name="needsUserInterface"/>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/angular/app/app-routing.module.ts.vsl"
        outputPattern="${moduleFileName}-routing.module.ts"
        outlet="angularAppDir"
        overwrite="true"
        outputToSingleFile="true">
        <modelElements>
            <modelElement variable="useCases">
                <type name="org.andromda.metafacades.uml.FrontEndUseCase"/>
            </modelElement>
            <modelElement variable="manageables">
                <type name="org.andromda.cartridges.angular.metafacades.AngularManageableEntity">
                    <property name="needsUserInterface"/>
                </type>
            </modelElement>
        </modelElements>
    </template>
    
    <template
        path="templates/angular/app/service/service.ts.vsl"
        outputPattern="$componentPath/${fileName}.ts"
        outlet="services"
        overwrite="true">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.webservice.metafacades.WebService">
                    <property name="allowedOperations"/>
                </type>
            </modelElement>
        </modelElements>
    </template>
        
    <template
        path="templates/angular/app/service/service.impl.ts.vsl"
        outputPattern="$componentPath/${fileName}.ts"
        outlet="service-impls"
        overwrite="false">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.webservice.metafacades.WebService">
                    <property name="allowedOperations"/>
                </type>
            </modelElement>
        </modelElements>
    </template>
    
    <template
        path="templates/angular/app/controller/controller.ts.vsl"
        outputPattern="$componentPath/${fileName}.ts"
        outlet="controllers"
        overwrite="true">
        <modelElements variable="controller">
            <modelElement>
                <type name="org.andromda.metafacades.uml.FrontEndController">
                    <property name="useCase"/>
                </type>
            </modelElement>
        </modelElements>
    </template>
        
    <template
        path="templates/angular/app/controller/controller.impl.ts.vsl"
        outputPattern="$componentPath/${fileName}.ts"
        outlet="controller-impls"
        overwrite="false">
        <modelElements variable="controller">
            <modelElement>
                <type name="org.andromda.metafacades.uml.FrontEndController">
                    <property name="useCase"/>
                </type>
            </modelElement>
        </modelElements>
    </template>
    
    <template
        path="templates/angular/app/view/view.component.html.vsl"
        outputPattern="$componentPath/${fileName}.component.html"
        outlet="view-impls"
        overwrite="false">
        <modelElements variable="view">
            <modelElement>
                <type name="org.andromda.metafacades.uml.FrontEndView">
                    <property name="popup">false</property>
                </type>
            </modelElement>
        </modelElements>
    </template>
	
	<template
        path="templates/angular/app/view/view.component.ts.vsl"
        outputPattern="$componentPath/${fileName}.component.ts"
        outlet="views"
        overwrite="true">
        <modelElements variable="view">
            <modelElement>
                <type name="org.andromda.metafacades.uml.FrontEndView">
                    <property name="popup">false</property>
                </type>
            </modelElement>
        </modelElements>
    </template>
	
	<template
        path="templates/angular/app/view/view.component.impl.ts.vsl"
        outputPattern="$componentPath/${fileName}.impl.component.ts"
        outlet="view-impls"
        overwrite="false">
        <modelElements variable="view">
            <modelElement>
                <type name="org.andromda.metafacades.uml.FrontEndView">
                    <property name="popup">false</property>
                </type>
            </modelElement>
        </modelElements>
    </template>
	
	<template
        path="templates/angular/app/view/view.component.css.vsl"
        outputPattern="$componentPath/${fileName}.component.css"
        outlet="view-impls"
        overwrite="false">
        <modelElements variable="view">
            <modelElement>
                <type name="org.andromda.metafacades.uml.FrontEndView">
                    <property name="popup">false</property>
                </type>
            </modelElement>
        </modelElements>
    </template>
	
	<template
        path="templates/angular/app/view/view.component.spec.ts.vsl"
        outputPattern="$componentPath/${fileName}.component.spec.ts"
        outlet="views"
        overwrite="false">
        <modelElements variable="view">
            <modelElement>
                <type name="org.andromda.metafacades.uml.FrontEndView">
                    <property name="popup">false</property>
                </type>
            </modelElement>
        </modelElements>
    </template>
	
	<template
        path="templates/angular/app/view/table/table.component.ts.vsl"
        outputPattern="$componentPath/${fileName}.component.ts"
        outlet="views"
        overwrite="true">
        <modelElements>
            <modelElement>
                <type name="org.andromda.metafacades.uml.FrontEndView">
                    <property name="tables" variable="table"/>
                </type>
            </modelElement>
        </modelElements>
    </template>
	
	<template
        path="templates/angular/app/view/table/table.component.impl.ts.vsl"
        outputPattern="$componentPath/${fileName}.impl.component.ts"
        outlet="view-impls"
        overwrite="false">
        <modelElements>
            <modelElement>
                <type name="org.andromda.metafacades.uml.FrontEndView">
                    <property name="tables" variable="table"/>
                </type>
            </modelElement>
        </modelElements>
    </template>
	
	<template
        path="templates/angular/app/view/table/table.component.html.vsl"
        outputPattern="$componentPath/${fileName}.component.html"
        outlet="view-impls"
        overwrite="false">
        <modelElements>
            <modelElement>
                <type name="org.andromda.metafacades.uml.FrontEndView">
                    <property name="tables" variable="table"/>
                </type>
            </modelElement>
        </modelElements>
    </template>
	
	<template
        path="templates/angular/app/view/table/table.component.spec.ts.vsl"
        outputPattern="$componentPath/${fileName}.component.spec.ts"
        outlet="views"
        overwrite="false">
        <modelElements>
            <modelElement>
                <type name="org.andromda.metafacades.uml.FrontEndView">
                    <property name="tables" variable="table"/>
                </type>
            </modelElement>
        </modelElements>
    </template>
	
	<template
        path="templates/angular/app/view/table/table.component.css.vsl"
        outputPattern="$componentPath/${fileName}.component.css"
        outlet="view-impls"
        overwrite="false">
        <modelElements>
            <modelElement>
                <type name="org.andromda.metafacades.uml.FrontEndView">
                    <property name="tables" variable="table"/>
                </type>
            </modelElement>
        </modelElements>
    </template>
	
	<template
        path="templates/angular/app/view/action/view.action.html.vsl"
        outputPattern="${actionPath}.component.html"
        outlet="view-impls"
        overwrite="false">
        <modelElements variable="action">
            <modelElement>
                <type name="org.andromda.metafacades.uml.FrontEndAction">
                    <property name="tableLink">false</property>
                    <property name="input"/>
                </type>
            </modelElement>
        </modelElements>
    </template>
    
	<template
        path="templates/angular/app/view/action/view.action.ts.vsl"
        outputPattern="${actionPath}.component.ts"
        outlet="views"
        overwrite="true">
        <modelElements variable="action">
            <modelElement>
                <type name="org.andromda.metafacades.uml.FrontEndAction">
                    <property name="tableLink">false</property>
                    <property name="input"/>
                </type>
            </modelElement>
        </modelElements>
    </template>
	
	<template
        path="templates/angular/app/view/action/view.action.impl.ts.vsl"
        outputPattern="${actionPath}.impl.component.ts"
        outlet="view-impls"
        overwrite="false">
        <modelElements variable="action">
            <modelElement>
                <type name="org.andromda.metafacades.uml.FrontEndAction">
                    <property name="tableLink">false</property>
                    <property name="input"/>
                </type>
            </modelElement>
        </modelElements>
    </template>
    
	<template
        path="templates/angular/app/view/action/view.action.css.vsl"
        outputPattern="${actionPath}.component.css"
        outlet="view-impls"
        overwrite="false">
        <modelElements variable="action">
            <modelElement>
                <type name="org.andromda.metafacades.uml.FrontEndAction">
                    <property name="tableLink">false</property>
                    <property name="input"/>
                </type>
            </modelElement>
        </modelElements>
    </template>
    
	<template
        path="templates/angular/app/view/action/view.action.spec.ts.vsl"
        outputPattern="${actionPath}.component.spec.ts"
        outlet="views"
        overwrite="false">
        <modelElements variable="action">
            <modelElement>
                <type name="org.andromda.metafacades.uml.FrontEndAction">
                    <property name="tableLink">false</property>
                    <property name="input"/>
                </type>
            </modelElement>
        </modelElements>
    </template>
    <!--template
        path="templates/angular/app/forms/FormImpl.ts.vsl"
        outputPattern="$generatedFile"
        outlet="forms"
        overwrite="true">
        <modelElements variable="action">
            <modelElement>
                <type name="org.andromda.metafacades.uml.FrontEndAction">
                    <property name="formFields"/>
                </type>
            </modelElement>
        </modelElements>
    </template>
    <template
        path="templates/angular/app/forms/Form.ts.vsl"
        outputPattern="$generatedFile"
        outlet="forms"
        overwrite="true">
        <modelElements variable="operation">
            <modelElement>
                <type name="org.andromda.metafacades.uml.FrontEndControllerOperation">
                    <property name="formFields"/>
                </type>
            </modelElement>
        </modelElements>
    </template-->
    <!--template
        path="templates/angular/app/flow/view.populator.ts.vsl"
        outputPattern="$stringUtils.replace($useCase.packageName, '.', '/')/${fileName}.view.populator.ts"
        outlet="controllers"
        overwrite="true">
        <modelElements>
            <modelElement variable="useCase">
                <type name="org.andromda.metafacades.uml.FrontEndUseCase">
                    <property name="views"/>
                </type>
            </modelElement>
        </modelElements>
    </template-->
    <template
        path="templates/angular/app/utils/controller.base.ts.vsl"
        outputPattern="$generatedFile"
        outlet="controllers"
        overwrite="true"/>
</cartridge>