<?xml version="1.0" encoding="UTF-8" ?>

<profile>
    <documentation>
        <p>
            Most of the model elements will require a stereotype to be processed correctly, below you will find
            a table indicating on which model element you may put what stereotype, it will also
            denote which effect this has on the generation process.
        </p>
        <p>
            Sometimes it happens you want to add information to the model but there is no clean way of doing it.
            In those cases you may want to resort to tagged values, but these cases should be considered with
            caution. A tagged value is something extra, something optional, and the application should
            run fine without them.
        </p>
        <p>
            The Angular cartridge allows you to add tagged values here and there but provides a default value
            in case they are missing.
        </p>
    </documentation>
    <elements>
        <elementGroup name="Stereotypes">
            <element name="MANAGEABLE_ATTRIBUTE">
                <documentation>
                    Modeled on a property.
                </documentation>
                <value>ManageableAttribute</value>
                <appliedOnElement>Attribute of Manageable class</appliedOnElement>
            </element>
            <element name="VALUE_OBJECT">
                <documentation>
                     Produces Angular value objects.
                </documentation>
                <value>ValueObject</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
            <element name="ENUMERATION">
                <documentation>
                     Produces type-safe Angular enumeration objects.
                </documentation>
                <value>Enumeration</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
            <element name="SERVICE">
                <documentation>
                    (From Java profile) Creates a backend file for each model element with
                    this stereotype.  Each method to be exposed, must be
                    stereotyped with the <![CDATA[<<WebServiceOperation>>]]> stereotype.
                </documentation>
                <value>Service</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
            <element name="WEBSERVICE">
                <documentation>
                    Creates a backend service fragment and exposes ALL methods of the element
                    as a web service.
                </documentation>
                <value>WebService</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
            <element name="WEB_SERVICE_OPERATION">
                <documentation>
                    This is used in conjunction with the <![CDATA[<<Service>>]]> stereotype.
                    Adds the method to the list of allowed methods
                    which will be exposed as a web service.  You <strong>MUST</strong>
                    place this stereotype on an operation if you want it exposed
                    as a web service (unless you add the <![CDATA[<<WebService>>]]> stereotype to your class).
                </documentation>
                <value>WebServiceOperation</value>
                <appliedOnElement>Service operation</appliedOnElement>
            </element>
            <element name="SERVICE_OPERATION">
                <documentation>
                    This is used in conjunction with the <![CDATA[<<Service>>]]> stereotype.
                    Adds the method to the list of allowed methods
                    which will be exposed as a web service.  You <strong>MUST</strong>
                    place this stereotype on an operation if you want it exposed
                    as a web service (unless you add the <![CDATA[<<WebService>>]]> stereotype to your class).
                </documentation>
                <value>WebServiceOperation</value>
                <appliedOnElement>Service operation</appliedOnElement>
            </element>
            <element name="XML_SCHEMA">
                <documentation>
                    (From XML profile) Defines a package which is mapped to a Schema Namespace, so that an .xsd
                    file is created for this package and imported by the wsdl files that reference the schema.
                    ValueObjects referenced in the service must be in a package with this Stereotype if
                    importedXSD=true (the default).
                </documentation>
                <value>XmlSchema</value>
                <appliedOnElement>Package</appliedOnElement>
            </element>
            <element name="FRONT_END_EXCEPTION">
                <documentation>
                    Modeled on a transition it designates an exception occuring while processing an action,
                    must exit an action state and enter a <![CDATA[<<FrontEndView>>]]>.
                </documentation>
                <value>FrontEndException</value>
                <appliedOnElement>Transition</appliedOnElement>
            </element>
            <element name="FRONT_END_REGISTRATION">
                <documentation>
                    Modeled on a use case, this stereotype indicates that this use case
                    is a front-end registration wizard.  This will cause a link on the login
                    taking the user to this use case.
                </documentation>
                <value>FrontEndRegistration</value>
                <appliedOnElement>UseCase</appliedOnElement>
            </element>
            <element name="FRONT_END_NAVIGATION">
                <documentation>
                    Modeled on a use case, this stereotype indicates that this use case
                    is a front-end navigation element.  This will cause this use-case to
                    be included in the menu-model for the application.
                </documentation>
                <value>FrontEndNavigation</value>
                <appliedOnElement>UseCase</appliedOnElement>
            </element>
            <element name="FRONT_END_SESSION_OBJECT">
                <documentation>
                    These classes can be associated to controllers. They represent objects that persist
                    during the session of the user. For each such session object associated with a controller
                    the controller will have accessor methods for this object. <i>Use a dependency from the controller
                    to the session object to properly model this relationship, a controller can depend on many
                    such session objects; and in the same way a session object might be shared between controllers.</i>
                </documentation>
                <value>FrontEndSessionObject</value>
                <appliedOnElement>Class</appliedOnElement>
            </element>
            <element name="FRONT_END_COMPONENT">
                <documentation>
                     Produces Angular components objects.
                </documentation>
                <value>FrontEndComponent</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
        </elementGroup>
        <elementGroup name="Tagged Values">
            <documentation>
                Jsf allows you to add tagged values here and there but provides a
                default value in the event that they are missing.
            </documentation>
            <element name="MANAGEABLE_IMPLEMENTATION">
                <documentation>
                Added to manageable classes that needs the Impl class to change the
                default behavior.
                </documentation>
                <value>andromda_manageable_implementation</value>
                <appliedOnElement>Manageable class</appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value default="true">false</value>
                </allowedValues>
            </element>
            <element name="ATTRIBUTE_SEARCHABLE">
                <documentation>
                </documentation>
                <value>andromda_manageable_attribute_searchable</value>
                <appliedOnElement>Manageable attribute</appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value default="true">false</value>
                </allowedValues>
            </element>
            <element name="ATTRIBUTE_IGNORE">
                <documentation>
                </documentation>
                <value>andromda_manageable_attribute_ignore</value>
                <appliedOnElement>Manageable attribute</appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value default="true">false</value>
                </allowedValues>
            </element>
            <element name="ATTRIBUTE_DISPLAY">
                <documentation>
                    The column representing this entity,by default the first <![CDATA[<<Unique>>]]> attribute found
                    is taken but you might want to specify another column yourself. This value is used when one entity
                    has a foreign key to another one and you want to select the value of this foreign key
                    from a combobox and you would like to see a more meaningful label for each option, if no
                    <![CDATA[<<Unique>>]]> attribute is found the identifier is used, which isn't very helpful.
                </documentation>
                <value>andromda_manageable_attribute_display</value>
                <appliedOnElement>Manageable attribute</appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value default="true">false</value>
                </allowedValues>
            </element>
            <element name="ACTION_TYPE">
                <documentation>
                    Modeled on a transition coming out of an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype.
                    Indicates the type of trigger causing the action, possible values are hyperlink, image and form. Form
                    is the default value.
                </documentation>
                <value>andromda_presentation_web_action_type</value>
                <appliedOnElement>Transition coming out of an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value default="true">form</value>
                    <value>hyperlink</value>
                    <value>image</value>
<!--                <value>popup</value>  popup isn't working -->
                </allowedValues>
            </element>
            <element name="ACTION_TABLELINK">
                <documentation>
                    Denotes this action applies on the information shown in a tabular format, you will need to specify
                    the name of the table as the value, optionally suffix with a dot and the name of the column.
                    If the column is specified the action will be rendered in that specific column, otherwise a new
                    column will be created for it.
                </documentation>
                <value>andromda_presentation_web_action_tablelink</value>
                <appliedOnElement>Transition coming out of an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype</appliedOnElement>
            </element>
            <element name="ACTION_FORM_SCOPE">
                <documentation>
                    This allows one to override the action form scope defined
                    by the <a href="namespace.html#formScope">formScope</a> namespace property.
                </documentation>
                <value>andromda_presentation_web_action_form_scope</value>
                <appliedOnElement>Transition coming out of an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value>session</value>
                    <value>request</value>
                </allowedValues>
            </element>
            <element name="ACTION_FORM_RESET">
                <documentation>
                    This allows one to reset all parameter values on the form after
                    the action is invoked (this is useful when you have an action transition
                    coming back to the same page and want the form variables reset to their original
                    values before the action was submitted).
                </documentation>
                <value>andromda_presentation_web_action_form_reset</value>
                <appliedOnElement>Transition coming out of an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value default="true">false</value>
                </allowedValues>
            </element>
            <element name="ACTION_FORM_KEY">
                <documentation>
                    Denotes the name of the key under which this action's form is stored under.
                    Will only be used when the form is not empty, and is ignored otherwise. This feature is useful
                    when you are doing something that requires more than one action to be executed at the same
                    time and you don't want form key names colliding.
                </documentation>
                <value>andromda_presentation_web_action_form_key</value>
                <appliedOnElement>Transition coming out of an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value default="true">form</value>
                    <value>any string is allowed</value>
                </allowedValues>
            </element>
            <element name="ACTION_RESETTABLE">
                <documentation>
                    Set this value to <code>true</code> if you want to be able
                    to reset forms to their initial values (i.e. have a reset button rendered).
                </documentation>
                <value>andromda_presentation_web_action_resettable</value>
                <appliedOnElement>Transition coming out of an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value default="true">false</value>
                    <value>true</value>
                </allowedValues>
            </element>
            <element name="VIEW_TYPE">
                <documentation>
                    Represents the type of view (regular, popup, etc).
                </documentation>
                <value>andromda_presentation_web_view_type</value>
                <appliedOnElement>A <![CDATA[<<FrontEndView>>]]></appliedOnElement>
            </element>
            <element name="INPUT_TYPE">
                <documentation>
                    Indicates the type of parameter, this information will be used when rendering the views,
                    possible values are: link, multibox, text, textarea, checkbox, radio, select, password,
                    hidden and plaintext.
                </documentation>
                <value>andromda_presentation_web_view_field_type</value>
                <appliedOnElement>Parameter coming out of an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value default="true">text</value>
                    <value>select</value>
                    <value>password</value>
                    <value>hidden</value>
                    <value>textarea</value>
                    <value>checkbox</value>
                    <value>radio</value>
                    <value>multibox</value>
                </allowedValues>
            </element>
            <element name="INPUT_RESET">
                <documentation>
                    Indicates whether or not the field should be reset (to its orginal value)
                    after the execution of the action.  This is useful when you want only
                    some of the parameters reset on the form but not all of them.
                </documentation>
                <value>andromda_presentation_web_view_field_reset</value>
                <appliedOnElement>Parameter coming out of an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value default="true">false</value>
                    <value>true</value>
                </allowedValues>
            </element>
            <element name="INPUT_VALIDWHEN">
                <documentation>
                    Additional validation to be performed, specify a
                    commons-validator condition here, see
                    <a href="http://struts.apache.org/userGuide/dev_validator.html"
                        target="_blank">Struts-Validator</a> and go to the section labeled
                    <code>http://struts.apache.org/userGuide/dev_validator.html</code>. The required
                    parentheses will automatically be placed around your condition.
                </documentation>
                <value>andromda_presentation_web_view_field_validwhen</value>
                <appliedOnElement>Parameter coming out of an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value>a Struts 'validwhen' condition</value>
                </allowedValues>
            </element>
            <element name="INPUT_EQUAL">
                <documentation>
                    Allows the comparison between 2 fields, this allows you to specify the
                    other field that a parameter must equal in order to be valid (like when
                    comparing two passwords)
                </documentation>
                <value>andromda_presentation_web_view_field_equal</value>
                <appliedOnElement>Parameter coming out of an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value>a Struts 'validwhen' condition</value>
                </allowedValues>
            </element>
            <element name="INPUT_VALIDATORS">
                <documentation>
                    Custom validation to be performed, you can add one or more of your own validators here.
                    Make sure you add your validator definitions in <code>validator-rules.xml</code>,
                    there is a <a href="../andromda-cartridges/index.html#mergeMappingsUri">merge point</a>
                    that can be used to have them automatically inserted.
                    Validator values look like this: <code>myValidator</code>,
                    <code>myValidator(myVar=myArg)</code>,
                    <code>myValidator(myVar=myArg,myVar2=myArg2)</code>, etc...
                    Specify each validator using a new value, don't specify all of them in a single value.
                    Be careful when using multiple validators with the same 'var' name, the last one
                    found will be used! Normally speaking this should not happen, so try to avoid it
                    (I recommend against using names used by known validators: minlength,
                    test, datePattern, ...)
                </documentation>
                <value>andromda_presentation_web_view_field_validators</value>
                <appliedOnElement>Parameter coming out of an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value>a call to one of your custom validators</value>
                </allowedValues>
            </element>
            <element name="INPUT_TABLELINK">
                <documentation>
                    The value is of the format <code>table.column</code> where
                    <code>table</code> denotes a parameter coming into
                    the page of type Collection (and containing a tagged value
                    to indicate it is to be displayed as a table); the
                    <code>column</code> part is used to indicate which column of
                    the corresponding table is to be used for linking.
                    The result will be that the specified table column will contain
                    a hyperlink reference to the action on which this parameter
                    resides, this is useful for example, to display a list of persons and view
                    their details by simply clicking on their names in the table
                    (for that to work this parameter's type should be 'link', use the
                    <code>andromda_presentation_web_view_field_type=link</code> tagged value for that).
                    The column name is optional, if you do not specify it the name
                    of the parameter will be assumed. By setting the parameter type you
                    can have any widget rendered into the table.
                </documentation>
                <value>andromda_presentation_web_view_field_tablelink</value>
                <appliedOnElement>Parameter coming out of an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value>
                        Any name of a table page-variable that is a collection type followed by a dot
                        and the name of the target column
                    </value>
                </allowedValues>
            </element>
            <element name="IS_TABLE">
                <documentation>
                    A flag indicating whether or not a parameter should be considered a table.  This must be
                    set to true when you wish to display a list of simple types (such as strings) within a table.
                </documentation>
                <value>andromda_presentation_view_table</value>
                <appliedOnElement>
                    A collection type parameter going into an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype
                </appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value default="true">false</value>
                </allowedValues>
            </element>
            <element name="INPUT_TABLE_IDENTIFIER_COLUMNS">
                <documentation>
                    Allows one to define which columns should be considered identifiers when creating an input table, these
                    columns determine how the value is merged with the backing value of the table to be submitted.
                </documentation>
                <value>andromda_presentation_view_field_table_identifier_columns</value>
                <appliedOnElement>
                    A collection type parameter (array is preferred) going out of an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype
                </appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value default="true">false</value>
                </allowedValues>
            </element>
            <element name="TABLE_COLUMNS">
                <documentation>
                    The collection will be displayed in scrollable tabular format.
                    Each column in this table will be mapped to a property of the object
                    type contained in the collection. So you will need to make sure all objects
                    have accessor methods for the property you list in this tagged value.
                    Properties are separated using a comma ','. More than one value maybe be assigned to
                    this tag, all properties will correctly be resolved.
                </documentation>
                <value>andromda_presentation_view_table_columns</value>
                <appliedOnElement>
                    A collection type parameter going into an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype
                </appliedOnElement>
                <allowedValues>
                    <value>Comma-separated list of column names</value>
                </allowedValues>
            </element>
            <element name="TABLE_PAGEABLE">
                <documentation>
                    A flag indicating whether or not a table is "pageable".  When a table is flagged as "pageable", support for DB paging is generated.
                </documentation>
                <value>andromda_presentation_view_table_pageable</value>
                <appliedOnElement>A collection type parameter going into an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value default="true">false</value>
                </allowedValues>
            </element>
            <element name="INPUT_REQUIRED">
                <documentation>
                    Denotes whether or not this is a required field. If a field is required its type will always be
                    checked (you cannot enter a String value when an int is expected)
                </documentation>
                <value>andromda_presentation_view_field_required</value>
                <appliedOnElement>Parameter coming out of an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value default="true">false</value>
                    <value>true</value>
                </allowedValues>
            </element>
            <element name="INPUT_COLUMN_COUNT">
                <documentation>
                    Denotes the number of columns an input field should have.
                </documentation>
                <value>andromda_presentation_web_view_field_size</value>
                <appliedOnElement>Parameter coming out of an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value default="true">browser specific</value>
                    <value>any strictly positive integer</value>
                </allowedValues>
            </element>
            <element name="INPUT_ROW_COUNT">
                <documentation>
                    Denotes the number of rows on a textarea field.
                </documentation>
                <value>andromda_presentation_web_view_field_rows</value>
                <appliedOnElement>
                    Parameter coming out of an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype,
                    while having <code>andromda_presentation_web_view_field_textarea</code>
                </appliedOnElement>
                <allowedValues>
                    <value default="true">5</value>
                    <value>any strictly positive integer</value>
                </allowedValues>
            </element>
            <element name="INPUT_READONLY">
                <documentation>
                    Indicates the parameter is read only, it's value cannot be entered by the user
                </documentation>
                <value>andromda_presentation_view_field_readonly</value>
                <appliedOnElement>Parameter coming out of an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value default="true">false</value>
                    <value>true</value>
                </allowedValues>
            </element>
            <element name="ACTION_SUCCESS_MESSAGE">
                <documentation>
                    On action completion will have a success message rendered on screen
                </documentation>
                <value>andromda_presentation_action_success_message</value>
                <appliedOnElement>Transition</appliedOnElement>
                <allowedValues>
                    <value>
                        Any message you would like to see displayed, it will be included in the resource bundle
                        for internationalization
                    </value>
                </allowedValues>
            </element>
            <element name="ACTION_WARNING_MESSAGE">
                <documentation>
                    On action completion will have a warning message rendered on screen
                </documentation>
                <value>andromda_presentation_action_warning_message</value>
                <appliedOnElement>Transition</appliedOnElement>
                <allowedValues>
                    <value>
                        Any message you would like to see displayed, it will be included in the resource bundle
                        for internationalization
                    </value>
                </allowedValues>
            </element>
            <element name="INPUT_FORMAT">
                <documentation>
                    The format of this field's value.
                    <p>
                        <table cellpadding="5" rules="all">
                            <tr>
                                <th>Type</th>
                                <th>Value</th>
                                <th>Arguments</th>
                                <th>Example</th>
                                <th>Description</th>
                            </tr>
                            <tr>
                                <td>int, float, double, java.lang.Integer, java.lang.Float, java.lang.Double</td>
                                <td>range</td>
                                <td>2 of this type</td>
                                <td>range 2 12</td>
                                <td>Specifies in which range the value of this attribute must fall, '-' means no limit so 'range - 10' means any number less than or equal 10</td>
                            </tr>
                            <tr>
                                <td>java.lang.String</td>
                                <td>minlength</td>
                                <td>an integer value</td>
                                <td>minlength 4</td>
                                <td>Specifies the minimum number of characters</td>
                            </tr>
                            <tr>
                                <td>java.lang.String</td>
                                <td>maxlength</td>
                                <td>an integer value</td>
                                <td>maxlength 4</td>
                                <td>Specifies the maximum number of characters</td>
                            </tr>
                            <tr>
                                <td>java.lang.String</td>
                                <td>pattern</td>
                                <td>a regular expression</td>
                                <td>pattern [a-zA-Z]*</td>
                                <td>Validates format according to a regular expression (**), the leading
                                    '^' and trailing '$' must not be specified</td>
                            </tr>
                            <tr>
                                <td>java.lang.String</td>
                                <td>creditcard</td>
                                <td>N/A</td>
                                <td>creditcard</td>
                                <td>Validates the value to be a creditcard number, according to what is known as the Luhn check</td>
                            </tr>
                            <tr>
                                <td>java.lang.String</td>
                                <td>email</td>
                                <td>N/A</td>
                                <td>email</td>
                                <td>Checks if the specified value is a possible email address, IP addresses are also taken into account</td>
                            </tr>
                        </table>
                    </p>
                    <p>
                        (*) The format is specified by the java.text.SimpleDateFormat class from the Java 2 SDK, please
                        refer to the JavaDoc documentation of that class for more information, this format is case-sensitive
                        <a href="http://java.sun.com/j2se/1.5.0/docs/api/java/text/SimpleDateFormat.html">
                        SimpleDateFormat JavaDoc</a>
                        <br/>
                        (**) The pattern expression is a Perl regular expression as you would you use in Javascript,
                        by convention it requires the ^ and $ to denote respectively the beginning and ending of the pattern
                        <a href="http://devedge.netscape.com/library/manuals/2000/javascript/1.5/guide/regexp.html#1010689">
                        Netscape's guide to regular expressions in Javascript</a>
                    </p>
                </documentation>
                <value>andromda_presentation_view_field_format</value>
                <appliedOnElement>Parameter coming out of an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value>Any of the formats listed above</value>
                </allowedValues>
            </element>
            <element name="MANAGEABLE_MAXIMUM_LIST_SIZE">
                <documentation>
                    The maximum number of rows to fetch from the database in a single operation. Tune this parameter
                    to avoid downloading thousands of rows each time, most of the time the user will want to use
                    the search facility to refine the result set
                </documentation>
                <value>andromda_manageable_table_maxlistsize</value>
                <appliedOnElement>A class with the <![CDATA[<<Manageable>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value>a strictly positive integer</value>
                    <value default="true">250</value>
                </allowedValues>
            </element>
            <element name="MANAGEABLE_PAGE_SIZE">
                <documentation>
                    The maximum number of records to show on the same page.
                </documentation>
                <value>andromda_manageable_table_pagesize</value>
                <appliedOnElement>A class with the <![CDATA[<<Manageable>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value>a strictly positive integer</value>
                    <value default="true">20</value>
                </allowedValues>
            </element>
            <element name="MANAGEABLE_DISPLAY_NAME">
                <documentation>
                    "Deprecated" - use ATTRIBUTE_DISPLAY
                    The column representing this entity,by default the first <![CDATA[<<Unique>>]]> attribute found
                    is taken but you might want to specify another column yourself. This value is used when one entity
                    has a foreign key to another one and you want to select the value of this foreign key
                    from a combobox and you would like to see a more meaningful label for each option, if no
                    <![CDATA[<<Unique>>]]> attribute is found the identifier is used, which isn't very helpful.
                </documentation>
                <value>andromda_manageable_table_displayname</value>
                <appliedOnElement>A class with the <![CDATA[<<Manageable>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value>any column name present in this entity</value>
                    <value default="true">the name of the identifier column</value>
                </allowedValues>
            </element>
            <element name="MANAGEABLE_RESOLVEABLE">
                <documentation>
                    Whether or not the assocation to another entity should be represented using a combobox. You might
                    want to disable this feature if you are sure the target entity can have many different values
                    (meaning a table with lots of records).
                </documentation>
                <value>andromda_manageable_table_resolveable</value>
                <appliedOnElement>Association end to a class with the <![CDATA[<<Manageable>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value default="true">true</value>
                    <value>false</value>
                </allowedValues>
            </element>
        </elementGroup>
        <elementGroup name="Data Types">
            <element name="CHARACTER_TYPE">
                <documentation>
                </documentation>
                <value>datatype::char</value>
            </element>
            <element name="BYTE_TYPE">
                <documentation>
                </documentation>
                <value>datatype::byte</value>
            </element>
            <element name="SHORT_TYPE">
                <documentation>
                </documentation>
                <value>datatype::short</value>
            </element>
            <element name="INTEGER_TYPE">
                <documentation>
                </documentation>
                <value>datatype::int</value>
            </element>
            <element name="LONG_TYPE">
                <documentation>
                </documentation>
                <value>datatype::long</value>
            </element>
            <element name="FLOAT_TYPE">
                <documentation>
                </documentation>
                <value>datatype::float</value>
            </element>
            <element name="DOUBLE_TYPE">
                <documentation>
                </documentation>
                <value>datatype::double</value>
            </element>
            <element name="URL_TYPE">
                <documentation>
                </documentation>
                <value>datatype::URL</value>
            </element>
            <element name="TIME_TYPE">
                <documentation>
                </documentation>
                <value>datatype::Time</value>
            </element>
        </elementGroup>
    </elements>
</profile>
