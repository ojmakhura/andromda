// Generated by andromda-angular cartridge (service\service.ts.vsl) DO NOT EDIT
import { environment } from 'src/environments/environment'
#if ($service.restCount>0 && $stringUtils.isNotBlank($service.restPath))
import { HttpClient} from '@angular/common/http';
import { Injector } from '@angular/core';
#end
import { Observable } from 'rxjs';

#foreach ($import in $service.imports)
import { $import.name } from '@app/${import.importFilePath})';
#end

$service.importFilePath
$service.implementationImportFilePath

export abstract class $service.name {

#if ($service.restCount>0)
#if ($stringUtils.isNotBlank($service.restPath))
    protected path = #if($stringUtils.isNotBlank($service.restPath))"$service.restPath"#else"/${service.name.toLowerCase()}sws"#end;

#end
#end
#if ($service.restCount>0 && $stringUtils.isNotBlank($service.restPath))
    protected http: HttpClient;

    constructor(injector: Injector) {
        this.http = injector.get(HttpClient);
    }
#end
#foreach ($operation in $service.operations)
    /**
     * 
#if ($stringUtils.isNotBlank($operation.restRequestType))
     * $operation.restRequestType
#end
     * @Path($operation.restPath)
#if ($stringUtils.isNotBlank($operation.restProduces))
     * @Produces($operation.restProduces)
#end
#if ($stringUtils.isNotBlank($operation.restConsumes))
     * @javax.ws.rs.Consumes($operation.restConsumes)
#end
     */
    public abstract $operation.signature;
#end
}

