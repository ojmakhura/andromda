##
## This macro renders the <f:param> elements for a command link
##
#macro (renderAngularTableCommandLinkParameters)
#set ( $params = [])
#set($cr = '
')
#foreach ($parameter in $action.parameters)
#if ($table.tableColumnNames.contains($parameter.name) || $table.tableAttributeNames.contains($parameter.name))
#set ($ret = $params.add("row.${parameter.name}"))
#else
#set ($ret = $params.add("$parameter.name"))
#end
#end
#set($i = 0)
#foreach( $param in $params)
#set($i = $i + 1)
$param#if($i < $params.size()),$cr#end
#end
#end
##
## This macro renders the parameters for a function
##
#macro (renderAngularTableCommandLinkParametersWithTypes)
#set ( $params = [] )
#set($cr = '
')
#foreach ($parameter in $action.parameters)
#set ( $type = ${parameter.angularTypeName})
#set ( $ret = $params.add("$parameter.name: $type") )
#end
#set($i = 0)
#foreach( $param in $params)
#set($i = $i + 1)
$param#if($i < $params.size()),$cr#end
#end
#end
##
## This macro renders the parameters for a function
##
#macro (renderAngularTableCommandLinkParametersPlain)
#set ( $params = [])
#set($cr = '
')
#foreach ($parameter in $action.parameters)
#set ( $type = ${parameter.angularTypeName})
#set ( $ret = $params.add("$parameter.name") )
#end
#set($i = 0)
#foreach( $param in $params)
#set($i = $i + 1)
$param#if($i < $params.size()),$cr#end
#end
#end
##
## This macro renders the parameters for a function
##
#macro (renderAngularTableCommandLinkParametersForm)
#set ( $params = [])
#set($cr = '
')
#foreach ($parameter in $action.parameters)
#set ( $type = ${parameter.angularTypeName})
#set ( $ret = $params.add("$parameter.name") )
#end
#set($i = 0)
{
#foreach( $param in $params)
            $param: $param,
#end
        };
#end
##
## This macro renders the parameters for a function
##
#macro (renderAngularTableCommandLinkQueryParametersForm)
#set ( $params = [])
#set($cr = '
')
#foreach ($parameter in $action.parameters)
#set ( $type = ${parameter.angularTypeName})
#set ( $ret = $params.add("$parameter.name: #if($angularUtils.isComplex($parameter))JSON.stringify($parameter.name)#{else}$parameter.name#{end}") )
#end
#set($i = 0)
{
#foreach( $param in $params)
            $param,
#end
        };
#end