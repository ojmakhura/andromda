// Generated by andromda-angular cartridge (view\view.component.imp.ts.vsl) CAN EDIT!
## Find all the fields in the actions of the view
import { Component, Injector } from '@angular/core';
import { $view.componentName } from '@app/${view.filePath}';

@Component({
  selector: '${view.selectorName}',
  templateUrl: './${view.fileName}.html',
  styleUrls: ['./${view.fileName}.scss']
})
export class ${view.componentImplementationName} extends ${view.componentName} {

    constructor(private injector: Injector) {
        super(injector);
    }

    beforeOnInit(){
    }
	
    afterOnInit() {
#foreach($table in $view.tables)
        this.add${stringUtils.capitalize($table.name)}DummyData();
#end
#foreach ($action in $view.actions)
#if (!$action.tableLink)
#foreach($parameter in $action.parameters)
#if($parameter.inputSelect)
#if($parameter.angularTypeName=="number")
#set ($defaultValue = 1)
#elseif($parameter.angularTypeName=="Date")
#set ($defaultValue = "new Date()")
#else
#set ($defaultValue = "'${parameter.name}-1'")
#end
        this.${parameter.backingListName}.push($defaultValue);
#if($parameter.angularTypeName=="number")
#set ($defaultValue = 2)
#elseif($parameter.angularTypeName=="Date")
#set ($defaultValue = "new Date()")
#else
#set ($defaultValue = "'${parameter.name}-2'")
#end
        this.${parameter.backingListName}.push($defaultValue);
#end
#end
#end
#end
    }

    doNgAfterViewInit() {
      
    }

    handleFormChanges(change: any) {
    }

#foreach ($action in $view.actions)
    afterSet$stringUtils.capitalize(${action.formName})(form: any): void {
    }

    after$stringUtils.capitalize(${action.formEventName})(#if(!$action.formFields.empty)form: any#end) {    
    }

    before$stringUtils.capitalize($action.formEventName)(#if(!$action.formFields.empty)form: any#end) {
    }

#end
#if ($view.nonTableVariablesPresent)
    afterSet$stringUtils.capitalize(${view.varsFormName})(form: any): void {
    }
#end
}