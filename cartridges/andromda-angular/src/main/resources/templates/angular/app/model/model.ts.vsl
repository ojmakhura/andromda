#set($destination = $stringUtils.replaceChars(${class.packageName}, "\\.", "\\/"))
#set($fileName = $angularUtils.getComponentFileName(${class.name}))
#set ($attributes = [])
import { FormBuilder } from "@angular/forms";
#if($class.generalization)
import {$class.generalization.name} from '@$class.generalization.filePath';
#end

#foreach ($import in $class.imports)
#if($import.name != $class.name)
import {$import.name} from '@app/$import.filePath';
#end
#end

#foreach ($tmp in $class.attributes)
#if ($angularUtils.isComplex($tmp))
#if($tmp.type.name != ${class.name})
#set ( $ret = $attributes.add($tmp.type) )
#end
#end
#end
export class $class.name#if($class.generalization) extends $class.generalization.name#end {
#foreach ($attribute in $class.attributes)
#if(!$attribute.inputButton)
#if($angularUtils.isComplex($attribute) && !$attribute.many && !$angularUtils.isArray($attribute.getterSetterTypeName) && !$attribute.type.enumeration)

    $attribute.name?: ${attribute.getterSetterTypeName};
#else
#set ($default = "$attribute.defaultValue")
#if($attribute.many)
#set ($default = "new Array()")
#end 
    $attribute.name?: $attribute.getterSetterTypeName#if (!$attribute.many && $attribute.defaultValuePresent) = ${attribute.defaultValue}#end;
    
#end
#end
#end
    constructor() {
#if($class.generalization)
        super();
#end
    }
}
