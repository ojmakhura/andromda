#set($destination = $stringUtils.replaceChars(${class.packageName}, "\\.", "\\/"))
#set($fileName = $angularUtils.getComponentFileName(${class.name}))
#set ($attributes = [])
import { Injectable } from '@angular/core';
import { prop, model, propArray, propObject } from '@rxweb/reactive-form-validators';

#foreach ($tmp in $class.attributes)
#if ($angularUtils.isComplex($tmp))
#if($tmp.type.name != ${class.name})
#set ( $ret = $attributes.add($tmp.type) )
#end
#end
#end
#set ($suffix = "")
#foreach ($tmp in $angularUtils.getImports($attributes, ${class.packageName}, $suffix))
$tmp
#end

@Injectable()
@model([])
export class $class.name {
#foreach ($attribute in $class.attributes)

### Find the return type and the default values
#set ($returnType = $angularUtils.getDatatype($attribute.getterSetterTypeName))
#if($attribute.many || $angularUtils.isArray($attribute.getterSetterTypeName))
#set ($returnType = "Array<$returnType>")
#set ($default = "[]")
#else
#set ($default = "null")
#end
	@$angularUtils.getRxwebDecorator($attribute)
    $attribute.name: $returnType = $default;
#end

    ${class.name}() {
#foreach ($attribute in $class.attributes)
#if($angularUtils.isComplex($attribute) && !$attribute.many && !$angularUtils.isArray($attribute.getterSetterTypeName) && !$attribute.type.enumeration)
        this.$attribute.name = new ${attribute.type.name}();
#end
#end
    }

}
