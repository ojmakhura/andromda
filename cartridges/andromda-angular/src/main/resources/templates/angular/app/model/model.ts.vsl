#set($destination = $stringUtils.replaceChars(${class.packageName}, "\\.", "\\/"))
#set($fileName = $angularUtils.getComponentFileName(${class.name}))
#set ($attributes = [])
import { Injectable } from '@angular/core';
import { prop, model, propArray, propObject } from '@rxweb/reactive-form-validators';

#foreach ($import in $class.imports)
import {$import.name} from '@app/$import.filePath';
#end

#foreach ($tmp in $class.attributes)
#if ($angularUtils.isComplex($tmp))
#if($tmp.type.name != ${class.name})
#set ( $ret = $attributes.add($tmp.type) )
#end
#end
#end

@Injectable()
@model([])
export class $class.name {
#foreach ($attribute in $class.attributes)

    @$angularUtils.getRxwebDecorator($attribute)
#if($angularUtils.isComplex($attribute) && !$attribute.many && !$angularUtils.isArray($attribute.getterSetterTypeName) && !$attribute.type.enumeration)

    $attribute.name: ${attribute.type.name} = <${attribute.type.name}>{
#foreach($attr in ${attribute.type.attributes})
#if($attr.many || $angularUtils.isArray($attr.getterSetterTypeName))
#set ($def = "new Array()")
#else
#set ($def = "null")
#end
        $attr.name: $def,
#end
    };
#else
#set ($default = "$attribute.defaultValue")
#if($attribute.many)
#set ($default = "new Array()")
#end
    $attribute.name: $attribute.angularTypeName#if($attribute.many)[]#end = $default;
#end
#end
    
    constructor() {}
}
