// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable, Injector } from '@angular/core';
import { Observable } from 'rxjs';
//import { $service.name } from '@app/$service.filePath';
#foreach ($import in $service.imports)
#if(${import.implementationFilePath})
import { $import.implementationName } from '@app/${import.implementationFilePath}';
#else
import { $import.name } from '@app/${import.filePath}';
#end
#end

@Injectable()
export class ${service.implementationName} { //extends ${service.name} {

    constructor(private injector: Injector) {
        //super(injector);
    }

#foreach ($operation in $service.allowedOperations)
    public override $operation.signature {

#set ($methodName = $operation.restRequestType)
#if(!$operation.arguments.empty)
#set($pathVars = "")
#set($count = 0)
#foreach ($arg in $operation.arguments)
#set ($begin = "{")
#set ($end = "}")
#set ($dollar = "$")
#set($pathVars = "$pathVars/$arg.name/$dollar${begin}${arg.name}$end")
#end
#end
#if ( $methodName.equals("get")) 
        return this.http.${methodName}<$operation.returnTypeName>(this.path#if($operation.restPath.length() > 0) + `$operation.restPath`#end);
#elseif ( $methodName.equals("delete")) 
        return this.http.${methodName}<$operation.returnTypeName>(this.path#if($operation.restPath.length() > 0) + `$operation.restPath`#end);
#else
        return this.http.${methodName}<$operation.returnTypeName>(this.path#if($operation.restPath.length() > 0) + `$operation.restPath`#end#if (!$operation.arguments.empty), $angularUtils.getMethodCallArguments($operation.arguments)#end);
#end

    }

#end
}