// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable, Injector } from '@angular/core';
#if ($service.restCount>0 && $stringUtils.isNotBlank($service.restPath))
import { HttpClient} from '@angular/common/http';
#end
import { Observable } from 'rxjs';
import { $service.name } from '@app/$service.importFilePath';
#foreach ($import in $service.imports)
import { $import.name } from '@app/${import.importFilePath})';
#end

@Injectable()
export class ${service.implementationName} extends ${service.name} {

    constructor(private injector: Injector) {
        super(injector);
    }

#foreach ($operation in $service.operations)
    public $operation.signature {
#set ($methodName = $angularUtils.getWebServiceMethodName($operation))
#set ($methodPath = $angularUtils.getWebServiceOperationPath($operation.restPath))
#if ( $methodName.equals("get")) 
        return this.http.get<$operation.returnTypeName>(this.path + '$methodPath/'#foreach($arg in $operation.arguments) + $arg.name#end);
#elseif ( $methodName.equals("post")) 
        return this.http.post<$operation.returnTypeName>(this.path + '$methodPath'#if (!$stringUtils.isBlank($restParams)), $restParams#end);
#elseif ( $methodName.equals("delete")) 
        return this.http.delete<$operation.returnTypeName>(this.path + '$methodPath/'#foreach ($arg in $operation.arguments) + $arg.name#end);
#elseif ( $methodName.equals("put")) 
        return this.http.put<$operation.returnTypeName>(this.path + '$methodPath'#if (!$stringUtils.isBlank($restParams)), $restParams#end);
#else 
        return this.http.post<$operation.returnTypeName>(this.path + '$methodPath'#if (!$stringUtils.isBlank($restParams)), $restParams#end);
#end
    }

#end
}