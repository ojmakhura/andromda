// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable, Injector } from '@angular/core';
#if ($service.restCount>0 && $stringUtils.isNotBlank($service.restPath))
import { HttpClient} from '@angular/common/http';
#end
import { Observable } from 'rxjs';
import { $service.name } from '@app/$service.filePath';
#foreach ($import in $service.imports)
#if(${import.implementationFilePath})
import { $import.implementationName } from '@app/${import.implementationFilePath}';
#else
import { $import.name } from '@app/${import.filePath}';
#end
#end

@Injectable()
export class ${service.implementationName} extends ${service.name} {

    constructor(private injector: Injector) {
        super(injector);
    }

#foreach ($operation in $service.allowedOperations)
#set ($restParams = $angularUtils.getMethodCallArguments($operation.arguments))
    public $operation.signature {

#set ($methodName = $operation.restRequestType)
#if ( $methodName.equals("get")) 
        return this.http.get<$operation.returnTypeName>(this.path + $operation.restPath);
#elseif ( $methodName.equals("delete")) 
        return this.http.delete<$operation.returnTypeName>(this.path + $operation.restPath);
#else
#if(!$operation.arguments.empty)
        let formData: any = new FormData();
#foreach ($arg in $operation.arguments)
#if($operation.arguments.size() > 1)
        formData.append("$arg.name", $arg.name)
#else
        formData = $arg.name;
#end
#end
#end
        return this.http.post<$operation.returnTypeName>(this.path + $operation.restPath#if (!$operation.arguments.empty), formData#end);
#end

    }

#end
}