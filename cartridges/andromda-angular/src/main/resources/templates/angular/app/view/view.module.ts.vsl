// Generated by andromda-angular cartridge (view\view.module.ts.vsl) DO NOT EDIT
#set ( $componentPath = $stringUtils.replaceChars($stringUtils.lowerCase(${view.packageName}), '\\.', '\\/') )
#set ( $fileName = $angularUtils.getComponentFileName("${view.name}"))
#set ($params = $angularUtils.getFormFields($view.actions))
#set ($cr = "
")
#set ($tmpName = ${angularUtils.getComponentName("$fileName", "-")})
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { TranslateModule } from '@ngx-translate/core';
import { FlexLayoutModule } from '@angular/flex-layout';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { RxReactiveFormsModule } from '@rxweb/reactive-form-validators';

import { SharedModule } from '@shared';
import { MaterialModule } from '@app/material.module';
import { ${tmpName}ImplComponent } from './${fileName}.impl.component';
import { ${tmpName}RoutingModule } from './${fileName}-routing.module';
#if ($view.nonTableVariablesPresent)
import { ${tmpName}VarsImplComponent } from './${fileName}-vars.impl.component';
#end

#set ( $path = $stringUtils.replaceChars($view.useCase.controller.packageName, '\\.', '\\/') )
#set ( $file =  ${angularUtils.getComponentFileName("${view.useCase.controller.name}Impl")})
import { ${view.useCase.controller.name}Impl } from '@app/controller/$path/${file}';
#set ( $attr = [] )
#set ( $types = [] )
#set ( $components = [] )
#foreach ( $action in $view.actions )
#if (!$action.tableLink)
#set ( $rt = $components.add($action))
#set ( $actionPath = ${action.path} )
#set ( $actionName = $angularUtils.getActionName("$action.path") )
import { ${actionName}ImplComponent } from '@app/view${actionPath}.impl.component';
#foreach ($field in $action.formFields)
#if (!(${field.action} && $field.action.tableLinkName))
#if ($field.complex)
#set ( $rt = $attr.add($field ))
#set ( $rt = $types.add($field.type))
#end
#end
#end
#foreach ($tmp in $action.parameters)
#if($angularUtils.isComplex($tmp))
#set ( $rt = $types.add($tmp.type))
#foreach($attribute in $tmp.attributes)
#if($angularUtils.isComplex($attribute))
#set ( $rt = $types.add($attribute.type))
#end
#end
#end
#end
#end
#end
#foreach($table in $view.tables)
#set ( $tablePath = $stringUtils.replaceChars($stringUtils.lowerCase(${table.packageName}), '\\.', '\\/') )
#set ( $tableFile = $angularUtils.getComponentFileName("${table.view.name}-${table.name}") )
#set ( $className = $angularUtils.getComponentName($tableFile, "-"))
import { ${className}ImplComponent } from ${escTool.s}@app/view/${tablePath}/${tableFile}.impl.component${escTool.s};
#end
#set ( $finalAttr = [] ) ## No repetisions
#foreach ( $at in $angularUtils.getFacadeSet($types) )
#set ($rt = $finalAttr.add($at) )
#end
#foreach($a in $finalAttr)
#set ( $path = "$stringUtils.replaceChars($stringUtils.lowerCase(${a.packageName}), '\\.', '\\/')" )
#set ( $name = $angularUtils.getComponentFileName("$a.name") )
import { $a.name } from '@app/model/$path/$name';
#end

@NgModule({
  imports: [
    CommonModule,
    FormsModule,
    ReactiveFormsModule,
    RxReactiveFormsModule,
    TranslateModule,
    SharedModule,
    FlexLayoutModule,
    MaterialModule,
    ${tmpName}RoutingModule,
  ],
  declarations: [
    ${tmpName}ImplComponent,
#foreach($action in $components)
#set ( $className = $angularUtils.getActionName(${action.path}))
    ${className}ImplComponent,
#end
#foreach($table in $view.tables)
#set ( $tableFile = $angularUtils.getComponentFileName("${table.view.name}-${table.name}") )
#set ( $className = $angularUtils.getComponentName($tableFile, "-"))
    ${className}ImplComponent,
#end
#if ($view.nonTableVariablesPresent)
    ${tmpName}VarsImplComponent
#end
  ],
  entryComponents: [],
  providers: [],
})
export class ${tmpName}Module {}
