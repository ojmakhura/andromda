// Generated by andromda-jsf cartridge (app.module.ts.vsl) DO NOT EDIT!
#set ( $fields = [] )
#set ( $services = [] )
#set ( $tables = [] )
#set ( $actions = [] )
#set ( $views = [] )
#set ( $controllers = [] )
#set ( $cr = "
")
#set ( $moduleFileName = $angularUtils.getComponentFileName("${applicationId}") )
#set ( $moduleName = $angularUtils.getComponentName($moduleFileName, "-"))
// license-header angular merge-point
//
/**
 * @author Generated by app.module.ts.vsl in andromda-anglar-cartridge#if($dateTimeGeneratedText) on $javaUtils.date#end Do not modify by hand!
 *
 * MODEL CLASS:  $validationName
#foreach ($stereotype in $stereotypes)
 * STEREOTYPE:   $stereotype.name
#end
 */
##
import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { HttpClientModule } from '@angular/common/http';
import { ServiceWorkerModule } from '@angular/service-worker';
import { TranslateModule } from '@ngx-translate/core';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { MaterialModule } from './material.module';

import { environment } from '@env/environment';
import { CoreModule } from '@core';
import { SharedModule } from '@shared';
import { HomeModule } from './home/home.module';
import { ShellModule } from './shell/shell.module';
import { AppComponent } from './app.component';
import { AppRoutingModule } from './app-routing.module';

#set ($component = "component")
import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
#if($ngrx)
import { EffectsModule } from '@ngrx/effects';
import { StoreModule } from '@ngrx/store';
import { reducers, metaReducers } from './reducers';
import { ConnectFormDirective } from './connect-form.directive';
#end
#foreach ($useCase in $useCases)
#renderImports($useCase)
#end

#set ( $finalServices = $angularUtils.getFacadeSet($services) )
#foreach($service in $finalServices)
#if($angularUtils.isWebService($service))
#set ( $componentPath = $stringUtils.replaceChars($stringUtils.lowerCase(${service.packageName}), '\\.', '\\/') )
#set ( $fileName = $angularUtils.getComponentFileName("${service.name}") )
#set ( $className = $angularUtils.getComponentName($fileName, "-"))
import { ${service.name}Impl } from ${escTool.s}./impl/service/$componentPath/${fileName}-impl${escTool.s};
#end
#end

#set ( $controllerSet = $angularUtils.getFacadeSet($controllers) )
#foreach($controller in $controllerSet)
#set ( $componentPath = $stringUtils.replaceChars($stringUtils.lowerCase(${controller.packageName}), '\\.', '\\/') )
#set ( $fileName = $angularUtils.getComponentFileName("${controller.name}") )
#set ( $className = $angularUtils.getComponentName($fileName, "-"))
import { ${controller.name}Impl } from ${escTool.s}./impl/controller/$componentPath/${fileName}-impl${escTool.s};
#end

#set ( $componentSet = $angularUtils.getFacadeSet($views) )
#foreach($view in $componentSet)
#set ( $componentPath = $stringUtils.replaceChars($stringUtils.lowerCase(${view.packageName}), '\\.', '\\/') )
#set ( $fileName = $angularUtils.getComponentFileName("${view.name}") )
#set ( $className = $angularUtils.getComponentName($fileName, "-"))
import { ${className}ImplComponent } from ${escTool.s}./impl/view/${componentPath}/${fileName}.impl.component${escTool.s};
#end

#set ( $componentSet = $angularUtils.getFacadeSet($tables) )
#foreach($table in $componentSet)
#set ( $componentPath = $stringUtils.replaceChars($stringUtils.lowerCase(${table.packageName}), '\\.', '\\/') )
#set ( $fileName = $angularUtils.getComponentFileName("${table.view.name}-${table.name}") )
#set ( $className = $angularUtils.getComponentName($fileName, "-"))
import { ${className}ImplComponent } from ${escTool.s}./impl/view/${componentPath}/${fileName}.impl.component${escTool.s};
#end

#foreach($action in $actions)
#set ( $componentPath = $stringUtils.replaceChars($stringUtils.lowerCase(${action.packageName}), '\\.', '\\/') )
#set ( $className = $angularUtils.getActionName("${action.path}"))
import { ${className}ImplComponent } from ${escTool.s}./impl/view${action.path}.impl.component${escTool.s};
#end

#set ( $finalFields = [] )
#foreach ($finalField in $angularUtils.getFacadeSet($fields) )
#set ($dt = $angularUtils.getDatatype($finalField.fullyQualifiedName))
#if ($dt != "number" && $dt != "string" && $dt != "Date" && $dt != "Collection" && $dt != "any")
#set ( $rt = $finalFields.add($finalField) )
#end
#end
#set ( $suffix = "" )
#foreach ( $field in $finalFields )
#set($destination = $stringUtils.replaceChars(${field.packageName}, "\\.", "\\/"))
#set($fileName = $angularUtils.getComponentFileName(${field.name}))
import { $field.name } from './gen/model/$destination/$fileName';
#end

@NgModule({
    declarations: [
        AppComponent,
        MainComponent,
        HeaderComponent,
        NavigationComponent,
        NavigationComponent,
        FooterComponent,
        SideComponent,
#if($ngrx)
        ConnectFormDirective,
#end
#set ( $componentSet = $angularUtils.getFacadeSet($views) )
#foreach($view in $componentSet)
#set ( $fileName = $angularUtils.getComponentFileName("${view.name}") )
#set ( $className = $angularUtils.getComponentName($fileName, "-"))
        ${className}ImplComponent,
#end

#set ( $componentSet = $angularUtils.getFacadeSet($tables) )
#foreach($table in $componentSet)
#set ( $fileName = $angularUtils.getComponentFileName("${table.view.name}-${table.name}") )
#set ( $className = $angularUtils.getComponentName($fileName, "-"))
        ${className}ImplComponent,
#end

#set ($i = 1)
#foreach($action in $actions)
#set ( $className = $angularUtils.getActionName("${action.path}"))
        ${className}ImplComponent#if($i < $actions.size()),#end${escTool.n}#set ( $i = $i + 1 )
#end
    ],
    imports: [
        CommonModule,
        MatButtonModule,
        MatCheckboxModule,
        MatDatepickerModule,
        MatDialogModule,
        MatIconModule,
        MatInputModule,
        MatListModule,
        MatMenuModule,
        MatNativeDateModule,
        MatPaginatorModule,
        MatRippleModule,
        MatSelectModule,
        MatSidenavModule,
        MatSortModule,
        MatTableModule,
        MatTabsModule,
        MatToolbarModule,
        MatTooltipModule,
        BrowserModule,
        BrowserAnimationsModule,
        MatCardModule,
        HttpClientModule,
        FormsModule,
        ReactiveFormsModule,
        RxReactiveFormsModule,
        NgIdleKeepaliveModule.forRoot(),
        MomentModule,
        ModalModule.forRoot(),
        AppRoutingModule
#if($ngrx)
        EffectsModule.forRoot([]),
        StoreModule.forRoot(reducers, {
            metaReducers
        })
#end
    ],
    exports: [
        MatButtonModule,
        MatCheckboxModule,
        MatDatepickerModule,
        MatDialogModule,
        MatIconModule,
        MatCardModule,
        MatInputModule,
        MatListModule,
        MatMenuModule,
        MatNativeDateModule,
        MatPaginatorModule,
        MatRippleModule,
        MatSelectModule,
        MatSidenavModule,
        MatSortModule,
        MatTableModule,
        MatTabsModule,
        MatToolbarModule,
        MatTooltipModule
    ],
    providers: [
#set ($j = 0)
#foreach ($finalField in $angularUtils.getFacadeSet($fields) )
#set ($dt = $angularUtils.getDatatype($finalField.fullyQualifiedName))
#if ($dt != "number" && $dt != "string" && $dt != "Date" && $dt != "Collection" && $dt != "any")
#set ( $j = $j + 1 )
        $finalField.name,
#end
#end
#set ( $finalServices = $angularUtils.getFacadeSet($services) )
#foreach ( $finalService in $finalServices )
#if($angularUtils.isWebService($finalService))
        ${finalService.name}Impl,
#end
#end
#set ( $componentSet = $angularUtils.getFacadeSet($controllers) )
#foreach ( $controller in $componentSet )
        ${controller.name}Impl,
#end
#set ( $componentSet = $angularUtils.getFacadeSet($views) )
#foreach($view in $componentSet)
#set ( $fileName = $angularUtils.getComponentFileName("${view.name}") )
#set ( $className = $angularUtils.getComponentName($fileName, "-"))
        ${className}ImplComponent,
#end
#set ( $componentSet = $angularUtils.getFacadeSet($tables) )
#foreach($table in $componentSet)
#set ( $fileName = $angularUtils.getComponentFileName("${table.view.name}-${table.name}") )
#set ( $className = $angularUtils.getComponentName($fileName, "-"))
        ${className}ImplComponent,
#end
#set ($i = 1)
#foreach($action in $actions)
#set ( $className = $angularUtils.getActionName(${action.path}))
        ${className}ImplComponent#if($i < $actions.size()),#end${escTool.n}#set ( $i = $i + 1 )
#end

    ],
    bootstrap: [AppComponent]
})
export class AppModule { }
