#set ( $classNames = [] )
#set ( $imports = [] )
#set ( $moduleFileName = $angularHelper.getComponentFileName("${applicationId}") )
#set ( $moduleName = $angularHelper.getComponentName($moduleFileName, "-"))
// license-header angular merge-point
//
/**
 * @author Generated by app-routing.module.ts.vsl in andromda-anglar-cartridge#if($dateTimeGeneratedText) on $javaUtils.date#end Do not modify by hand!
 *
 * MODEL CLASS:  $validationName
#foreach ($stereotype in $stereotypes)
 * STEREOTYPE:   $stereotype.name
#end
 */
#set ($menuItems = "")
##
## A macro that renders the appropriate menu item
##
## parameters:
##     o  $pUseCase - the useCase to render
##     o  $ident - spaces to ident
##
#set ($menus = [])
#macro(getMenuItem $pUseCase $ident)
#set ($roles = $useCase.actionRoles)
#addDefaultRole($roles)
#foreach ($view in $pUseCase.views)
#set ($rt = $menus.add($view))
#set ( $componentPath = $stringUtils.replaceChars($stringUtils.lowerCase(${view.packageName}), '\\.', '\\/') )
#set ( $fileName = $angularHelper.getComponentFileName("${view.name}"))
#set ( $className = $angularHelper.getComponentName($fileName, "-") )
#set ( $rt = $classNames.add("${className}ImplComponent"))
#set ( $rt = $imports.add("import { ${className}ImplComponent } from ${escTool.s}./view/${componentPath}/${fileName}.impl.component${escTool.s};"))
## Actions
#foreach ($action in $view.actions)
#if (!$action.tableLink)
#set ( $actionPath = "$stringUtils.replaceChars($stringUtils.lowerCase(${action.packageName}), '\\.', '\\/')" )
#set ( $actionFileName = $angularHelper.getComponentFileName("$action.name") )
#set ( $actionName = "${angularHelper.getComponentName($action.name, '-')}" )
#set ( $rt = $classNames.add("${actionName}ImplComponent"))
#set ( $rt = $imports.add("import { ${actionName}ImplComponent } from ${escTool.s}./view/${actionPath}/${actionFileName}.impl.component${escTool.s};"))
#end
#end
## Tables
#foreach ($table in $view.tables)
#set ( $componentPath = $stringUtils.replaceChars($stringUtils.lowerCase(${table.packageName}), '\\.', '\\/') )
#set ( $fileName = $angularHelper.getComponentFileName("${table.view.name}-${table.name}") )
#set ( $className = $angularHelper.getComponentName($fileName, "-"))
#set ( $rt = $classNames.add("${className}ImplComponent"))
#set ( $rt = $imports.add("import { ${className}ImplComponent } from ${escTool.s}./view/${componentPath}/${fileName}.impl.component${escTool.s};"))
#end
#end
#if (!$children.empty)
#foreach ($child in $children)
#getMenuItem ($child "$ident    ")    
#end
#end
#end
import { NgModule } from '@angular/core';
import { Routes, RouterModule } from '@angular/router';
import { CommonModule } from '@angular/common';
#foreach ($useCase in $useCases)
#getMenuItem($useCase)
#end
#foreach ( $import in $angularHelper.getStringSet($imports) )
$import
#end

const routes: Routes = [
#set ( $i = 0 )
#foreach ($menu in $angularHelper.getStringSet($classNames) )
#set ( $i = $i + 1 )
    { path: '$stringUtils.lowerCase($stringUtils.substringBefore($menu, "Impl"))', component: ${menu} }#if( $i < $classNames.size() ),
#end
#end

];

@NgModule({
  imports: [
    CommonModule,
    RouterModule.forRoot(routes)
  ],
  exports: [
    RouterModule
  ]
})
export class ${moduleName}RoutingModule { }
