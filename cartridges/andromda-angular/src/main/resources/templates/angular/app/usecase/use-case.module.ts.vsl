// Generated by andromda-angular cartridge (view\use-case.module.ts.vsl) DO NOT EDIT
#set ($useCase = $controller.useCase)
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { TranslateModule } from '@ngx-translate/core';
import { FlexLayoutModule } from '@angular/flex-layout';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';

import { SharedModule } from '@shared';
import { CsvModule } from '@ctrl/ngx-csv';
import { MaterialModule } from '@app/material.module';
import { ${useCase.routingModuleName} } from './${useCase.routingModuleFileName}';
#foreach($view in $useCase.views)
#if(!$view.popup)
import { ${view.componentImplementationName} } from '@app/${view.implementationFilePath}'; // 1
#end
#foreach($import in $view.imports)
#if($import.tableComponentImplementationName)
import { $import.tableComponentImplementationName } from '@app/${import.implementationFilePath}'; // 2
#elseif($import.componentImplementationName)
import { $import.componentImplementationName } from '@app/${import.implementationFilePath}'; // 3
#end
#end
#end
#if($ngrx)
import { StoreModule } from '@ngrx/store';
import { EffectsModule } from '@ngrx/effects';
#set ($base = "${metafacadeWebUtils.toWebResourceName($useCase.storeName)}")
import { ${stringUtils.uncapitalize(${useCase.storeName})}Feature } from '@app/store$useCase.pathRoot/${base}.reducers';
import { ${useCase.storeName}Effects } from '@app/store$useCase.pathRoot/${base}.effects';
#end
#if($useCase.controller)
#set ($controller = $useCase.controller)
import { ${controller.implementationName} } from ${escTool.s}@app/${controller.implementationFilePath}${escTool.s};
#foreach($service in $controller.allRestControllers)
import { ${service.name} } from ${escTool.s}@app/${service.filePath}${escTool.s};
#end
#end

@NgModule({
  imports: [
    CommonModule,
    FormsModule,
    ReactiveFormsModule,
    TranslateModule,
    SharedModule,
    FlexLayoutModule,
    MaterialModule,
    CsvModule,
    ${useCase.routingModuleName},
#if($ngrx)
    StoreModule.forFeature(${stringUtils.uncapitalize(${useCase.storeName})}Feature),
    EffectsModule.forFeature([ ${useCase.storeName}Effects ])
#end
  ],
  declarations: [
#foreach($view in $useCase.views)
    ${view.componentImplementationName},
#foreach($import in $view.imports)
#if($import.tableComponentImplementationName)
    $import.tableComponentImplementationName,
#elseif($import.componentImplementationName)
    $import.componentImplementationName,
#end
#end
#end
  ],
  entryComponents: [],
  providers: [
#if($useCase.controller)
#set ($controller = $useCase.controller)
    ${useCase.controller.implementationName},
#foreach($service in $controller.allRestControllers)
    ${service.name},
#end
#end
  ],
})
export class ${useCase.moduleName} {}
