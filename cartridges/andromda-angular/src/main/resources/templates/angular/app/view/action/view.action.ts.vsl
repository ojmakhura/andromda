// Generated by andromda-angular cartridge (view\action\view.action.ts.vsl) DO NOT EDIT! -->
#set ( $actionPath = "$stringUtils.replaceChars($stringUtils.lowerCase(${action.packageName}), '\\.', '\\/')" )
#set ( $fileName = $angularHelper.getComponentFileName("${action.useCase.name} $action.trigger.name") )
#set ( $className = $angularHelper.getComponentName("$fileName", "-") )
import { Component, OnInit, Injector} from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
#set ( $viewFile = $angularHelper.getComponentFileName("${action.source.useCase.name}-${action.source.name}") )
#set ( $viewName = $angularHelper.getComponentName($viewFile, '-') )
import { ${viewName}Impl } from './${viewFile}.impl.component';
#set ( $parameters = [] )
#foreach( $parameter in $action.parameters )
#set ( $ret = $parameters.add($parameter) )
#end
#foreach ($field in $action.formFields)
#set ( $ret = $parameters.add($field) )
#end
#set ( $suffix = "" )
#foreach ($tmp in $angularHelper.getImports($parameters, "${action.packageName}", $suffix))
$tmp
#end
#set ($args = [])
#foreach ($service in $action.controller.allServices)
#set ($ret = $args.add($service))
#end
#set ($suffix = "Impl")
#foreach ($tmp in $angularHelper.getImports($args, "${action.packageName}", $suffix))
$tmp
#end

@Component({
  selector: '${action.name}-base',
  template: ''
})
export abstract class $className implements OnInit {

    protected route: ActivatedRoute;
    protected router: Router;
#foreach ($service in $action.controller.allServices)
    protected $stringUtils.uncapitalize($service.name): ${service.name}Impl;
#end
    protected $stringUtils.uncapitalize($viewName): ${viewName}Impl;

    constructor(injector: Injector) {

        this.route = injector.get(ActivatedRoute);
        this.router = injector.get(Router);
#foreach ($service in $action.controller.allServices)
        this.$stringUtils.uncapitalize($service.name) = injector.get(${service.name}Impl);
#end
        this.$stringUtils.uncapitalize($viewName) = injector.get(${viewName}Impl);
    }

    ngOnInit(): void {}

    abstract ${action.triggerName}();
}
