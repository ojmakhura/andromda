// Generated by andromda-jsf cartridge (view\action\view.action.ts.vsl) DO NOT EDIT! -->
#set ( $actionPath = "$stringUtils.replaceChars($stringUtils.lowerCase(${action.packageName}), '\\.', '\\/')" )
#set ( $actionName = $stringUtils.lowerCase($stringUtils.replaceChars("${action.useCase.name}-$action.trigger.name", '\\ ', '\\-')) )
#set($formName = $action.formBeanName)
import { Component, OnInit} from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
#set ( $parameters = [] )
#foreach( $parameter in $action.parameters )
#set ( $ret = $parameters.add($parameter) )
#end
#foreach ($field in $action.formFields)
#set ( $ret = $parameters.add($field) )
#end
#set ( $suffix = "" )
#foreach ($tmp in $angularHelper.getImports($parameters, "${action.packageName}", $suffix))
$tmp
#end
#set ($args = [])
#foreach ($service in $action.controller.allServices)
#set ($ret = $args.add($service))
#end
#set ($suffix = "Impl")
#foreach ($tmp in $angularHelper.getImports($args, "${action.packageName}", $suffix))
$tmp
#end

export abstract class $angularHelper.getComponentName($action.name, "-") implements OnInit {

#if (!$action.formFields.empty)
    // Action $action.name formFields
#end
## Impl uses $action.formFields, Form uses $operation.formFields
#set ( $attr = [] )
#foreach ($field in $action.formFields)
#if ( $field.many )
#set ( $rt = $attr.add($field ))
#else
#set ( $rt = $attr.add($field))
#end
#end
#foreach($parameter in $action.parameters)
#set ( $rt = $attr.add($parameter))
#end
#foreach ( $tmp in $angularHelper.getStringSet($attr) )
#if ( $tmp.many )
	$tmp.name: $angularHelper.getDatatype($tmp.type.fullyQualifiedName)[];
#else
	$tmp.name: $angularHelper.getDatatype($tmp.type.fullyQualifiedName);
#end
#end
	constructor(private route: ActivatedRoute, 
				private router: Router#foreach ($service in $action.controller.allServices),
				private $stringUtils.uncapitalize($service.name): ${service.name}Impl#end) {

	}

	ngOnInit(): void {

#foreach ($field in $action.formFields)
#if ( $field.many )
		this.$field.name = [];
#else
#set ($dtype = $angularHelper.getDatatype($field.type.fullyQualifiedName))
#if ($dtype == "string")
		this.$field.name = "";
#elseif ($dtype != "number")
		this.$field.name = new $dtype();
#end
#end
#end
	}
	
	abstract ${action.triggerName}();
}
