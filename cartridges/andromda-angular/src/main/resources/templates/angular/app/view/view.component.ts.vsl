// Generated by andromda-angular cartridge (view\view.component.ts.vsl) DO NOT EDIT
#set ( $componentPath = $stringUtils.replaceChars($stringUtils.lowerCase(${view.packageName}), '\\.', '\\/') )
#set ( $fileName = $angularHelper.getComponentFileName("${view.useCase.name}-${view.name}"))
## Find all the fields in the actions of the view
#set ( $fields = [] )
#foreach ( $action in $view.actions )
#foreach ( $field in $action.formFields )
#set ( $rt = $fields.add($field))
#end
#end
#set ( $finalFields = [] )
#foreach ($finalField in $angularHelper.getFacadeSet($fields) )
#set ( $rt = $finalFields.add($finalField) )
#end
#set ( $attr = [] )
#foreach ( $action in $view.actions )
#if (!$action.tableLink)
#set ( $actionPath = "$stringUtils.replaceChars($stringUtils.lowerCase(${action.packageName}), '\\.', '\\/')" )
#set ( $actionName = $angularHelper.getComponentFileName("${action.useCase.name}-$action.trigger.name") )
import { $angularHelper.getComponentName($action.name, "-")Impl } from './${actionName}.impl.component';
#foreach ($field in $action.formFields)
#if (!(${field.action} && $field.action.tableLinkName))
#if ($field.complex)
#set ( $rt = $attr.add($field ))
#end
#end
#end
#end
#end
#set ( $finalAttr = [] ) ## No repetisions
#foreach ( $at in $angularHelper.getFacadeSet($attr) )
#set ($rt = $finalAttr.add($at) )
#end
#foreach ($a in $angularHelper.getImports($finalAttr, $view.packageName, ""))
$a
#end

export abstract class $angularHelper.getComponentName("$fileName", "-") {

#foreach ( $action in $view.actions )
#if (!$action.tableLink)
#if (!$action.formFields.empty)
    // Action $action.name formFields
#end
## Impl uses $action.formFields, Form uses $operation.formFields
#set ( $attr = [] )
#foreach ($field in $action.formFields)
#if (!(${field.action} && $field.action.tableLinkName))
#if ( $field.many )
#set ( $rt = $attr.add($field ))
#else
#set ( $rt = $attr.add($field))
#end
#end
#end
#foreach ( $tmp in $angularHelper.getStringSet($attr) )
#if ( $tmp.many )
	$tmp.name: $angularHelper.getDatatype($tmp.type.fullyQualifiedName)[];
#else
	$tmp.name: $angularHelper.getDatatype($tmp.type.fullyQualifiedName);
#end
#end
#end
#end
	constructor() {
	}
	
}
