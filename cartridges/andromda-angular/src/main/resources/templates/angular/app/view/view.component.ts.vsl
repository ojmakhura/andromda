// Generated by andromda-jsf cartridge (view\view.component.ts.vsl) DO NOT EDIT!
#set ( $componentPath = $stringUtils.replaceChars($stringUtils.lowerCase(${view.packageName}), '\\.', '\\/') )
#set ( $fileName = $stringUtils.replaceChars($stringUtils.lowerCase(${view.name}), '\\ ', '\\-'))
#set ( $className = "$stringUtils.replaceChars($stringUtils.capitalize(${view.name}), '\\ ', '')View")
## Find all the fields in the actions of the view
#set ( $fields = [] )
#foreach ( $action in $view.actions )
#foreach ( $field in $action.formFields )
#set ( $rt = $fields.add($field))
#end
#end
#set ( $finalFields = [] )
#foreach ($finalField in $angularHelper.getFacadeSet($fields) )
#set ( $rt = $finalFields.add($finalField) )
#end
import { Component, OnInit} from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
#set ( $attr = [] )
#foreach ( $action in $view.actions )
#if (!$action.tableLink)
#set ( $actionPath = "$stringUtils.replaceChars($stringUtils.lowerCase(${action.packageName}), '\\.', '\\/')" )
#set ( $actionName = $stringUtils.lowerCase($stringUtils.replaceChars("${action.useCase.name}-$action.trigger.name", '\\ ', '\\-')) )
import { $angularHelper.getComponentName($action.name, "-")Impl } from './${actionName}.impl.component';
#foreach ($field in $action.formFields)
#if (!(${field.action} && $field.action.tableLinkName))
#if ($field.complex)
#set ( $rt = $attr.add($field ))
#end
#end
#end
#end
#end
#set ( $finalAttr = [] ) ## No repetisions
#foreach ( $at in $angularHelper.getFacadeSet($attr) )
#set ($rt = $finalAttr.add($at) )
#end
#foreach ($a in $angularHelper.getImports($finalAttr, $view.packageName, ""))
$a
#end

@Component({
  selector: '${fileName}-view',
  templateUrl: './${fileName}.component.html',
  styleUrls: ['./${fileName}.component.css']
})
export class ${className} implements OnInit {

#foreach ( $action in $view.actions )
#if (!$action.tableLink)

#if (!$action.formFields.empty)
    // Action $action.name formFields
#end
## Impl uses $action.formFields, Form uses $operation.formFields
#set ( $attr = [] )
#foreach ($field in $action.formFields)
#if (!(${field.action} && $field.action.tableLinkName))
#if ( $field.many )
#set ( $rt = $attr.add($field ))
#else
#set ( $rt = $attr.add($field))
#end
#end
#end
#foreach ( $tmp in $angularHelper.getStringSet($attr) )
#if ( $tmp.many )
	$tmp.name: $angularHelper.getDatatype($tmp.type.fullyQualifiedName)[];
#else
	$tmp.name: $angularHelper.getDatatype($tmp.type.fullyQualifiedName);
#end
#end
#end
#end

	constructor(private route: ActivatedRoute, 
				private router: Router) {
	}
	
	ngOnInit() {
#foreach ( $action in $view.actions )
#if (!$action.tableLink)

#foreach ($field in $action.formFields)
#if ( $field.many )
		this.$field.name = [];
#else
#set ($dtype = $angularHelper.getDatatype($field.type.fullyQualifiedName))
#if ($dtype == "string")
		this.$field.name = "";
#elseif ($dtype != "number")
		this.$field.name = new $dtype();
#end
#end
#end
#end
#end
	}
}
