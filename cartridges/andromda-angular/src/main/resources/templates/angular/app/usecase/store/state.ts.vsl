// Generated by andromda-angular cartridge (app\usecase\state.store.ts.vsl) DO NOT EDIT
#set ($useCase = $controller.useCase)
#set ($fileName = "${metafacadeWebUtils.toWebResourceName($useCase.storeName)}.state")
#set ($path = "$useCase.pathRoot")
#set($stateParams = [])
#set($stateParamsImports = [])
#foreach($view in $useCase.views)
#foreach($variable in $view.variables)
#set ( $rt = $stateParams.add($variable) )
#set ( $rt = $stateParamsImports.add($variable.type) )
#end
#foreach($action in $view.actions)
#foreach($field in $action.formFields)
#set ( $rt = $stateParams.add($field) )
#set ( $rt = $stateParamsImports.add($field.type) )
#end
#foreach($param in $action.parameters)
#set ( $rt = $stateParams.add($param) )
#set ( $rt = $stateParamsImports.add($param.type) )
#end
#end
#end
#set ( $finalParams = $angularUtils.getFacadeSet($stateParams) )
#set ( $paramImports = $angularUtils.getFacadeSet($stateParamsImports) )
#foreach($import in $paramImports)
#if($import.attributes.size() > 0)
import { $import.name } from '@app/${import.filePath}';
#end
#end

export const ${stringUtils.uncapitalize(${useCase.storeName})}Key = "$stringUtils.uncapitalize(${useCase.storeName})";

export interface ${useCase.storeName}State {
#foreach($param in $finalParams)
    $param.name: $param.angularTypeName | #if($param.many || $param.type.collectionType)Array<any>#{else}any#end,
#end
    error: any
}

export const initialState: ${useCase.storeName}State = {
#foreach($param in $finalParams)
    $param.name: #if($param.many || $param.type.collectionType)[]#{else}null#end,
#end
    error: null
};