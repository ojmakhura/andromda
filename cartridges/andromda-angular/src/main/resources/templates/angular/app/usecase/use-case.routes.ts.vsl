// Generated by andromda-angular cartridge (usecase\use-case-routing.module.ts.vsl) DO NOT EDIT
#set ($useCase = $controller.useCase)
import { importProvidersFrom } from '@angular/core';
import { Routes, RouterModule } from '@angular/router';
import { marker } from '@biesbjerg/ngx-translate-extract-marker';

import { Shell } from '@app/shell/shell.service';
import { ${useCase.componentName}Component } from '@app/${useCase.path}.component';
#set ($base = "${metafacadeWebUtils.toWebResourceName($useCase.storeName)}")
#if($ngrx)
import { StoreModule } from '@ngrx/store';
import { EffectsModule } from '@ngrx/effects';
#set ($base = "${metafacadeWebUtils.toWebResourceName($useCase.storeName)}")
import { ${stringUtils.uncapitalize(${useCase.storeName})}Feature } from '@app/store$useCase.pathRoot/${base}.reducers';
import { ${useCase.storeName}Effects } from '@app/store$useCase.pathRoot/${base}.effects';
#end

#if($secure)
import { AuthenticationGuard } from '@app/auth';
#end

#foreach($view in $useCase.views)
import { ${view.componentImplementationName} } from '@app/${view.implementationFilePath}';
#end
#if($useCase.controller)
#set ($controller = $useCase.controller)
import { ${controller.implementationName} } from ${escTool.s}@app/${controller.implementationFilePath}${escTool.s};
#foreach($service in $controller.allRestControllers)
import { ${service.name} } from ${escTool.s}@app/${service.filePath}${escTool.s};
#end
#end
#foreach($controller in $view.targetControllers)
import { ${controller.implementationName} } from ${escTool.s}@app/${controller.implementationFilePath}${escTool.s};
#end   

export const routes: Routes = [
  { 
      path: '', 
      component: ${useCase.componentName}Component, 
#if($secure)
      canActivate: [AuthenticationGuard],
#end
      data: { title: marker('${useCase.titleValue}') },
      providers: [
#if($useCase.controller)
#set ($controller = $useCase.controller)
        ${useCase.controller.implementationName},
#foreach($service in $controller.allRestControllers)
        ${service.name},
#end
#end
#if($ngrx)
        importProvidersFrom(StoreModule.forFeature(${stringUtils.uncapitalize(${useCase.storeName})}Feature)),
        importProvidersFrom(EffectsModule.forFeature([ ${useCase.storeName}Effects ]))
#end
      ] 
  },
#foreach($view in $useCase.views)
  { 
      path: '${view.routerPath}', 
      component: ${view.componentImplementationName}, 
#if($secure)
      canActivate: [AuthenticationGuard],
#end
      data: { title: marker('${stringUtils.toPhrase(${view.name})}') },
      providers: [ // $view.targetControllers
#foreach($controller in $view.targetControllers)
      $controller.variableName: ${controller.implementationName};
#end   
#if($useCase.controller)
#set ($controller = $useCase.controller)
        ${useCase.controller.implementationName},
#foreach($service in $controller.allRestControllers)
        ${service.name},
#end
#end
#if($ngrx)
        importProvidersFrom(StoreModule.forFeature(${stringUtils.uncapitalize(${useCase.storeName})}Feature)),
        importProvidersFrom(EffectsModule.forFeature([ ${useCase.storeName}Effects ]))
#end
      ] 
  },
#end
];

