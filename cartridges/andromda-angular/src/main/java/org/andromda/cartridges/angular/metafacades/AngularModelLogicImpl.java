// license-header java merge-point
//
// Generated by: MetafacadeLogicImpl.vsl in andromda-meta-cartridge.
package org.andromda.cartridges.angular.metafacades;

import java.util.Collection;
import java.util.HashSet;

import org.andromda.metafacades.uml.AttributeFacade;
import org.andromda.metafacades.uml.ModelElementFacade;
import org.andromda.utils.StringUtilsHelper;

/**
 * TODO: Model Documentation for org.andromda.cartridges.angular.metafacades.AngularModel
 * MetafacadeLogic implementation for org.andromda.cartridges.angular.metafacades.AngularModel.
 *
 * @see org.andromda.cartridges.angular.metafacades.AngularModel
 */
public class AngularModelLogicImpl
    extends AngularModelLogic
{
    private static final long serialVersionUID = 34L;
    /**
     * Public constructor for AngularModelLogicImpl
     * @see org.andromda.cartridges.angular.metafacades.AngularModel
     */
    public AngularModelLogicImpl (Object metaObject, String context)
    {
        super(metaObject, context);
    }

    @Override
    protected Collection<ModelElementFacade> handleGetImports() {
        HashSet<ModelElementFacade> imports = new HashSet<>();

        for(AttributeFacade attribute : this.getAttributes()) {
            if(attribute.getType().isEnumeration() || !attribute.getType().getAttributes().isEmpty()) {
                imports.add(attribute.getType());
            }
        }

        return imports;
    }

    @Override
    protected String handleGetAngularTypeName() {
        
        return this.getName();
    }

    @Override
    protected String handleGetFileName() {
        String phrase = StringUtilsHelper.toPhrase(this.getName()).toLowerCase();
        return phrase.replace(" ", "-");
    }

    @Override
    protected String handleGetImportFilePath() {
        return "model/" + this.getPackagePath() + '/' + this.getFileName();
    }

    
}