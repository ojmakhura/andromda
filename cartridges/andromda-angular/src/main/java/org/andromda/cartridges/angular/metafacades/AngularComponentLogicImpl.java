// license-header java merge-point
//
// Generated by: MetafacadeLogicImpl.vsl in andromda-meta-cartridge.
package org.andromda.cartridges.angular.metafacades;

import java.util.Collection;
import java.util.HashSet;

import org.andromda.metafacades.uml.UMLMetafacadeUtils;
import org.andromda.metafacades.uml.UMLProfile;
import org.andromda.utils.StringUtilsHelper;
import org.apache.commons.lang3.StringUtils;
import org.andromda.metafacades.uml.ModelElementFacade;
import org.andromda.metafacades.uml.AttributeFacade;
import org.andromda.metafacades.uml.OperationFacade;

/**
 * TODO: Model Documentation for org.andromda.cartridges.angular.metafacades.AngularComponent
 * MetafacadeLogic implementation for org.andromda.cartridges.angular.metafacades.AngularComponent.
 *
 * @see org.andromda.cartridges.angular.metafacades.AngularComponent
 */
public class AngularComponentLogicImpl
    extends AngularComponentLogic
{
    private static final long serialVersionUID = 34L;
    /**
     * Public constructor for AngularComponentLogicImpl
     * @see org.andromda.cartridges.angular.metafacades.AngularComponent
     */
    public AngularComponentLogicImpl (Object metaObject, String context)
    {
        super(metaObject, context);
    }

    @Override
    public String getPath() {
        // TODO Auto-generated method stub
        return super.getPath();
    }

    /**
     * A resource message key suited for the view's title.
     * @see org.andromda.cartridges.angular.metafacades.AngularComponent#getFileName()
     */
    protected String handleGetFileName()
    {
        String phrase = StringUtilsHelper.toPhrase(this.getBeanName()).toLowerCase();
        return phrase.replace(" ", "-") + ".component";
    }

    /**
     * TODO: Model Documentation for
     * org.andromda.cartridges.angular.metafacades.AngularComponent.filePath
     * @see org.andromda.cartridges.angular.metafacades.AngularComponent#getFilePath()
     */
    protected String handleGetFilePath()
    {
        String path = (String) this.findTaggedValue(UMLProfile.TAGGEDVALUE_PRESENTATION_PATH);

        if (StringUtilsHelper.isBlank(path)) {
            path = this.getPackagePath();
        }

        return path + "/" + this.getFileName();
    }

    /**
     * A resource message key suited for the view's title.
     * @see org.andromda.cartridges.angular.metafacades.AngularComponent#getImplementationFileName()
     */
    protected String handleGetImplementationFileName()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * TODO: Model Documentation for
     * org.andromda.cartridges.angular.metafacades.AngularComponent.implementationFilePath
     * @see org.andromda.cartridges.angular.metafacades.AngularComponent#getImplementationFilePath()
     */
    protected String handleGetImplementationFilePath()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * TODO: Model Documentation for
     * org.andromda.cartridges.angular.metafacades.AngularComponent.componentName
     * @see org.andromda.cartridges.angular.metafacades.AngularComponent#getComponentName()
     */
    protected String handleGetComponentName()
    {
        // TODO put your implementation here.
        return this.getName() + "Component";
    }

    /**
     * TODO: Model Documentation for
     * org.andromda.cartridges.angular.metafacades.AngularComponent.variableName
     * @see org.andromda.cartridges.angular.metafacades.AngularComponent#getVariableName()
     */
    protected String handleGetVariableName()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * TODO: Model Documentation for
     * org.andromda.cartridges.angular.metafacades.AngularComponent.selectorName
     * @see org.andromda.cartridges.angular.metafacades.AngularComponent#getSelectorName()
     */
    protected String handleGetSelectorName()
    {
        String phrase = StringUtilsHelper.toPhrase(this.getName()).toLowerCase();
        return phrase.replace(" ", "-");
    }

    /**
     * TODO: Model Documentation for
     * org.andromda.cartridges.angular.metafacades.AngularComponent.formName
     * @see org.andromda.cartridges.angular.metafacades.AngularComponent#getFormName()
     */
    protected String handleGetFormName()
    {
        return this.getBeanName() + "Form";
    }

    @Override
    protected Collection<ModelElementFacade> handleGetImports() {
        
        HashSet<ModelElementFacade> imports = new HashSet<>();

        for(OperationFacade operation : this.getOperations()) {
            
            if(operation.getReturnType().isEnumeration() || !operation.getReturnType().getAttributes().isEmpty()) {
                imports.add(operation.getReturnType());
            }
        }

        for(AttributeFacade attribute : this.getAttributes()) {

            if(attribute.getType().isEnumeration() || !attribute.getType().getAttributes().isEmpty()) {
                imports.add(attribute.getType());
            }
        }

        return imports;
    }
}