// license-header java merge-point
//
// Generated by: MetafacadeLogicImpl.vsl in andromda-meta-cartridge.
package org.andromda.cartridges.angular.metafacades;

/**
 * Represents an enumeration used within a JSF application.
 * MetafacadeLogic implementation for org.andromda.cartridges.angular.metafacades.AngularEnumeration.
 *
 * @see org.andromda.cartridges.angular.metafacades.AngularEnumeration
 */
public class AngularEnumerationLogicImpl
    extends AngularEnumerationLogic
{
    private static final long serialVersionUID = 34L;
    /**
     * Public constructor for AngularEnumerationLogicImpl
     * @see org.andromda.cartridges.angular.metafacades.AngularEnumeration
     */
    public AngularEnumerationLogicImpl (Object metaObject, String context)
    {
        super(metaObject, context);
    }

    /**
     * @return converterName
     * @see org.andromda.cartridges.jsf2.metafacades.JSFEnumeration#getConverterName()
     */
    protected String handleGetConverterName()
    {
        return StringUtils.replace(
            Objects.toString(this.getConfiguredProperty(JSFGlobals.CONVERTER_PATTERN), ""),
            "{0}",
            this.getName());
    }

    /**
     * @return getPackageName() + "." + getConverterName()
     * @see org.andromda.cartridges.jsf2.metafacades.JSFEnumeration#getFullyQualifiedConverterName()
     */
    protected String handleGetFullyQualifiedConverterName()
    {
        return this.getPackageName() + "." + this.getConverterName();
    }

    /**
     * @return getFullyQualifiedConverterName().replace('.', '/')
     * @see org.andromda.cartridges.jsf2.metafacades.JSFEnumeration#getConverterPath()
     */
    protected String handleGetConverterPath()
    {
        return this.getFullyQualifiedConverterName().replace('.', '/');
    }

    /**
     * @return StringUtilsHelper.toResourceMessageKey(getName())
     * @see org.andromda.cartridges.jsf2.metafacades.JSFEnumeration#getMessageKey()
     */
    protected String handleGetMessageKey()
    {
        return StringUtilsHelper.toResourceMessageKey(getName());
    }
}