// license-header java merge-point
//
// Generated by: MetafacadeLogicImpl.vsl in andromda-meta-cartridge.
package org.andromda.cartridges.angularjs.metafacades;

import java.util.Map;

/**
 * Represents a forward within a JSF activity graph.
 * MetafacadeLogic implementation for org.andromda.cartridges.angularjs.metafacades.AngularJSForward.
 *
 * @see org.andromda.cartridges.angularjs.metafacades.AngularJSForward
 */
public class AngularJSForwardLogicImpl
    extends AngularJSForwardLogic
{
    private static final long serialVersionUID = 34L;
    /**
     * Public constructor for AngularJSForwardLogicImpl
     * @see org.andromda.cartridges.angularjs.metafacades.AngularJSForward
     */
    public AngularJSForwardLogicImpl (Object metaObject, String context)
    {
        super(metaObject, context);
    }

    /**
     * The path to which this forward points.
     * @see org.andromda.cartridges.angularjs.metafacades.AngularJSForward#getPath()
     */
    protected String handleGetPath()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * Indicates whether or not a final state is the target of this forward.
     * @see org.andromda.cartridges.angularjs.metafacades.AngularJSForward#isFinalStateTarget()
     */
    protected boolean handleIsFinalStateTarget()
    {
        // TODO put your implementation here.
        return false;
    }

    /**
     * The name that corresponds to the from-outcome in an navigational rule.
     * @see org.andromda.cartridges.angularjs.metafacades.AngularJSForward#getFromOutcome()
     */
    protected String handleGetFromOutcome()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * Messages used to indicate successful execution.
     * @see org.andromda.cartridges.angularjs.metafacades.AngularJSForward#getSuccessMessages()
     */
    protected Map handleGetSuccessMessages()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * Indicates whether or not any success messags are present.
     * @see org.andromda.cartridges.angularjs.metafacades.AngularJSForward#isSuccessMessagesPresent()
     */
    protected boolean handleIsSuccessMessagesPresent()
    {
        // TODO put your implementation here.
        return false;
    }

    /**
     * Any messages used to indicate a warning.
     * @see org.andromda.cartridges.angularjs.metafacades.AngularJSForward#getWarningMessages()
     */
    protected Map handleGetWarningMessages()
    {
        // TODO put your implementation here.
        return null;
    }

    /**
     * Whether or not any warning messages are present.
     * @see org.andromda.cartridges.angularjs.metafacades.AngularJSForward#isWarningMessagesPresent()
     */
    protected boolean handleIsWarningMessagesPresent()
    {
        // TODO put your implementation here.
        return false;
    }
}