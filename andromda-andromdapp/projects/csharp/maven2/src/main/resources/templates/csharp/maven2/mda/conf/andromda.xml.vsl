<andromda>
    <properties>
        <property name="modelValidation">true</property>
        <property name="cartridgeFilter">${filter}</property>
        <property name="loggingConfigurationUri">file:${conf.dir}/log4j.xml</property>
    </properties>
    <server>
        <host>localhost</host>
        <port>4446</port>
    </server>
    <repositories>
        <repository name="netBeansMDR">
            <models>
                <model>
                    <uri>${model.uri}</uri>
                    <moduleSearchLocations>
                        <!--location>${maven.repo.local}/andromda/xml.zips</location-->
                        <location patterns="**/*">${settings.localRepository}/org/andromda/profiles</location>
                    </moduleSearchLocations>
                </model>
            </models>
        </repository>
    </repositories>
    <namespaces>
        <namespace name="default">
            <properties>
                <property name="dotNetVersion">${dotNetVersion}</property>
#if ($dotNetVersion == "1.1")
    #set ($visualStudioVersion="2003")
#else
    #set ($visualStudioVersion="2005")
#end
                <property name="visualStudioVersion">${visualStudioVersion}</property>
#if (${dotNetVersion} == "1.1")
                <property name="languageMappingsUri">file:${conf.dir}/dotnet-1.1-mappings/CsMappings.xml</property>
                <property name="wrapperMappingsUri">file:${conf.dir}/dotnet-1.1-mappings/CsWrapperMappings.xml</property>
#else
                <property name="languageMappingsUri">Cs</property>
                <property name="wrapperMappingsUri">CsWrapper</property>
#end
                <property name="sqlMappingsUri">${sql.mappings}</property>
                <property name="jdbcMappingsUri">JDBC</property>
                <property name="maxSqlNameLength">30</property>
                <property name="foreignKeySuffix">_FK</property>
                <property name="ejbJndiNamePrefix">${application.id}-${application.version}</property>
                 <!-- these masking properties allow you to configure the way
                      your model element names are generated -->
                <property name="classifierNameMask">none</property>
                <property name="operationNameMask">none</property>
                <property name="roleNameMask">none</property>
                <property name="enumerationNameMask">none</property>
                <property name="enumerationLiteralNameMask">uppercamelcase</property>
                <property name="entityNameMask">none</property>
                <property name="entityPropertyNameMask">none</property>
                <property name="parameterNameMask">none</property>
                <property name="defaultIdentifierType">datatype::long</property>
                <property name="toDoTag">TODO:</property>
                <property name="commonAssemblyName">${applicationPackage}.common</property>
#if (${transactionPersistenceType} != "none")
                <property name="coreAssemblyName">${applicationPackage}.core</property>
#end
            </properties>
        </namespace>
        <namespace name="cs">
            <properties>
                <property name="enumerations">${common.generated.dir}</property>
                <property name="exceptions">${common.generated.dir}</property>
                <property name="value-objects">${common.generated.dir}</property>
            </properties>
        </namespace>
#if (${transactionPersistenceType} != "none")
        <namespace name="nhibernate">
            <properties>
                <property name="hibernateVersion">5</property>
#if (${dotNetVersion} == "1.1")
                <property name="hibernateTypeMappingsUri">file:${conf.dir}/dotnet-1.1-mappings/NHibernateTypeMappings.xml</property>
#else
                <property name="hibernateTypeMappingsUri">NHibernate</property>
#end
                <property name="dataSource">${dataSource}</property>
                <property name="hibernateShowSql">${hibernate.db.showSql}</property>
                <property name="hibernateDialect">${hibernate.db.dialect}</property>
                <property name="hibernateInheritanceStrategy">${hibernate.inheritance.strategy}</property>
                <property name="hibernateTransactionManagerLookup">${hibernate.transaction.manager.lookup}</property>
                <property name="customTypesPackage">${application.package}</property>
                <property name="hibernateJdbcBatchSize">0</property>
                <property name="hibernateEnableCache">false</property>
                <property name="hibernateEnableAssociationsCache">false</property>
                <property name="hibernateQueryUseNamedParameters">true</property>
                <property name="compositionDefinesEagerLoading">true</property>
                <property name="hibernateCacheProvider">org.hibernate.cache.EhCacheProvider</property>
                <property name="hibernateQueryCacheFactory">org.hibernate.cache.StandardQueryCacheFactory</property>
                <property name="hibernateTransactionFactoryClass">org.hibernate.transaction.JTATransactionFactory</property>
                <property name="entities">${core.generated.dir}</property>
                <property name="entity-impls">${core.manual.dir}</property>
                <property name="configuration">${core.generated.dir}</property>
                <property name="cache">${core.generated.dir}</property>
            </properties>
        </namespace>
#end
#if (${transactionPersistenceType} == "nspring")
        <namespace name="nspring">
            <properties>
                <property name="dataSource">${dataSource}</property>
                <property name="username">${dataSource.user}</property>
                <property name="password">${dataSource.password}</property>
                <property name="driver">${dataSource.driver.class}</property>
                <property name="connectionUrl">${dataSource.url}</property>
                <property name="hibernateDialect">${hibernate.db.dialect}</property>
                <property name="hibernateShowSql">${hibernate.db.showSql}</property>
                <property name="hibernateQueryUseNamedParameters">true</property>
                <property name="sessionFactory">org.springframework.orm.hibernate.LocalSessionFactoryBean</property>
                <property name="localTransactionManager">org.springframework.orm.hibernate.HibernateTransactionManager</property>
                <property name="hibernateCacheProvider">org.hibernate.cache.EhCacheProvider</property>
                <property name="hibernateQueryCacheFactory">org.hibernate.cache.StandardQueryCacheFactory</property>
                <property name="hibernateInheritanceStrategy">${hibernate.inheritance.strategy}</property>
                <property name="springTypesPackage">${application.package}.Domain</property>
                <property name="daos">${core.generated.dir}</property>
                <property name="dao-impls">${core.manual.dir}</property>
            </properties>
        </namespace>
#end
#if (${web})
        <namespace name="aspdotnet">
            <properties>
                <property name="web">${web.dir}</property>
                <property name="web_generated">${web.generated.dir}</property>
                <property name="web_manual">${web.manual.dir}</property>
                <property name="webAssemblyName">${applicationPackage}.web</property>
                <property name="AssemblyTitle">${applicationName}</property>
                <property name="AssemblyDescription"></property>
                <property name="AssemblyConfiguration"></property>
                <property name="AssemblyCompany"></property>
                <property name="AssemblyProduct"></property>
                <property name="AssemblyCopyright"></property>
                <property name="AssemblyTrademark"></property>
                <property name="AssemblyCulture"></property>
                <property name="AssemblyVersion">1.0.*</property>
                <property name="AssemblyDelaySign">true</property>
                <property name="AssemblyKeyFile"></property>
                <property name="AssemblyKeyName"></property>
            </properties>
        </namespace>
#end
    </namespaces>
</andromda>