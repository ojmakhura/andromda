<?xml version="1.0" encoding="UTF-8" ?>
<!--
    This is used to map merge patterns in files generated
    by jsf2 cartridge to new patterns. Just add content to the
    CDATA sections of the <to/> elements in order to
    use the following merge points.
-->
#set ($axis1 = $axisVersion.equals("1"))
#set ($axis2 = $axisVersion.equals("2"))
<mappings name="WebMerge">
    <mapping>
        <from><![CDATA[<!-- context-param merge-point -->]]></from>
        <to>
            <![CDATA[
#if ($ear)
    <context-param>
         <param-name>org.jboss.jbossfaces.WAR_BUNDLES_JSF_IMPL</param-name>
         <param-value>true</param-value>
    </context-param>
#end
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- facelets-libraries merge-point -->]]></from>
        <to>
            <![CDATA[
    <!-- uncomment if you want to add your own project specific facelet tags
         (and of course make sure "/WEB-INF/custom.taglib.xml" is the actual path
          to your facelet tag descriptor)
            /WEB-INF/custom.taglib.xml;
    -->
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- filter merge-point -->]]></from>
        <to>
            <![CDATA[
#if ($spring && ($webType.equals("jsf") || $webType.equals("both")))
    <!-- uncomment the following if you're using the open-session-in-view pattern
         note: that you'll need to update the filter-class value if you've changed
         the defaults for the package and/or filter name
    <filter>
        <filter-name>OpenSessionInViewFilter</filter-name>
        <filter-class>org.andromda.spring.presentation.AndroMDAOpenSessionInViewFilter</filter-class>
        <init-param>
            <param-name>singleSession</param-name>
            <param-value>false</param-value>
        </init-param>
    </filter>
    -->
#end
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- filter-mapping merge-point -->]]></from>
        <to>
            <![CDATA[
#if ($spring && ($webType.equals("jsf") || $webType.equals("both")))
    <!-- uncomment the following if you're using the open-session-in-view pattern
    <filter-mapping>
        <filter-name>OpenSessionInViewFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    -->
#end
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- listener merge-point -->]]></from>
        <to>
            <![CDATA[
#if ($axis1)
    <listener>
        <listener-class>org.apache.axis.transport.http.AxisHTTPSessionListener</listener-class>
    </listener>
#end
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- error-page merge-point -->]]></from>
        <to>
            <![CDATA[
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- servlet merge-point -->]]></from>
        <to>
            <![CDATA[
#if (!$ear)
#if ($axis1)
    <servlet>
        <display-name>Apache-Axis Servlet</display-name>
        <servlet-name>AxisServlet</servlet-name>
        <servlet-class>org.apache.axis.transport.http.AxisServlet</servlet-class>
    </servlet>
#elseif ($axis2)
    <servlet>
        <servlet-name>AxisServlet</servlet-name>
        <display-name>Apache-Axis Servlet</display-name>
        <servlet-class>
            org.apache.axis2.transport.http.AxisServlet</servlet-class>
        <!--<init-param>-->
        <!--<param-name>axis2.xml.path</param-name>-->
        <!--<param-value>/WEB-INF/conf/axis2.xml</param-value>-->
        <!--<param-name>axis2.xml.url</param-name>-->
        <!--<param-value>http://localhot/myrepo/axis2.xml</param-value>-->
        <!--<param-name>axis2.repository.path</param-name>-->
        <!--<param-value>/WEB-INF</param-value>-->
        <!--<param-name>axis2.repository.url</param-name>-->
        <!--<param-value>http://localhot/myrepo</param-value>-->
        <!--</init-param>-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet>
        <servlet-name>AxisRESTServlet</servlet-name>
        <display-name>Apache-Axis Servlet (REST)</display-name>
        <servlet-class>org.apache.axis2.transport.http.AxisRESTServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>AxisAdminServlet</servlet-name>
        <display-name>Apache-Axis AxisAdmin Servlet (REST)</display-name>
        <servlet-class>org.apache.axis2.transport.http.AxisAdminServlet</servlet-class>
    </servlet>
#elseif ($xfire)
    <servlet>
        <display-name>XFire Servlet</display-name>
        <servlet-name>XFireServlet</servlet-name>
        <servlet-class>org.codehaus.xfire.transport.http.XFireConfigurableServlet</servlet-class>
    </servlet>
#end
#end
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- servlet-mapping merge-point -->]]></from>
        <to>
            <![CDATA[
#if (!$ear)
#if ($axis)
    <servlet-mapping>
        <servlet-name>AxisServlet</servlet-name>
        <url-pattern>/servlet/AxisServlet</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>AxisServlet</servlet-name>
        <url-pattern>*.jws</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>AxisServlet</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>
#if ($axis1)
    <servlet-mapping>
        <servlet-name>SOAPMonitorService</servlet-name>
        <url-pattern>/SOAPMonitor</url-pattern>
    </servlet-mapping>
#elseif ($axis2)
    <servlet-mapping>
        <servlet-name>AxisRESTServlet</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>AxisAdminServlet</servlet-name>
        <url-pattern>/axis2-admin/*</url-pattern>
    </servlet-mapping>
#end
#elseif ($xfire)
    <servlet-mapping>
        <servlet-name>XFireServlet</servlet-name>
        <url-pattern>/servlet/XFireServlet/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>XFireServlet</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>
#end
#end
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- welcome-file-list merge-point -->]]></from>
        <to>
            <![CDATA[
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- security-constraint merge-point -->]]></from>
        <to>
            <![CDATA[
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- security-role merge-point -->]]></from>
        <to>
            <![CDATA[
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- global-forwards merge-point -->]]></from>
        <to>
            <![CDATA[
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- mime-type merge-point -->]]></from>
        <to>
            <![CDATA[
#if (!$ear)
#if ($axis1)
    <mime-mapping>
        <extension>wsdl</extension>
        <mime-type>text/xml</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>xsd</extension>
        <mime-type>text/xml</mime-type>
    </mime-mapping>
#end
#end
            ]]>
        </to>
    </mapping>
#if ($webType.equals("jsf") || $webType.equals("jsf"))
    <!--
        This next mapping will merge the entire messages.properties into the generated
        messages.properties
    -->
    <mapping>
        <from><![CDATA[# custom-messages merge-point]]></from>
        <to>
            <path>../../../../../web/src/main/properties/messages.properties</path>
        </to>
    </mapping>
#end
</mappings>