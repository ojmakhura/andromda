<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.andromda.maven</groupId>
        <artifactId>maven-parent</artifactId>
        <version>4.0-SNAPSHOT</version>
        <relativePath></relativePath>
    </parent>
    <groupId>$applicationPackage</groupId>
    <artifactId>$applicationId</artifactId>
    <packaging>pom</packaging>
    <version>$applicationVersion</version>
    <name>$applicationName</name>
    <description>The $applicationName Project.</description>
## Configuration values supplied by andromdapp configuration file, not command line
#if ($stringUtils.isNotBlank($inceptionYear) && !$inceptionYear.equals('$inceptionYear'))
    <inceptionYear>$inceptionYear</inceptionYear>
#else
    <inceptionYear></inceptionYear>
#end
#if ($stringUtils.isNotBlank($projectUrl) && !$projectUrl.equals('$projectUrl'))
    <url>$projectUrl</url>
#else
    <url>http://andromda.sourceforge.net/</url>
#end
    <issueManagement>
#if ($stringUtils.isNotBlank($issueSystem) && !$issueSystem.equals('$issueSystem'))
        <system>$issueSystem</system>
#else
        <system></system>
#end
#if ($stringUtils.isNotBlank($issueUrl) && !$issueUrl.equals('$issueUrl'))
        <url>$issueUrl</url>
#else
        <url></url>
#end
    </issueManagement>
    <scm>
#if ($stringUtils.isNotBlank($scmConnection) && !$scmConnection.equals('$scmConnection'))
        <connection>$scmConnection</connection>
        <developerConnection>$scmConnection</developerConnection>
        <url>$scmConnection/</url>
#else
        <connection></connection>
        <developerConnection></developerConnection>
        <url></url>
#end
    </scm>
    <organization>
#if ($stringUtils.isNotBlank($organizationName) && !$organizationName.equals('$organizationName'))
        <name>$organizationName</name>
#else
        <name></name>
#end
#if ($stringUtils.isNotBlank($organizationUrl) && !$organizationUrl.equals('$organizationUrl'))
        <url>$organizationUrl</url>
#else
        <url></url>
#end
    </organization>
    <licenses>
        <license>
#if ($stringUtils.isNotBlank($licenseName) && !$licenseName.equals('$licenseName'))
            <name>$licenseName</name>
#else
            <name></name>
#end
#if ($stringUtils.isNotBlank($licenseUrl) && !$licenseUrl.equals('$licenseUrl'))
            <url>$licenseUrl</url>
#else
            <url></url>
#end
            <distribution></distribution>
            <comments></comments>
        </license>
    </licenses>
    <ciManagement>
#if ($stringUtils.isNotBlank($ciSystem) && !$ciSystem.equals('$ciSystem'))
        <system>$ciSystem</system>
#else
        <system></system>
#end
#if ($stringUtils.isNotBlank($ciUrl) && !$ciSystem.equals('$ciUrl'))
        <url>$ciUrl</url>
#else
        <url></url>
#end
    </ciManagement>
    <developers>
        <developer>
            <id></id>
            <name>$author</name>
            <email></email>
            <organization></organization>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone></timezone>
        </developer>
    </developers>
    <dependencyManagement>
        <dependencies>
#if (!$ejb && !$ejb3 && $spring)
            <dependency>
                <groupId>org.andromda</groupId>
                <artifactId>andromda-core</artifactId>
                <version>${andromda.version}</version>
                <scope>provided</scope>
                <exclusions>
#if ($ear)
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>xerces</groupId>
                        <artifactId>xercesImpl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>xalan</groupId>
                        <artifactId>xalan</artifactId>
                    </exclusion>
#end
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.andromda.translationlibraries</groupId>
                <artifactId>andromda-ocl-translation-core</artifactId>
                <version>${andromda.version}</version>
                <scope>provided</scope>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.andromda.translationlibraries</groupId>
                <artifactId>andromda-ocl-validation-library</artifactId>
                <version>${andromda.version}</version>
                <scope>provided</scope>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
#if($groovy)
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>2.3.7</version>
            </dependency>
#end
#end
#if ($webType.equals("jsf") || $webType.equals("both"))
            <dependency>
                <groupId>org.andromda.cartridges</groupId>
                <artifactId>andromda-jsf2-cartridge</artifactId>
                <version>${andromda.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.core</groupId>
                <artifactId>myfaces-api</artifactId>
                <version>${myfaces.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.core</groupId>
                <artifactId>myfaces-impl</artifactId>
                <version>${myfaces.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.tomahawk</groupId>
                <artifactId>tomahawk21</artifactId>
                <version>1.1.14</version>
                <exclusions>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xmlParserAPIs</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- validation dependencies -->
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>2.0.0.Final</version>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.extensions.validator</groupId>
                <artifactId>myfaces-extval-core</artifactId>
                <version>2.0.8</version>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.extensions.validator.validation-modules</groupId>
                <artifactId>myfaces-extval-property-validation</artifactId>
                <version>2.0.8</version>
                <exclusions>
                	<exclusion>
                        <groupId>javax.persistence</groupId>
                        <artifactId>persistence-api</artifactId>                	
                	</exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.extensions.validator.validation-modules</groupId>
                <artifactId>myfaces-extval-bean-validation</artifactId>
                <version>2.0.8</version>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.extensions.validator.component-support-modules</groupId>
                <artifactId>myfaces-extval-generic-support</artifactId>
                <version>2.0.8</version>
            </dependency>
            <dependency>
                <groupId>org.primefaces</groupId>
                <artifactId>primefaces</artifactId>
                <version>7.0</version>
            </dependency>
#if (!$spring && !$hibernate && !$ejb3)
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>6.0.13.Final</version>
            </dependency>
#end
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.7</version>
#if($ear && !$cxf)
                <scope>provided</scope>
#end
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>1.7.7</version>
#if($ear && !$cxf)
                <scope>provided</scope>
#end
            </dependency>
            <dependency>
                <groupId>org.andromda</groupId>
                <artifactId>andromda-utils</artifactId>
                <version>${andromda.version}</version>
                <scope>provided</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.andromda</groupId>
                        <artifactId>andromda-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>xerces</groupId>
                        <artifactId>xercesImpl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>xalan</groupId>
                        <artifactId>xalan</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
#end
#if ($jbossSeam)
            <dependency>
                <groupId>org.andromda.cartridges</groupId>
                <artifactId>andromda-jsf-cartridge-components</artifactId>
                <version>${andromda.version}</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>myfaces</groupId>
                        <artifactId>myfaces-impl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>myfaces</groupId>
                        <artifactId>myfaces-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>myfaces</groupId>
                        <artifactId>tomahawk</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.servlet</groupId>
                        <artifactId>jsp-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
#end
#if (!$transactionPersistenceType.equals("none"))
            <dependency>
                <groupId>org.andromda.translationlibraries</groupId>
                <artifactId>andromda-ocl-query-library</artifactId>
                <version>${andromda.version}</version>
                <scope>provided</scope>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
#end
            <!-- This dependency provides the ability to implement your
                 business logic in an interpreted manner during development on
                 your local machine -->
            <dependency>
                <groupId>org.andromda</groupId>
                <artifactId>andromda-script-wrappers</artifactId>
                <version>${andromda.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>1.9.3</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.11</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
			    <artifactId>commons-collections4</artifactId>
			    <version>4.2</version>
#if ($ear)
                <!-- JBoss contains a version which causes a classloader conflict unless not bundled -->
                <scope>provided</scope>
#end
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>1.4</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.6</version>
            </dependency>
            <dependency>
              <groupId>org.apache.commons</groupId>
              <artifactId>commons-lang3</artifactId>
              <version>3.8.1</version>
            </dependency>
            <dependency>
              <groupId>org.apache.commons</groupId>
              <artifactId>commons-text</artifactId>
              <version>1.3</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>1.2</version>
#if ($ear && !$cxf)
                <scope>provided</scope>
#end
            </dependency>
#if ($ejb3)
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>6.0.9.Final</version>
            </dependency>
            <!-- JBoss Dependencies -->
            <dependency>
              <groupId>org.jboss.spec</groupId>
              <artifactId>jboss-javaee-all-7.0</artifactId>
              <version>1.1.1.Final</version>
              <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>net.sf.ehcache.internal</groupId>
                <artifactId>ehcache-core</artifactId>
                <version>2.9.0</version>
                <scope>provided</scope>
            </dependency>
#if ($spring || $hibernate)
            <!-- Hibernate Dependencies -->
            <dependency>
                <groupId>org.javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>3.18.2-GA</version>
            </dependency>
#end
#else
            <dependency>
                <groupId>org.jboss.spec</groupId>
                <artifactId>jboss-javaee-all-7.0</artifactId>
                <version>1.1.1.Final</version>
                <scope>provided</scope>
            </dependency>
#end
#if (!$ejb && !$ejb3)
#if ($spring || $hibernate)
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.transaction</groupId>
                        <artifactId>jta</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- Hibernate Jcache -->
		    <dependency>
		      <groupId>org.hibernate</groupId>
		      <artifactId>hibernate-jcache</artifactId>
		      <version>${hibernate.version}</version>
			    <scope>provided</scope>
		    </dependency>
		    <dependency>
			    <groupId>org.hibernate</groupId>
			    <artifactId>hibernate-ehcache</artifactId>
			    <version>${hibernate.version}</version>
			    <scope>provided</scope>
			</dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>6.0.9.Final</version>
                <exclusions>
                	<exclusion>
                		<groupId>javax.validation</groupId>
                		<artifactId>validation-api</artifactId>
                   	</exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>net.sf.ehcache.internal</groupId>
                <artifactId>ehcache-core</artifactId>
                <version>2.9.0</version>
            </dependency>
            <dependency>
                <groupId>org.javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>3.18.2-GA</version>
#if ($ear)
                <scope>test</scope>
#end
            </dependency>
#if (!($webType.equals("jsf") || $webType.equals("both")))
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.7</version>
#if($ear && !$cxf)
                <scope>provided</scope>
#end
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>1.7.7</version>
#if($ear && !$cxf)
                <scope>provided</scope>
#end
            </dependency>
#end
#end
#end
#if ($spring)
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-expression</artifactId>
                <version>${spring.version}</version>
            </dependency>
#if ($jetty || $tomcat)
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Uncomment out below if using spring test>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
            </dependency -->
#else
            <!-- Uncomment out below if using JDBC or aop or spring test>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
            </dependency -->
#end
            <!-- http://www.springsource.org/node/3654 cglib no longer required as spring 3.2 dependency -->
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib-nodep</artifactId>
                <version>3.2.6</version>
                <scope>runtime</scope>
            </dependency>
#end
#if ($webType.equals("jsf") || $webType.equals("both") || $hibernate)
            <dependency>
                <groupId>antlr</groupId>
                <artifactId>antlr</artifactId>
                <version>2.7.7</version>
            </dependency>
#end
#if ($webType.equals("jsf") || $webType.equals("both"))
            <dependency>
                <groupId>commons-digester</groupId>
                <artifactId>commons-digester</artifactId>
                <version>2.1</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>3.1.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.el</groupId>
                <artifactId>el-api</artifactId>
                <version>2.2.1-b04</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>1.2</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>oro</groupId>
                <artifactId>oro</artifactId>
                <version>2.0.8</version>
                <scope>runtime</scope>
            </dependency>
#end
#if ($axis)
            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>1.1.1</version>
            </dependency>
            <dependency>
                <groupId>javax.mail</groupId>
                <artifactId>mail</artifactId>
                <version>1.4.5</version>
            </dependency>
#if ($axisVersion.equals("1"))
            <!-- Axis1 Dependencies -->
            <dependency>
                <groupId>axis</groupId>
                <artifactId>axis</artifactId>
                <version>1.4</version>
            </dependency>
            <dependency>
                <groupId>axis</groupId>
                <artifactId>axis-jaxrpc</artifactId>
                <version>1.4</version>
            </dependency>
            <dependency>
                <groupId>axis</groupId>
                <artifactId>axis-saaj</artifactId>
                <version>1.4</version>
            </dependency>
            <dependency>
                <groupId>commons-discovery</groupId>
                <artifactId>commons-discovery</artifactId>
                <version>0.2</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>wsdl4j</groupId>
                <artifactId>wsdl4j</artifactId>
                <version>1.6.3</version>
            </dependency>
#else
            <!-- Axis2 Dependencies -->
            <!-- TODO Update to 1.3 or later breaks webservice template code -->
            <dependency>
                <groupId>org.apache.axis2</groupId>
                <artifactId>axis2</artifactId>
                <version>1.2</version>
            </dependency>
            <dependency>
                <groupId>annogen</groupId>
                <artifactId>annogen</artifactId>
                <version>0.1.0</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.ws.commons.axiom</groupId>
                <artifactId>axiom-api</artifactId>
                <version>1.2.10</version>
                <exclusions>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>xerces</groupId>
                        <artifactId>xercesImpl</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.ws.commons.axiom</groupId>
                <artifactId>axiom-impl</artifactId>
                <version>1.2.10</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>xerces</groupId>
                        <artifactId>xercesImpl</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.ws.commons.axiom</groupId>
                <artifactId>axiom-dom</artifactId>
                <version>1.2.10</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>backport-util-concurrent</groupId>
                <artifactId>backport-util-concurrent</artifactId>
                <version>3.1</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>commons-httpclient</groupId>
                <artifactId>commons-httpclient</artifactId>
                <version>3.1</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>httpcomponents-httpcore</groupId>
                <artifactId>jakarta-httpcore</artifactId>
                <version>4.0-alpha4</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.geronimo.specs</groupId>
                <artifactId>geronimo-jms_1.1_spec</artifactId>
                <version>1.1.1</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.ws.commons.neethi</groupId>
                <artifactId>neethi</artifactId>
                <version>2.0.1</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>xerces</groupId>
                        <artifactId>xercesImpl</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>stax</groupId>
                <artifactId>stax-api</artifactId>
                <version>1.0.1</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.woden</groupId>
                <artifactId>woden-impl-om</artifactId>
                <version>1.0M9</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>wsdl4j</groupId>
                <artifactId>wsdl4j</artifactId>
                <version>1.6.3</version>
            </dependency>
#end
#elseif ($xfire)
            <dependency>
                <groupId>org.codehaus.xfire</groupId>
                <artifactId>xfire-all</artifactId>
                <version>1.2.5</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>xerces</groupId>
                        <artifactId>xmlParserAPIs</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
#elseif ($jaxws)
            <!-- Add Sun Jax-WS compile and runtime dependencies here -->
            <!--dependency>
                <groupId>org.codehaus.xfire</groupId>
                <artifactId>xfire-all</artifactId>
                <version>1.2.5</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>xerces</groupId>
                        <artifactId>xmlParserAPIs</artifactId>
                    </exclusion>
                </exclusions>
            </dependency-->
#end
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.11</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.17</version>
                <!--scope>test</scope-->
            </dependency>
#if (!($webType.equals("jsf") || $webType.equals("both")) && !$spring && !$hibernate)
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.7</version>
#if($ear && !$cxf)
                <scope>provided</scope>
#end
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>1.7.7</version>
#if($ear && !$cxf)
                <scope>provided</scope>
#end
            </dependency>
#end
#if ($cxf)
            <!-- Explicit Spring dependencies to avoid compile/run version mismatch, shown by: Error creating bean Caused by: java.lang.NoSuchFieldError: NULL -->
#if (!$spring)
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring.version}</version>
            </dependency>
#if (!$jetty && !$tomcat)
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>
#end
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-expression</artifactId>
                <version>${spring.version}</version>
            </dependency>
#end
            <!-- Uncomment out four below if using JMS>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jms</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-core</artifactId>
                <version>5.7.0</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>commons-pool</groupId>
                <artifactId>commons-pool</artifactId>
                <version>1.6</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>aopalliance</groupId>
                <artifactId>aopalliance</artifactId>
                <version>1.0</version>
            </dependency -->
#if ($webservice.equals("soap") || $webservice.equals("both"))
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-frontend-jaxws</artifactId>
                <version>${cxf.version}</version>
                <exclusions>
                    <!--Remove exclusion if using WSSecurity or WSPolicy -->
                    <exclusion>
                        <groupId>org.apache.cxf</groupId>
                        <artifactId>cxf-rt-ws-addr</artifactId>
                    </exclusion>
                    <!--Jetty should not be compile scope, should not be bundled-->
                    <exclusion>
                        <groupId>org.apache.cxf</groupId>
                        <artifactId>cxf-rt-ws-policy</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
#end
#if($webservice.equals("rest") || $webservice.equals("both"))
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-frontend-jaxrs</artifactId>
                <version>${cxf.version}</version>
            </dependency>
			<dependency>
			    <groupId>org.apache.cxf.xjc-utils</groupId>
			    <artifactId>cxf-xjc-runtime</artifactId>
			    <version>${cxf.xjc.version}</version>
			</dependency>
            
#end
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-server</artifactId>
                <version>${jetty.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity</artifactId>
                <version>1.6.4</version>
                <scope>provided</scope>
            </dependency>
#if (!$spring && !$hibernate && !$ejb3)
            <!-- CXF 2.7.5 references outdated version 2.5.1. groupId changed in v2.7. Add dependency to projects if you need caching -->
            <dependency>
                <groupId>net.sf.ehcache.internal</groupId>
                <artifactId>ehcache-core</artifactId>
                <version>2.8.3</version>
            </dependency>
#end
            <!-- Should be either in the JDK6 runtime, or deployed on the AppServer already -->
            <dependency>
                <groupId>xerces</groupId>
                <artifactId>xercesImpl</artifactId>
                <version>2.12.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>xml-apis</groupId>
                <artifactId>xml-apis</artifactId>
                <!-- version 1.x is NEWER than 2.0.x in maven Central. See http://swordsystems.com/2011/06/29/xerces-and-xml-api-dependency-hell/ -->
                <version>1.4.01</version>
                <scope>provided</scope>
            </dependency>
#end
#if ($mysql)
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>8.0.16</version>
#if (!$jetty && !$tomcat)
                <scope>test</scope>
#end
            </dependency>
#elseif ($postgres)
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>42.2.6</version>
#if (!$jetty && !$tomcat)
                <scope>test</scope>
#end
            </dependency>
#elseif ($derby)
            <dependency>
                <groupId>org.apache.derby</groupId>
                <artifactId>derby</artifactId>
                <version>10.15.1.3</version>
#if (!$jetty && !$tomcat)
                <scope>test</scope>
#end
            </dependency>
#elseif ($hypersonic)
            <dependency>
                <groupId>org.hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>2.5.0</version>
#if (!$jetty && !$tomcat)
                <scope>test</scope>
#end
            </dependency>
#elseif ($h2)
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>1.4.199</version>
#if (!$jetty && !$tomcat)
                <scope>test</scope>
#end
            </dependency>
#else
            <!-- add the database jdbc dependency -->
#end
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>6.14.3</version>
                <scope>test</scope>
#if ($ejb3)
                <exclusions>
                    <exclusion>
                        <groupId>qdox</groupId>
                        <artifactId>qdox</artifactId>
                    </exclusion>
                    <!--exclusion>
                        <groupId>org.beanshell</groupId>
                        <artifactId>bsh</artifactId>
                    </exclusion-->
                </exclusions>
#end
            </dependency>
            <dependency>
		<groupId>org.apache.tomcat</groupId>
		<artifactId>tomcat-dbcp</artifactId>
		<version>9.0.30</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>add-target-src</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>target/src/main/java</source>
                                </sources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>add-target-test</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-test-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>target/src/test/java</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.andromda.maven.plugins</groupId>
                    <artifactId>andromda-maven-plugin</artifactId>
                    <version>${andromda.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.andromda.maven.plugins</groupId>
                    <artifactId>andromdapp-maven-plugin</artifactId>
                    <version>${andromda.version}</version>
                </plugin>
#if ($jetty)
                <plugin>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>jetty-maven-plugin</artifactId>
                    <version>${jetty.version}</version>
#if ($cxf)
                    <configuration>
                        <scanIntervalSeconds>10</scanIntervalSeconds>
                        <webAppSourceDirectory>${project.basedir}/src/main/webapp</webAppSourceDirectory>
                        <webApp>
                            <contextPath>/$applicationId</contextPath>
                        </webApp>
                        <connectors>
                           <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                              <port>${service.port}</port>
                              <maxIdleTime>60000</maxIdleTime>
                           </connector>
                        </connectors>
                        <useProvidedScope>true</useProvidedScope>
                        <scanIntervalSeconds>5</scanIntervalSeconds>
                        <stopKey>foo</stopKey>
                        <stopPort>9999</stopPort>
                        <stopWait>5</stopWait>
                    </configuration>
                    <executions>
                        <execution>
                            <id>start-jetty</id>
                            <phase>process-test-resources</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <scanIntervalSeconds>0</scanIntervalSeconds>
                                <daemon>true</daemon>
                            </configuration>
                        </execution>
                        <execution>
                            <id>stop-jetty</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>stop</goal>
                            </goals>
                        </execution>
                    </executions>
#end
                </plugin>
#end
#if ($tomcat)
                <plugin>
                    <groupId>org.apache.tomcat.maven</groupId>
                    <artifactId>tomcat7-maven-plugin</artifactId>
                    <version>${tomcat.version}</version>
#if ($cxf)
                    <configuration>
                        <contextFile>src/test/resources/context.xml</contextFile>
                        <path>/${project.build.finalName}</path>
                        <port>${service.port}</port>
                        <warDirectory>target/${project.build.finalName}</warDirectory>
                        <ignorePackaging>true</ignorePackaging>
                    </configuration>
                    <executions>
                        <execution>
                            <id>tomcat-run</id>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <phase>pre-integration-test</phase>
                            <configuration>
                                <fork>true</fork>
                            </configuration>
                        </execution>
                        <execution>
                            <id>tomcat-shutdown</id>
                            <goals>
                                <goal>shutdown</goal>
                            </goals>
                            <phase>post-integration-test</phase>
                        </execution>
                    </executions>
#end
                </plugin>
#end
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>tomcat-maven-plugin</artifactId>
                    <version>1.1</version>
                    <configuration>
                      <contextFile>${project.basedir}/src/test/resources/context.xml</contextFile>
                      <additionalConfigFilesDir>${project.basedir}/src/test/resources</additionalConfigFilesDir>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <!-- See https://github.com/lkwg82/enforcer-maven-plugin. Patched original. Fix cloudbees error on pom download -->
                <groupId>de.lgohlke.mojo</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
            </plugin>
        </plugins>
    </build>
    <modules>
        <!-- Save the values used to generate this project from andromdapp
        applicationParentDirectory=$applicationParentDirectory
        author=$author
        modelType=$modelType
        applicationType=$applicationType
        war=$war
        ear=$ear
        appServer=$appServer
        databaseType=$databaseType
        testDatabase=$testDatabase
        transactionPersistenceType=$transactionPersistenceType
        jsr181Webservice=$jsr181Webservice
        ejb=$ejb
        ejb3=$ejb3
        hibernate=$hibernate
        spring=$spring
        webType=$webType
        webservice=$webservice
        cxf=$cxf
        rest=$rest
        jbossSeam=$jbossSeam
        webserviceStack=$webserviceStack
        embeddedWebServer=$embeddedWebServer
        jetty=$jetty
        tomcat=$tomcat
        -->
        <module>mda</module>
        <module>common</module>
#if (!$transactionPersistenceType.equals("none") || $cxf)
        <module>core</module>
#end
#if ($webType.equals("both") || $webType.equals("jsf"))
        <module>web</module>
#end
#if (!$webservice.equals("none") && !$jsr181Webservice && ($ear || $cxf))
        <module>webservice</module>
#if ($cxf)
        <module>CXF</module>
#end
#end
#if ($ear)
        <module>app</module>
#end
    </modules>
    <properties>
        <andromda.version>$andromdaVersion</andromda.version>
        <downloadSources>true</downloadSources>
        <createChecksum>true</createChecksum>
        <uniqueVersion>false</uniqueVersion>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <stagingDirectory>${project.build.outputDirectory}/target/site</stagingDirectory>
#if ($hibernate || $spring || $ejb3)
#if ($h2)
        <testdb.groupId>com.h2database</testdb.groupId>
        <testdb.artifactId>h2</testdb.artifactId>
        <testdb.version>1.4.180</testdb.version>
#elseif ($hypersonic)
        <testdb.groupId>org.hsqldb</testdb.groupId>
        <testdb.artifactId>hsqldb</testdb.artifactId>
        <testdb.version>2.3.2</testdb.version>
#elseif ($derby)
        <testdb.groupId>org.apache.derby</testdb.groupId>
        <testdb.artifactId>derby</testdb.artifactId>
        <testdb.version>10.9.1.0</testdb.version>
#end
#if ($testDatabase.equals("h2")||$testDatabase.equals("hypersonic")||$testDatabase.equals("derby"))
        <testdb.driver>$${jdbc.driver}</testdb.driver>
        <testdb.dialect>$${jdbc.dialect}</testdb.dialect>
        <testdb.url>$${jdbc.url}</testdb.url>
        <testdb.username>$${jdbc.username}</testdb.username>
        <testdb.password>$${jdbc.password}</testdb.password>
#else
## Always use H2 for testdb because it can emulate most major DBMSs
        <testdb.groupId>com.h2database</testdb.groupId>
        <testdb.artifactId>h2</testdb.artifactId>
        <testdb.version>1.4.180</testdb.version>
        <testdb.driver>org.h2.Driver</testdb.driver>
        <testdb.dialect>org.hibernate.dialect.H2Dialect</testdb.dialect>
        <!-- See http://www.h2database.com/html/features.html#database_url (mixed mode) -->
        <testdb.url>jdbc:h2:~/${application.id};AUTO_SERVER=TRUE;AUTO_RECONNECT=TRUE;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</testdb.url>
        <testdb.username>sa</testdb.username>
        <testdb.password>sa</testdb.password>
#end
        <!--
            Change this to generate to the correct MDA database mappings,
            For MySql use: MySQL
            For Hypersonic use: HypersonicSql
            For H2 use: H2Sql
            For Oracle9i use: Oracle9i
            For DB2 use: DB2
            For Informix use: InformixDB
            For MSSQL use: MSSQL
            For Pointbase use: PointBase
            For Postgres use: PostgreSQL
            For Sybase use: Sybase
            For SapDB use: SapDB
            For Derby use: Derby
        -->
        <sql.mappings>
#if ($mysql)
            MySQL
#elseif ($oracle)
            Oracle9i
#elseif ($db2)
            DB2
#elseif ($informix)
            InformixDB
#elseif ($mssql)
            MSSQL
#elseif ($pointbase)
            PointBase
#elseif ($postgres)
            PostgreSQL
#elseif ($sybase)
            Sybase
#elseif ($sapdb)
            SapDB
#elseif ($progress)
            PostgreSQL 7.2
#elseif ($derby)
            Derby
#elseif ($h2)
            H2Sql
#elseif ($hypersonic)
            HypersonicSql
#end
        </sql.mappings>
        <!--
        Change this for the appropriate database
        For H2 use: org.hibernate.dialect.H2Dialect
        For DB2 use: org.hibernate.dialect.DB2Dialect or org.hibernate.dialect.DB2390Dialect org.hibernate.dialect.DB2400Dialect
        For Derby use: org.hibernate.dialect.DerbyDialect
        For Hypersonic use: org.hibernate.dialect.HSQLDialect
        For Informix use: org.hibernate.dialect.InformixDialect
        For MySql4 use: org.hibernate.dialect.MySQLDialect
        For MySql5+ use: org.hibernate.dialect.MySQL5Dialect
        For MySql InnoDB use: org.hibernate.dialect.MySQL5InnoDBDialect
        For MySql MyISAM use: org.hibernate.dialect.MySQLMyISAMDialect
        For MSSQL use: org.hibernate.dialect.SQLServerDialect
        For Oracle any version use: org.hibernate.dialect.OracleDialect
        For Oracle8i use: org.hibernate.dialect.Oracle8iDialect
        For Oracle9i use: org.hibernate.dialect.Oracle9iDialect
        For Oracle10g or later use: org.hibernate.dialect.Oracle10gDialect
        For Pointbase use: org.hibernate.dialect.PointbaseDialect
        For Postgres use: org.hibernate.dialect.PostgreSQLDialect
        For Progress use: org.hibernate.dialect.ProgressDialect
        For SapDB use: org.hibernate.dialect.SAPDBDialect
        For Sybase use: org.hibernate.dialect.SybaseDialect or org.hibernate.dialect.Sybase11Dialect
        For Sybase Anywhere use: org.hibernate.dialect.SybaseAnywhereDialect
        -->
        <hibernate.dialect>
#if ($mysql)
            org.hibernate.dialect.MySQL5InnoDBDialect
#elseif ($oracle)
            org.hibernate.dialect.Oracle10gDialect
#elseif ($db2)
            org.hibernate.dialect.DB2Dialect
#elseif ($informix)
            org.hibernate.dialect.InformixDialect
#elseif ($mssql)
            org.hibernate.dialect.SQLServerDialect
#elseif ($pointbase)
            org.hibernate.dialect.PointbaseDialect
#elseif ($postgres)
            org.hibernate.dialect.PostgreSQLDialect
#elseif ($sybase)
            org.hibernate.dialect.SybaseDialect
#elseif ($sapdb)
            org.hibernate.dialect.SAPDBDialect
#elseif ($progress)
            org.hibernate.dialect.ProgressDialect
#elseif ($derby)
            org.hibernate.dialect.DerbyDialect
#elseif ($h2)
            org.hibernate.dialect.H2Dialect
#elseif ($hypersonic)
            org.hibernate.dialect.HSQLDialect
#end
        </hibernate.dialect>
#end
#if ($ejb || $ejb3)
        <!--
            Change this to the correct database type mappings (for Jboss)
            For H2 use: H2 SQL
            For MySql use: mySQL
            For Hypersonic use: Hypersonic SQL
            For Oracle9i use: Oracle9i
            For DB2 use: DB2
            For Informix use: InformixDB
            For MSSQL use: MS SQLSERVER2000
            For Pointbase use: PointBase
            For Postgres use: PostgreSQL 7.2
            For Sybase use: Sybase
            For SapDB use: SapDB
            For Derby use: Derby
        -->
        <jboss.typeMappings>
#if ($mysql)
            mySQL
#elseif ($oracle)
            Oracle9i
#elseif ($db2)
            DB2
#elseif ($informix)
            InformixDB
#elseif ($mssql)
            MS SQLSERVER2000
#elseif ($pointbase)
            PointBase
#elseif ($postgres)
            PostgreSQL 7.2
#elseif ($sybase)
            Sybase
#elseif ($sapdb)
            SapDB
#elseif ($derby)
            Derby
#elseif ($progress)
            PostgreSQL 7.2
#elseif ($h2)
            H2 SQL
#elseif ($hypersonic)
            Hypersonic SQL
#end
        </jboss.typeMappings>
#end
#if ($ear)
        <jboss.home>${env.JBOSS_HOME}</jboss.home>
#else
        <tomcat.home>${env.CATALINA_HOME}</tomcat.home>
#end
        <application.id>$applicationId</application.id>
        <application.package>$applicationPackage</application.package>
        <application.name>$applicationName</application.name>
        <application.version>$applicationVersion</application.version>
#if ($jetty || $tomcat)
        <!-- uncomment to use the context configured datasource
#end
        <dataSource.name>jdbc/${application.id}</dataSource.name>
#if ($ear)
        <dataSource>java:/${dataSource.name}</dataSource>
#else
        <dataSource>java:comp/env/${dataSource.name}</dataSource>
#end
#if ($jetty || $tomcat)
        -->
#end
#if ($cxf)
        <cxf.version>3.0.2</cxf.version>
        <cxf.xjc.version>3.0.2</cxf.xjc.version>
#end
#if ($spring)
        <!-- Set andromda.xml hibernateVersion=4, sessionFactory and localTransactionManager to hibernate4.-->
        <hibernate.version>5.2.2.Final</hibernate.version>
#elseif ($hibernate || $ejb3)
        <!-- Set andromda.xml hibernateVersion=5, sessionFactory and localTransactionManager to hibernate5->
        <!-- new Hibername 5 inclusion -->
        <hibernate.version>5.4.0.Final</hibernate.version>
#end
#if ($jetty || !$webservice.equals("none"))
        <!-- v 9.x only supports JDK7 and you cannot configure jetty.port from maven.-->
        <jetty.version>8.1.16.v20140903</jetty.version>
#end
#if ($tomcat)
        <tomcat.version>2.2</tomcat.version>
#end
#if ($webType.equals("jsf") || $webType.equals("both"))
        <myfaces.version>2.3.2</myfaces.version>
#end
#if ($cxf)
        <spring.version>5.1.3.RELEASE</spring.version>
#elseif ($spring)
        <!-- v5 migration needed -->
        <spring.version>5.1.3.RELEASE</spring.version>
#end
        <!-- To override parent default settings for compiler plugin and compliance checks-->
        <dependencyConvergence>true</dependencyConvergence>
        <!-- Any of these configuration values can be overridden by the descendant, the default is JDK 1.6 >
        <java.runtime.version>1.7</java.runtime.version>
        <java.required.version>1.7</java.required.version>
        <java.source.version>1.7</java.source.version>
        <java.runtime.version>1.7</java.runtime.version>
        <compiler.showDeprecation>true</compiler.showDeprecation>
        <compiler.showWarnings>true</compiler.showWarnings>
        <compiler.argument>-Xlint:cast,unchecked,fallthrough,finally,serial</compiler.argument -->
        <!-- SCM user ID and Password here, or in user specific settings.xml file>
        <username></username>
        <password></password -->
    </properties>
    <profiles>
        <!--Profile configuration for local builds, activeByDefault, customize for your project -->
        <profile>
            <id>local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!--
                Change driver path and jar for appropriate database
                For MySQL use: mysql-connector-java-X-bin.jar
                For Hypersonic use: hsqldb.jar
                -->
                <jdbc.driver.jar>
#if ($ear)
                    <!-- JBoss gives classloader exceptions if the JDBC driver is bundled with the EAR -->
#if ($mysql)
                    ${jboss.home}/common/lib/mysql-connector-java-5.1.33.jar
#elseif ($oracle)
                    ${jboss.home}/common/lib/ojdbc14.jar
#elseif ($db2)
                    ${jboss.home}/common/lib/db2java.zip
#elseif ($informix)
                    ${jboss.home}/common/lib/ifxjdbc.jar
#elseif ($mssql)
                    ${jboss.home}/common/lib/Mssqlserver.jar
#elseif ($pointbase)
                    ${jboss.home}/common/lib/pbclient.jar
#elseif ($postgres)
                    ${jboss.home}/common/lib/postgresql.jar
#elseif ($sybase)
                    ${jboss.home}/common/lib/jconn2.jar
#elseif ($sapdb)
                    ${jboss.home}/common/lib/sapdbc.jar
#elseif ($progress)
                    ${jboss.home}/common/lib/progress.jar
#elseif ($derby)
                    ${jboss.home}/common/lib/derby.jar
#elseif ($h2)
                    ${jboss.home}/common/lib/h2.jar
#elseif ($hypersonic)
                    ${jboss.home}/common/lib/hsqldb.jar
#end
#else
#if ($mysql)
                    /path/to/mysql/lib/mysql-connector-java-5.1.33.jar
#elseif ($oracle)
                    /path/to/oracle/jdbc/lib/ojdbc14.jar
#elseif ($db2)
                    /path/to/db2/java/db2java.zip
#elseif ($informix)
                    /path/to/informix/lib/ifxjdbc.jar
#elseif ($mssql)
                    /path/to/SQLServerh/java/Mssqlserver.jar
#elseif ($pointbase)
                    /path/to/pointbase/lib/pbclient.jar
#elseif ($postgres)
                    /path/to/postgres/lib/postgresql.jar
#elseif ($sybase)
                    /path/to/sybase/java/jconn2.jar
#elseif ($sapdb)
                    /path/to/sapdb/lib/sapdbc.jar
#elseif ($progress)
                    /path/to/progress/lib/progress.jar
#elseif ($derby)
                    /path/to/derby/lib/derby.jar
#elseif ($h2)
                    /path/to/h2/lib/h2.jar
#elseif ($hypersonic)
                    /path/to/hsqldb/lib/hsqldb.jar
#end
#end
                </jdbc.driver.jar>
                <!--
                    Change driver for appropriate database
                    For H2 use: org.h2.Driver
                    For MySQL use: com.mysql.jdbc.Driver
                    For Hypersonic use: org.hsqldb.jdbcDriver
                    For Oracle9i use: oracle.jdbc.driver.OracleDriver
                    For DB2 use: COM.ibm.db2.jdbc.app.DB2Driver
                    For Informix use: com.informix.jdbc.IfxDriver
                    For MSSQL use: com.microsoft.jdbc.sqlserver.SQLServerDriver
                    For Pointbase use: com.pointbase.jdbc.jdbcUniversalDriver
                    For Postgres use: org.postgresql.Driver
                    For Sybase use: com.sybase.jdbc2.jdbc.SybDataSource
                    For SapDB use: com.sap.dbtech.jdbc.DriverSapDB
                    For Progress use: com.progress.sql.jdbc.JdbcProgressDriver
                    For Derby use: org.apache.derby.jdbc.EmbeddedDriver
                -->
                <jdbc.driver>
#if ($mysql)
                    com.mysql.jdbc.Driver
#elseif ($oracle)
                    oracle.jdbc.driver.OracleDriver
#elseif ($db2)
                    COM.ibm.db2.jdbc.app.DB2Driver
#elseif ($informix)
                    com.informix.jdbc.IfxDriver
#elseif ($mssql)
                    com.microsoft.jdbc.sqlserver.SQLServerDriver
#elseif ($pointbase)
                    com.pointbase.jdbc.jdbcUniversalDriver
#elseif ($postgres)
                    org.postgresql.Driver
#elseif ($sybase)
                    com.sybase.jdbc2.jdbc.SybDataSource
#elseif ($sapdb)
                    com.sap.dbtech.jdbc.DriverSapDB
#elseif ($progress)
                    com.progress.sql.jdbc.JdbcProgressDriver
#elseif ($derby)
                    org.apache.derby.jdbc.EmbeddedDriver
#elseif ($h2)
                    org.h2.Driver
#elseif ($hypersonic)
                    org.hsqldb.jdbcDriver
#end
                </jdbc.driver>
                <!--
                    Change connection url for appropriate database
                    For H2 use: jdbc:h2:~/$applicationId
                    For MySQL use: jdbc:mysql://localhost:3306/$applicationId
                    For Hypersonic use: jdbc:hsqldb:hsql://127.0.0.1/$applicationId or jdbc:hsqldb:file:<path>/$applicationId;shutdown=true
                    For Oracle9i use: jdbc:oracle:thin:@localhost:1521:yoursid
                    For DB2 use: jdbc:db2:$applicationId
                    For Informix use: jdbc:informix-sqli://localhost:1557/${applicationId}:INFORMIXSERVER=myserver
                    For MSSQL use: jdbc:microsoft:sqlserver://localhost:1433;DatabaseName=$applicationId
                    For Pointbase use: jdbc:pointbase:server://@pointbase.server@:@pointbase.port/pointbase.${applicationId}@,new
                    For Postgres use: jdbc:postgresql://localhost/$applicationId
                    For Sybase use: jdbc:sybase:Tds:localhost:5000/${applicationId}?JCONNECT_VERSION=6
                    For SapDB use: jdbc:sapdb://127.0.0.1/$applicationId
                    For Progress use: jdbc:JdbcProgress:T:localhost:3305:$applicationId
                -->
                <jdbc.url>
#if ($mysql)
                    jdbc:mysql://localhost:3306/$applicationId
#elseif ($oracle)
                    jdbc:oracle:thin:@localhost:1521:yoursid
#elseif ($db2)
                    jdbc:db2:$applicationId
#elseif ($informix)
                    jdbc:informix-sqli://localhost:1557/${applicationId}:INFORMIXSERVER=myserver
#elseif ($mssql)
                    jdbc:microsoft:sqlserver://localhost:1433;DatabaseName=$applicationId
#elseif ($pointbase)
                    jdbc:pointbase:server://@pointbase.server@:@pointbase.port/pointbase.${applicationId}@,new
#elseif ($postgres)
                    jdbc:postgresql://localhost/$applicationId
#elseif ($sybase)
                    jdbc:sybase:Tds:localhost:5000/${applicationId}?JCONNECT_VERSION=6
#elseif ($sapdb)
                    jdbc:sapdb://127.0.0.1/$applicationId
#elseif ($progress)
                    jdbc:JdbcProgress:T:localhost:3305:$applicationId
#elseif ($derby)
                    jdbc:derby:$applicationId
#elseif ($h2)
                    jdbc:h2:~/$applicationId
#elseif ($hypersonic)
#if ($jetty || $tomcat)
                    jdbc:hsqldb:file:database/${applicationId};shutdown=true
#else
                    jdbc:hsqldb:mem:${applicationId}
#end
#end
                </jdbc.url>
                <!-- Enter id/password for the database connection -->
                <jdbc.username>
#if ($mysql)
                    $applicationId
#elseif ($oracle)
                    SYSTEM
#elseif ($db2)
                    db2admin
#elseif ($informix)
                    informix
#elseif ($mssql || $sybase || $hypersonic || $h2)
                    sa
#elseif ($pointbase)
                    pointbase
#elseif ($postgres)
                    postgres
#elseif ($sapdb)
                    sap
#elseif ($progress)
                    progress
#elseif ($derby)
                    derby
#else
                    sa
#end
                </jdbc.username>
                <jdbc.password>#if(!$hypersonic)$applicationId#end</jdbc.password>
                <!--
                    Change exception sorter class name for appropriate database
                    For H2 use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For MySQL use: org.jboss.resource.adapter.jdbc.vendor.MySQLExceptionSorter
                    For Hypersonic use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For Oracle9i use: org.jboss.resource.adapter.jdbc.vendor.OracleExceptionSorter
                    For DB2 use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For Informix use: org.jboss.resource.adapter.jdbc.vendor.InformixExceptionSorter
                    For MSSQL use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For Pointbase use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For Postgres use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For Sybase use: org.jboss.resource.adapter.jdbc.vendor.SybaseExceptionSorter
                    For SapDB use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                    For Progress use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                -->
                <jdbc.exception.sorter>
#if ($mysql)
                    org.jboss.resource.adapter.jdbc.MySQLExceptionSorter
#elseif ($oracle)
                    org.jboss.resource.adapter.jdbc.OracleExceptionSorter
#elseif ($informix)
                    org.jboss.resource.adapter.jdbc.InformixExceptionSorter
#elseif ($sybase)
                    org.jboss.resource.adapter.jdbc.SybaseExceptionSorter
#else
                    org.jboss.resource.adapter.jdbc.NullExceptionSorter
#end
                </jdbc.exception.sorter>
#if (!$webservice.equals("none"))
                <!-- Change this to the host on which your webapp/service will be deployed -->
                <service.host>localhost</service.host>
#end
#if ($cxf || $jetty || $tomcat)
                <!-- Change this the port on which your webapp/service will be deployed -->
                <service.port>8080</service.port>
#end
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.andromda.maven.plugins</groupId>
                            <artifactId>andromdapp-maven-plugin</artifactId>
                            <version>${andromda.version}</version>
                            <!-- provides the injection of the script wrapper support into the class files (this should only
                                 be done when developing locally), uncomment this executions element to enable
                            <executions>
                                <execution>
                                    <id>instrument-scripts</id>
                                    <goals>
                                        <goal>instrument-scripts</goal>
                                    </goals>
                                </execution>
                            </executions>
                            -->
                            <configuration>
                                <scriptWrapper>org.andromda.scriptwrappers.GroovyScriptWrapper</scriptWrapper>
                                <locations>
                                    <location>
                                        <rootPath>${project.basedir}/src/main/java</rootPath>
                                        <!-- adjust these to include or exclude specific files, by default
                                             all files found in the rootPath are considered
                                        <includes>
                                            <include>relative/path/to/file/to/include/SomeClass.java</include>
                                        </includes>
                                        <excludes>
                                            <exclude>relative/path/to/file/to/include/SomeClass.java</exclude>
                                        </excludes>
                                        -->
                                    </location>
                                </locations>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
            <!-- Customize for your project -->
#if ($stringUtils.isNotBlank($distributionManagementRepositoryUrl) && !$distributionManagementRepositoryUrl.equals('$distributionManagementRepositoryUrl'))
            <distributionManagement>
                <repository>
                    <id>$distributionManagementRepositoryId</id>
                    <url>$distributionManagementRepositoryUrl</url>
                    <uniqueVersion>true</uniqueVersion>
                </repository>
                <snapshotRepository>
                    <id>$distributionManagementSnapshotRepositoryId</id>
                    <url>$distributionManagementSnapshotRepositoryUrl</url>
                    <uniqueVersion>false</uniqueVersion>
                </snapshotRepository>
                <site>
                    <id>website</id>
#if ($stringUtils.isNotBlank($website) && !$website.equals('$website'))
                    <url>$website</url>
#else
                    <url>file:/var/www/docs/$applicationId</url>
#end
                </site>
            </distributionManagement>
#else
            <!--distributionManagement>
                <repository>
                    <id>andromda-repository</id>
                    <name>AndroMDA Repository</name>
                    <url>file:/scratch/hudson/workspace/Andromda/$applicationId/</url>
                    <uniqueVersion>false</uniqueVersion>
                </repository>
                <snapshotRepository>
                    <id>andromda-snapshots</id>
                    <name>AndroMDA Snapshot Repository</name>
                    <url>file:/scratch/hudson/workspace/Andromda/$applicationId/</url>
                    <uniqueVersion>false</uniqueVersion>
                </snapshotRepository>
                <site>
                    <id>website</id>
#if ($stringUtils.isNotBlank($website) && !$website.equals('$website'))
                    <url>$website</url>
#else
                    <url>file:/scratch/hudson/workspace/Andromda/site/$applicationId/</url>
#end
                </site>
            </distributionManagement-->
#end
        </profile>
        <!-- Cloudbees WebDav: See https://github.com/CloudBees-community/maven-config-github-cloudbees/blob/master/pom.xml
            For deployment of andromda samples. Configure server id/password in settings.xml to deploy. -->
        <profile>
            <id>cloudbees</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <!-- Deploy releases and snapshots to the CloudBees maven repositories. Customize for your project if using Cloudbees, or remove. -->
            <distributionManagement>
              <repository>
                <id>andromdabuild-cloudbees-release</id>
                <name>andromdabuild-cloudbees-release</name>
                <!-- Webdav repository url are prefixed with dav: -->
                <url>dav:https://repository-andromdabuild.forge.cloudbees.com/release/</url>
                <uniqueVersion>true</uniqueVersion>
              </repository>
              <snapshotRepository>
                <id>andromdabuild-cloudbees-snapshot</id>
                <name>andromdabuild-cloudbees-snapshot</name>
                <url>dav:https://andromdabuild-javaetmoi.forge.cloudbees.com/snapshot/</url>
                <uniqueVersion>false</uniqueVersion>
              </snapshotRepository>
              <site>
                  <id>website</id>
                  <url>file:/scratch/hudson/workspace/Andromda/site/</url>
              </site>
            </distributionManagement>
            <repositories>
              <repository>
                <id>andromdabuild-cloudbees-release</id>
                <name>andromdabuild-cloudbees-release</name>
                <url>https://andromdabuild-javaetmoi.forge.cloudbees.com/release/</url>
                <releases>
                  <enabled>true</enabled>
                </releases>
                <snapshots>
                  <enabled>false</enabled>
                </snapshots>
              </repository>
              <repository>
                <id>andromdabuild-cloudbees-snapshot</id>
                <name>andromdabuild-cloudbees-snapshot</name>
                <url>https://repository-andromdabuild.forge.cloudbees.com/snapshot/</url>
                <releases>
                  <enabled>false</enabled>
                </releases>
                <snapshots>
                  <enabled>true</enabled>
                </snapshots>
              </repository>
            </repositories>
        </profile>
    </profiles>
    <repositories>
        <repository>
            <id>sonatype</id>
            <name>Sonatype AndroMDA Repository</name>
            <url>http://oss.sonatype.org/content/groups/public</url>
        </repository>
#if ($ejb3 || $jbossSeam)
        <repository>
            <id>jboss-public</id>
            <name>JBoss Repository</name>
            <url>http://repository.jboss.org/nexus/content/groups/public-jboss</url>
        </repository>
#end
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>sonatype</id>
            <name>Sonatype AndroMDA Repository</name>
            <url>http://oss.sonatype.org/content/groups/public</url>
        </pluginRepository>
    </pluginRepositories>
    <!-- Comment to disable project reporting using default maven plugins -->
    <reporting>
        <plugins>
            <plugin>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${maven-jxr-plugin.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven-project-info-reports-plugin.version}</version>
                <reportSets>
                  <reportSet>
                    <reports>
                      <report>cim</report>
                      <report>dependencies</report>
                      <report>dependency-convergence</report>
                      <report>dependency-management</report>
                      <report>help</report>
                      <report>index </report>
                      <report>issue-tracking</report>
                      <report>license</report>
                      <report>mailing-list</report>
                      <report>modules</report>
                      <report>plugin-management</report>
                      <report>plugins</report>
                      <report>project-team</report>
                      <report>scm</report>
                      <report>summary</report>
                    </reports>
                  </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <configuration>
                    <minmemory>128m</minmemory>
                    <maxmemory>1g</maxmemory>
                    <sourcepath>${project.basedir}/src/main/java;${project.basedir}/target/src/main/java</sourcepath>
                    <detectLinks/>
                    <links>
                                    <link>http://docs.oracle.com/javase/8/docs/api/</link>
                                    <link>http://docs.oracle.com/javaee/7/api/</link>
#if ($spring || $hibernate || $cxf)
                        <link>http://docs.jboss.org/hibernate/stable/orm/javadocs/</link>
                        <link>http://docs.spring.io/spring/docs/current/javadoc-api/</link>
#if ($cxf)
                        <link>http://cxf.apache.org/javadoc/latest/</link>
                        <link>http://jax-ws.java.net/nonav/jaxws-api/2.2/</link>
#end
#end
                        <link>http://jakarta.apache.org/commons/collections/apidocs/</link>
                        <link>http://jakarta.apache.org/commons/lang/apidocs/</link>
                        <link>http://jakarta.apache.org/commons/logging/apidocs/</link>
                        <link>http://logging.apache.org/log4j/1.2/apidocs/</link>
                        <link>http://junit.sourceforge.net/javadoc/</link>
                    </links>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven-surefire-report-plugin.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin.version}</version>
                <configuration>
                    <targetJdk>${java.runtime.version}</targetJdk>
                    <linkXRef>true</linkXRef>
                    <rulesets>
                        <ruleset>${pmd.ruleset}</ruleset>
                    </rulesets>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <configuration>
                    <configLocation>${checkstyle.configLocation}</configLocation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jdepend-maven-plugin</artifactId>
                <version>${jdepend-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-changes-plugin</artifactId>
                <version>${maven-changes-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>changes-report</report>
                            <!-- Uncomment if using JIRA -->
                            <!--report>jira-report</report-->
                        </reports>
                    </reportSet>
                </reportSets>
                <configuration>
                    <columnNames>Key,Type,Summary,Assignee,Status,Resolution,Priority,Component</columnNames>
                    <sortColumnNames>Key</sortColumnNames>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>taglist-maven-plugin</artifactId>
                <version>${taglist-maven-plugin.version}</version>
                <configuration>
                    <tagListOptions>
                        <tagClasses>
                            <tagClass>
                                <displayName>Todo Work</displayName>
                                <tags>
                                    <tag>
                                        <matchString>todo</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                    <tag>
                                        <matchString>FIXME</matchString>
                                        <matchType>exact</matchType>
                                    </tag>
                                    <tag>
                                        <matchString>XXX</matchString>
                                        <matchType>exact</matchType>
                                    </tag>
                                    <tag>
                                        <matchString>@deprecated</matchString>
                                        <matchType>exact</matchType>
                                    </tag>
                                </tags>
                            </tagClass>
                        </tagClasses>
                    </tagListOptions>
                </configuration>
            </plugin>
            <!-- Uncomment after configuring SCM connection>
            <plugin>
                <artifactId>maven-changelog-plugin</artifactId>
                <version>${maven-changelog-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <id>All Reports</id>
                        <configuration>
                            <type>range</type>
                            <range>90</range>
                            <dateFormat>yyyy-MM-dd HH:mm:ss</dateFormat>
                        </configuration>
                        <reports>
                            <report>changelog</report>
                            <report>file-activity</report>
                            <report>dev-activity</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin-->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <configuration>
                    <formats>
                        <format>html</format>
                        <format>xml</format>
                    </formats>
                </configuration>
            </plugin>
            <!-- Compare APIs to a previous version, uncomment when a release version exists -->
            <!--plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>clirr-maven-plugin</artifactId>
                <version>${clirr-maven-plugin.version}</version>
                <inherited>true</inherited>
                <configuration>
                    <minSeverity>info</minSeverity>
                </configuration>
            </plugin-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>javancss-maven-plugin</artifactId>
                <version>${javancss-maven-plugin.version}</version>
                <inherited>true</inherited>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${findbugs-maven-plugin.version}</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <effort>Default</effort>
                    <threshold>Normal</threshold>
                    <failOnError>false</failOnError>
                    <excludeFilterFile>${findbugs.excludeFilterFile}</excludeFilterFile>
                    <!--xmlOutputDirectory>directory location of findbugs xdoc xml report</xmlOutputDirectory>
                    <threshold>High|Normal|Low|Exp|Ignore</threshold>
                    <effort>Min|Default|Max</effort>
                    <includeFilterFile>findbugs-include.xml</includeFilterFile>
                    <visitors>FindDeadLocalStores,UnreadFields</visitors>
                    <omitVisitors>FindDeadLocalStores,UnreadFields</omitVisitors>
                    <onlyAnalyze>org.codehaus.mojo.findbugs.*</onlyAnalyze>
                    <pluginList>/libs/fb-contrib/fb-contrib-2.8.0.jar</pluginList>
                    <debug>true|false</debug>
                    <relaxed>true|false</relaxed>
                    <findbugsXmlOutput>true|false</findbugsXmlOutput>
                    <findbugsXmlOutputDirectory>location of legacy xml format report</findbugsXmlOutputDirectory-->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions-maven-plugin.version}</version>
                <reportSets>
                    <reportSet>
                      <reports>
                        <report>dependency-updates-report</report>
                        <report>plugin-updates-report</report>
                        <report>property-updates-report</report>
                      </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <!--plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>dashboard-maven-plugin</artifactId>
                <version>${dashboard-maven-plugin.version}</version>
            </plugin-->
            <!--plugin>
                <artifactId>maven-doap-plugin</artifactId>
                <version>${maven-doap-plugin.version}</version>
                <configuration>
                    <doapOptions>
                        <programmingLanguage>java</programmingLanguage>
                        <category>build-management</category>
                    </doapOptions>
                    <asfExtOptions>
                        <included>false</included>
                    </asfExtOptions>
                </configuration>
            </plugin-->
        </plugins>
    </reporting>
</project>
