<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>$applicationPackage</groupId>
        <artifactId>$applicationId</artifactId>
        <version>$applicationVersion</version>
    </parent>
    <artifactId>${applicationId}-web</artifactId>
    <packaging>war</packaging>
    <name>${applicationName} Web</name>
    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>${applicationId}-common</artifactId>
            <version>${project.version}</version>
#if ($ear)
            <scope>provided</scope>
#end
        </dependency>
#if (!$transactionPersistenceType.equals("none"))
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>${applicationId}-core</artifactId>
            <version>${project.version}</version>
#if ($ear)
            <type>ejb</type>
            <scope>provided</scope>
#end
       </dependency>
#end
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
#if ($ear)
            <scope>provided</scope>
#end
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
#if ($ear)
            <scope>provided</scope>
#end
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
#if ($ear)
            <scope>provided</scope>
#end
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
#if ($ear)
            <scope>provided</scope>
#end
        </dependency>
#if ($web)
        <dependency>
            <groupId>commons-digester</groupId>
            <artifactId>commons-digester</artifactId>
        </dependency>
        <dependency>
            <groupId>oro</groupId>
            <artifactId>oro</artifactId>
        </dependency>
#if ($struts)
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>struts</groupId>
            <artifactId>struts</artifactId>
        </dependency>
        <dependency>
            <groupId>displaytag</groupId>
            <artifactId>displaytag</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>jcl104-over-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

#elseif ($jsf)
#if ($jbossSeam)
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jboss-seam-debug</artifactId>
            <version>unknown</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/target/src/WEB-INF/lib/jboss-seam-debug.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jboss-seam-ui</artifactId>
            <version>unknown</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/target/src/WEB-INF/lib/jboss-seam-ui.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.tomahawk</groupId>
            <artifactId>tomahawk</artifactId>
            <version>1.1.14</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/target/src/WEB-INF/lib/tomahawk.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.trinidad</groupId>
            <artifactId>trinidad-api</artifactId>
            <version>1.2.9</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/target/src/WEB-INF/lib/trinidad-api-1.2.9.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.trinidad</groupId>
            <artifactId>trinidad-impl</artifactId>
            <version>1.2.9</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/target/src/WEB-INF/lib/trinidad-impl-1.2.9.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>org.cyberneko</groupId>
            <artifactId>nekohtml</artifactId>
            <version>unknown</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/target/src/WEB-INF/lib/nekohtml.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>org.ajax4jsf</groupId>
            <artifactId>ajax4jsf</artifactId>
            <version>1.1.1</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/target/src/WEB-INF/lib/ajax4jsf.jar</systemPath>
        </dependency>
#else
        <dependency>
            <groupId>org.apache.myfaces.core</groupId>
            <artifactId>myfaces-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.core</groupId>
            <artifactId>myfaces-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.tomahawk</groupId>
            <artifactId>tomahawk21</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.extensions.validator</groupId>
            <artifactId>myfaces-extval-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.extensions.validator.validation-modules</groupId>
            <artifactId>myfaces-extval-property-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.extensions.validator.validation-modules</groupId>
            <artifactId>myfaces-extval-bean-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.extensions.validator.component-support-modules</groupId>
            <artifactId>myfaces-extval-generic-support</artifactId>
        </dependency>
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
#if ($ear)
            <scope>provided</scope>
#end
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
#if ($ear)
            <scope>provided</scope>
#end
        </dependency>
#end
        <dependency>
            <groupId>org.andromda</groupId>
            <artifactId>andromda-utils</artifactId>
        </dependency>
#end
        <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>el-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
#end
        <dependency>
            <groupId>org.andromda</groupId>
            <artifactId>andromda-script-wrappers</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-all-7.0</artifactId>
        </dependency>
#if ($ejb3)
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
        </dependency>
#end
#if ($spring)
#if ($ear)
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <scope>provided</scope>
        </dependency>
#end
	<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
#if ($ear)
            <scope>provided</scope>
#end
        </dependency>
#end
#if ($jetty || $tomcat)
#if ($mysql)
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
#elseif ($postgres)
        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
#elseif ($derby)
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
        </dependency>
#elseif ($h2)
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
#elseif ($hypersonic)
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
        </dependency>
#else
        <!-- add the database jdbc dependency -->
#end
#end
    </dependencies>
    <build>
#if ($war)
        <finalName>${application.id}</finalName>
#end
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <targetPath>${project.basedir}/target/src/main/webapp</targetPath>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <target>
                        <copy todir="${project.basedir}/target/src/main/webapp" overwrite="true" failonerror="false">
                            <fileset dir="${project.basedir}/src/main/webapp">
                                <include name="**/*"/>
                            </fileset>
                        </copy>
                    </target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven-war-plugin.version}</version>
                <configuration>
                    <warSourceDirectory>target/src/main/webapp</warSourceDirectory>
                    <!-- Needed for mvn 2.1 with war-plugin 2.1. See http://jira.codehaus.org/browse/MWAR-187 -->
                    <useCache>false</useCache>
                    <excludes>**/*.java</excludes>
                    <archive>
                        <manifest>
                          <addClasspath>true</addClasspath>
                          <useUniqueVersions>false</useUniqueVersions>
                          <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                          <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                        <manifestEntries>
                          <Implementation-Build>${maven.build.timestamp}</Implementation-Build>
                          <url>${project.url}</url>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.andromda.maven.plugins</groupId>
                <artifactId>andromdapp-maven-plugin</artifactId>
#if (!$ear)
                <executions>
                    <execution>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <deployLocation>${tomcat.home}/webapps</deployLocation>
                </configuration>
#end
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
#if ($jetty)
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <configuration>
                    <connectors>
                       <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                          <port>${service.port}</port>
                          <maxIdleTime>60000</maxIdleTime>
                       </connector>
                    </connectors>
                    <webAppSourceDirectory>${project.basedir}/target/src/main/webapp</webAppSourceDirectory>
                    <webAppConfig>
                        <contextPath>/${application.id}-${project.version}</contextPath>
                    </webAppConfig>
                    <useProvidedScope>true</useProvidedScope>
                    <scanIntervalSeconds>5</scanIntervalSeconds>
                    <stopKey>foo</stopKey>
                    <stopPort>9999</stopPort>
                    <stopWait>5</stopWait>
                </configuration>
                <executions>
                    <execution>
                        <id>start-jetty</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                           <scanIntervalSeconds>0</scanIntervalSeconds>
                           <daemon>true</daemon>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-jetty</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
#end
#if ($tomcat)
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
#if (!$cxf)
                <configuration>
                    <path>/${project.build.finalName}</path>
                    <port>${service.port}</port>
                    <warDirectory>target/${project.build.finalName}</warDirectory>
                    <ignorePackaging>true</ignorePackaging>
                </configuration>
                <executions>
                    <execution>
                        <id>tomcat-run</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <fork>true</fork>
                        </configuration>
                    </execution>
                    <execution>
                        <id>tomcat-shutdown</id>
                        <goals>
                            <goal>shutdown</goal>
                        </goals>
                        <phase>post-integration-test</phase>
                    </execution>
                </executions>
#end
            </plugin>
#end
        </plugins>
    </build>
</project>