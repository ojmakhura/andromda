// Generated by andromda-angular cartridge (view\components\component.ts.vsl) DO NOT EDIT
import {
  AfterViewInit,
  Component,
  effect,
  inject, OnDestroy,
  OnInit,
  signal,
  ViewChild
} from "@angular/core";
import {
  FormGroup,
  FormsModule,
  ReactiveFormsModule
} from "@angular/forms";
import { CommonModule, NgComponentOutlet } from '@angular/common';
import { TranslateModule } from '@ngx-translate/core';
import { SharedModule } from '@app/@shared';
import { MaterialModule } from '@app/material.module';
import { ItemTemplateStore } from "@app/state/item/template/item-template.store";
import { MAT_DIALOG_DATA, MatDialogRef } from "@angular/material/dialog";
import { FleetItemDTO } from "@app/model/item/fleet-item-dto";
import { FleetItemTemplateEditorComponent } from "@app/view/item/template/editor/fleet-item-template-editor.component";
import { GenericComponent } from "@app/view/generic.component";

@Component({
  selector: "app-dialog",
  templateUrl: "./dialog.component.html",
  styleUrls: [],
  standalone: true,
  imports: [
    CommonModule,
    FormsModule,
    ReactiveFormsModule,
    TranslateModule,
    SharedModule,
    MaterialModule,
    NgComponentOutlet
  ]
})
export class DialogComponent<T extends GenericComponent> implements OnInit, OnDestroy, AfterViewInit {

  readonly dialogRef = inject(MatDialogRef<DialogComponent<T>>);
  readonly data = inject(MAT_DIALOG_DATA);

  // readonly store = inject(ItemTemplateStore);
  // readonly itemTemplate = this.store.data;  
  @ViewChild(NgComponentOutlet, {static: false}) dialogChild: NgComponentOutlet | any;
  formValid = signal(false);

  constructor() {
  }

  ngOnInit(): void {
  }

  ngOnDestroy(): void {
  }

  ngAfterViewInit(): void {
    const componentInstance = this.dialogChild['_componentRef'].instance;
    let formGroup = componentInstance.formGroupControl;

    formGroup.valueChanges.subscribe(() => {
      this.formValid.set(formGroup.valid);
    });

  }

  save() {
    this.dialogRef.close(this.dialogChild);
  }

  doDialogAction(action: string) {

    const componentInstance = this.dialogChild['_componentRef'].instance;

    this.dialogRef.close({
      action: action,
      value: componentInstance.formGroupControl.value
    });
  }

  close() {
    this.dialogRef.close();
  }
}