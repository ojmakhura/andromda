// license-header java merge-point
//
// Generated by SessionBeanImpl.vsl in andromda-ejb3-cartridge on 08/06/2014 10:56:22.
// Modify as necessary. If deleted it will be regenerated.
//
package org.andromda.demo.ejb3.employee;

import java.util.Collection;

/**
 * @see EmployeeServiceBase
 *
 * Remember to manually configure the local business interface this bean implements if originally you only
 * defined the remote business interface.  However, this change is automatically reflected in the ejb-jar.xml.
 *
 * Do not specify the jakarta.ejb.Stateless annotation
 * Instead, the session bean is defined in the ejb-jar.xml descriptor.
 */
// Uncomment to enable webservices for EmployeeServiceBean
// @javax.jws.WebService(endpointInterface = "org.andromda.demo.ejb3.employee.EmployeeServiceWSInterface", serviceName = "EmployeeService")
public class EmployeeServiceBean
    extends EmployeeServiceBase
    implements EmployeeServiceRemote
{
    // --------------- Constructors ---------------

    /**
     * Default constructor extending base class default constructor
     */
    public EmployeeServiceBean()
    {
        super();
    }

    // -------- Business Methods Impl --------------

    /**
     * @see EmployeeServiceBase#addEmployee(Employee)
     */
    @Override
    protected int handleAddEmployee(Employee employee)
        throws Exception
    {
        return getEmployeeDao().create(employee).getId();
    }

    /**
     * @see EmployeeServiceBase#getEmployee(int)
     */
    @Override
    protected Employee handleGetEmployee(int id)
        throws Exception
    {
        return getEmployeeDao().load(id);
    }

    /**
     * @see EmployeeServiceBase#getAllEmployees()
     */
    @Override
    protected Collection handleGetAllEmployees()
        throws Exception
    {
        return getEmployeeDao().loadAll();
    }

    /**
     * @see EmployeeServiceBase#getEmployeesByContract(EmployeeContractType)
     */
    @Override
    protected Collection handleGetEmployeesByContract(EmployeeContractType contractType)
        throws Exception
    {
        return getEmployeeDao().findByContractType(contractType);
    }

    // -------- Lifecycle Callback Implementation --------------
}
