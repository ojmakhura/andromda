<?xml version="1.0" encoding="UTF-8" ?>

<profile>
    <documentation>
    </documentation>
    <elements>
        <elementGroup name="Stereotypes">
            <element name="MANIFEST">
                <documentation>
                    Says that an artifact implements a component.
                </documentation>
                <value>manifest</value>
                <appliedOnElement>dependency</appliedOnElement>
            </element>
            <element name="WRAPS">
                <documentation> Says that an artifact wraps a package, i.e. inside an artifact (e.g. a jar file),
                    there can be one or more packages.
                </documentation>
                <value>wraps</value>
                <appliedOnElement>dependency</appliedOnElement>
            </element>
        </elementGroup>
<!--
        <elementGroup name="Tagged Values">
            <documentation>
                The tagged values which apply to the Spring namespace.
            </documentation>
            <element name="EJB_TRANSACTION_TYPE">
                <documentation>
                    Defines an EJB transaction type for the service operation (when wrapped
                    by EJBs)
                </documentation>
                <value>andromda_ejb_transaction_type</value>
                <appliedOnElement>Service Operation</appliedOnElement>
                <allowedValues>
                    <value>NotSupported</value>
                    <value>Supports</value>
                    <value>Required</value>
                    <value>RequiresNew</value>
                    <value>Mandatory</value>
                    <value>Never</value>
                </allowedValues>
            </element>
            <element name="EJB_VIEW_TYPE">
                <documentation>
                    Defines an EJB service's view type (when Spring services are wrapped by
                    EJBs).
                </documentation>
                <value>andromda_ejb_viewType</value>
                <appliedOnElement>Service</appliedOnElement>
                <allowedValues>
                    <value>local</value>
                    <value>remote</value>
                </allowedValues>
            </element>
            <element name="TRANSACTION_TYPE">
                <documentation>
                    Defines a Spring transaction type for the service operation
                    (when <strong>NOT</strong> wrapped by EJBs).
                </documentation>
                <value>andromda_spring_transaction_type</value>
                <appliedOnElement>Service Operation</appliedOnElement>
                <allowedValues>
                    <value>PROPAGATION_NEVER</value>
                    <value>PROPAGATION_NESTED</value>
                    <value>PROPAGATION_MANDATORY</value>
                    <value>PROPAGATION_REQUIRED</value>
                    <value>PROPAGATION_REQUIRES_NEW</value>
                    <value>PROPAGATION_SUPPORTS</value>
                    <value>PROPAGATION_NOT_SUPPORTED</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_QUERY">
                <documentation>
                    Defines a hibernate query expression. Note that it's encouraged
                    to model your query body as an OCL constraint (instead of using
                    this tagged value).
                </documentation>
                <value>andromda_hibernate_query</value>
                <appliedOnElement>An Entity operation marked as a
                    <code>query</code>.
                </appliedOnElement>
            </element>
            <element name="HIBERNATE_USE_NAMED_PARAMETERS">
                <documentation>
                    Defines whether the marked finder will use named parameters or not.
                </documentation>
                <value>andromda_hibernate_query_useNamedParameters</value>
                <appliedOnElement>An Entity operation marked as a
                    <code>query</code>.
                </appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_INHERITANCE">
                <documentation></documentation>
                <value>andromda_hibernate_inheritance</value>
            </element>
            <element name="SPRING_SERVICE_REMOTING_TYPE">
                <documentation>
                    Services marked with this stereotype will be exported using Spring's remoting
                    architecture.
                </documentation>
                <value>andromda_spring_service_remoting_type</value>
                <appliedOnElement><![CDATA[<<Service>>]]></appliedOnElement>
                <allowedValues>
                    <value>none</value>
                    <value>rmi</value>
                    <value>httpinvoker</value>
                    <value>burlap</value>
                    <value>hessian</value>
                </allowedValues>
            </element>
            <element name="SPRING_SERVICE_REMOTE_PORT">
                <documentation>
                    Sets the port this service will be exported on. You must also tag the
                    service using <a href="#andromda_spring_service_remote_port">andromda_spring_service_remote_port</a>.
                </documentation>
                <value>andromda_spring_service_remote_port</value>
                <appliedOnElement><![CDATA[<<Service>>]]></appliedOnElement>
            </element>
            <element name="SPRING_SERVICE_INTERCEPTORS">
                <documentation>
                    Sets a list of additional interceptors to be applied to the service's ProxyBeanFactory declaration.
                    They will be listed after the serviceSecurityInterceptor, serviceTransactionInterceptor and
                    hibernateInterceptor if present.
                </documentation>
                <value>andromda_spring_service_interceptors</value>
                <appliedOnElement><![CDATA[<<Service>>]]></appliedOnElement>
            </element>
            <element name="SPRING_SERVICE_CONFIG_ONLY">
                <documentation>
                    Set this tagged value to true in order to suppress generation of the bean class. The bean will be
                    listed in the applicationContext.xml files, however. The idea behind this tagged value is to enable
                    users to use Spring beans that are contained in Jar files,
                    e.g. <code>org.springframework.security.providers.rcp.RemoteAuthenticationManager</code>.
                </documentation>
                <value>andromda_spring_service_config_only</value>
                <appliedOnElement><![CDATA[<<Service>>]]></appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_CRITERIA_NULLABLE">
                <documentation>
                    If this tagged value is set to <code>true</code>, the tagged attribute will be considered in the
                    search even if it is <code>null</code>. Use this feature to query entities that have attributes
                    that may be <code>NULL</code> (in the sense of SQL).
                </documentation>
                <value>andromda_hibernate_criteria_nullable</value>
                <appliedOnElement>an attribute of a <![CDATA[<<Criteria>>]]> class</appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_CRITERIA_ATTRIBUTE">
                <documentation>
                    Sets the name of the attribute on the hibernate entity that should be added to a criteria
                    search. If the attribute you want to search for is not in the entity itself, but rather in
                    an associated class, you can use a fully qualified name here. Assume you have two entites
                    <code>Person</code> and <code>Address</code>, the address being referenced as a one-to-one
                    relationship with the role name <code>homeAddress</code> and the address having an attribute
                    named "city". If you want to retrieve all people living in Hamburg, simply set the value of
                    this tagged value to <code>homeAddress.city</code>.
                    If you ommit this tagged value, the name of the attribute in the criteria class will be used.
                </documentation>
                <value>andromda_hibernate_criteria_attribute</value>
                <appliedOnElement>an attribute of a <![CDATA[<<Criteria>>]]> class</appliedOnElement>
            </element>
            <element name="HIBERNATE_CRITERIA_COMPARATOR">
                <documentation>
                    Using this tagged value to define the logical condition for the underlying attribute in the query is set.
                </documentation>
                <value>andromda_hibernate_criteria_comparator</value>
                <appliedOnElement>an attribute of a <![CDATA[<<Criteria>>]]> class</appliedOnElement>
                <allowedValues>
                    <value>like</value>
                    <value>insensitive_like</value>
                    <value>equal</value>
                    <value>greater</value>
                    <value>greater_equal</value>
                    <value>less</value>
                    <value>less_equal</value>
                    <value>in</value>
                    <value>not_equal</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_CRITERIA_MATCHMODE">
                <documentation>
                    Use this value to denote the hibernate matchmode to be used for comparing strings.
                </documentation>
                <value>andromda_hibernate_criteria_matchmode</value>
                <appliedOnElement>an attribute of a <![CDATA[<<Criteria>>]]> class</appliedOnElement>
                <allowedValues>
                    <value>anywhere</value>
                    <value>start</value>
                    <value>end</value>
                    <value>exact</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_CRITERIA_ORDER_DIRECTION">
                <documentation>
                    Using this tagged value, you can determine the sort order of the result set.
                </documentation>
                <value>andromda_hibernate_criteria_order_direction</value>
                <appliedOnElement>an attribute of a <![CDATA[<<Criteria>>]]> class</appliedOnElement>
                <allowedValues>
                    <value>ascending</value>
                    <value>descending</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_CRITERIA_ORDER_RELEVANCE">
                <documentation>
                    Use this tagged value to determine the relevance of this ordering. You may enter any
                    integer value. The smaller the value, the more relevant the ordering will be.
                </documentation>
                <value>andromda_hibernate_criteria_order_relevance</value>
                <appliedOnElement>an attribute of a <![CDATA[<<Criteria>>]]> class</appliedOnElement>
                <allowedValues>
                    <value>an integer</value>
                </allowedValues>
            </element>
        </elementGroup>
        <elementGroup name="Constants">
            <documentation>
                Values of contants used in the Spring namespace.
            </documentation>
            <element name="LIKE_COMPARATOR">
                <documentation></documentation>
                <value>like</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="INSENSITIVE_LIKE_COMPARATOR">
                <documentation></documentation>
                <value>insensitive_like</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="EQUAL_COMPARATOR">
                <documentation></documentation>
                <value>equal</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="GREATER_THAN_OR_EQUAL_COMPARATOR">
                <documentation></documentation>
                <value>greater_equal</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="GREATER_THAN_COMPARATOR">
                <documentation></documentation>
                <value>greater</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="LESS_THAN_OR_EQUAL_COMPARATOR">
                <documentation></documentation>
                <value>less_equal</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="LESS_THAN_COMPARATOR">
                <documentation></documentation>
                <value>less</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="IN_COMPARATOR">
                <documentation></documentation>
                <value>in</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="NOT_EQUAL_COMPARATOR">
                <documentation></documentation>
                <value>not_equal</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="MATCHMODE_ANYWHERE">
                <documentation></documentation>
                <value>anywhere</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="MATCHMODE_END">
                <documentation></documentation>
                <value>end</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="MATCHMODE_EXACT">
                <documentation></documentation>
                <value>exact</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="MATCHMODE_START">
                <documentation></documentation>
                <value>start</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="ORDER_ASCENDING">
                <documentation></documentation>
                <value>ascending</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="ORDER_DESCENDING">
                <documentation></documentation>
                <value>descending</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
        </elementGroup>
-->
    </elements>
</profile>