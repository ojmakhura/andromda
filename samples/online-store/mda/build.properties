# REVIEW EACH SETTING HERE AND VERIFY IT MATCHES YOUR ENVIRONMENT!
# When you are done, set "properties.reviewed" to "true"

# ======== These items you need to change ===============================================================

# The directory where the generated project to be tested is located - use for standalone ant
andromda.project=/mnt/2TB/programming/maven/andromda/samples/online-store
# The directory where the source control workarea is located - use for standalone ant
project=/mnt/2TB/programming/maven/andromda/samples/online-store


# Fail on error for ant commands
FOE=true

# Record logs output dir
LOG_DIR=/mnt/2TB/programming/maven/andromda/samples/online-store/mda/logs

# Change to '-o' after initial mvn run, to speed up generate process. It fails if run with -o the first time of the day.
# Change to '-U' to force updates from internal repository.
offline=

# Only needed for AndroMDA ant task
andromda.model.uri=file:${project}/mda/src/main/uml/online-store.emx

# Set this to "true" when finished reviewing this file
properties.reviewed=false

# ======== These items you MAY want to change ===========================================================

application.id=online-store
application.version=4.0-SNAPSHOT
# For multi-model builds, the starting model name (generates first, no dependencies on other models)
initialModel=online-store
# incremental, full, clean supported for each project
eclipse.build.type=incremental

# ======== These items are probably set to good defaults, but you may want to review ====================

andromda.version=4.0-SNAPSHOT

# The jboss installation path for local deployment/testing
jboss.installation.path=${env.JBOSS_HOME}

# The path to the deployment directory for local testing
jboss.default.deploy.dir=${jboss.installation.path}/server/default/deploy

# The remoting mechanism to use
remote.type=httpinvoker
remote.server=127.0.0.1
remote.port=${service.port}

#I think these dir variables are outdated, but I'm reluctant to remove
source.client.base.dir=client/src
source.client.impl.dir=${source.client.base.dir}/main
source.client.impl.dir.java=${source.client.impl.dir}/java
source.client.codeGen.dir=${source.client.base.dir}/generated
source.client.codeGen.dir.java=${source.client.codeGen.dir}/java
source.client.codeGen.dir.config=${source.client.codeGen.dir}/config
source.client.testCode.dir=${source.client.base.dir}/test
source.client.testCode.dir.java=${source.client.testCode.dir}/java
source.client.testCode.dir.config=${source.client.testCode.dir}/config

source.common.base.dir=common/src
source.common.impl.dir=${source.common.base.dir}/main
source.common.impl.dir.java=${source.common.impl.dir}/java
source.common.codeGen.dir=${source.common.base.dir}/generated
source.common.codeGen.dir.java=${source.common.codeGen.dir}/java
source.common.codeGen.dir.config=${source.common.codeGen.dir}/config

source.server.base.dir=server/src
source.server.impl.dir=${source.server.base.dir}/main
source.server.impl.dir.java=${source.server.impl.dir}/java
source.server.codeGen.dir=${source.server.base.dir}/generated
source.server.codeGen.dir.java=${source.server.codeGen.dir}/java
source.server.codeGen.dir.config=${source.server.codeGen.dir}/config
source.server.codeGen.dir.sql=${source.server.codeGen.dir}/sql
source.server.testCode.dir=${source.server.base.dir}/test
source.server.testCode.dir.java=${source.server.testCode.dir}/java
source.server.testCode.dir.config=${source.server.testCode.dir}/config

andromda.cartridgeFilter=

andromda.mappings.dir=${project}/mda/src/mappings

# The directory where the AndroMDA binary distribution is stored
andromda.dist.dir=${m2repo}/org/andromda
# The directory where the jalopy jar hierarchy is located (including ant build tasks)

# These are only needed if running the ant task AndroMDAGenTask, because it
# doesn't transfer property settings from higher level mda/pom.xml
validation=true
conf.dir=${project}/mda/config
core.generated.dir=${project}/core/target/src/main/java
core.manual.dir=${project}/core/src
web.generated.dir=${project}/web/target/src/main/java
web.manual.dir=${project}/web
web.manual.java.dir=${web.manual.dir}/java
webservice.generated.dir=${project}/webservice/target/src/main/java
common.generated.dir=${project}/common/target/src/main/java
settings.localRepository=${m2repo}
